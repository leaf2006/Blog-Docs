<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Python asyncio 异步协程百万并发</title>
    <link href="/2021/08/18/Python%E5%BC%82%E6%AD%A5%E5%8D%8F%E7%A8%8B/"/>
    <url>/2021/08/18/Python%E5%BC%82%E6%AD%A5%E5%8D%8F%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="Python-asyncio-异步协程百万并发"><a href="#Python-asyncio-异步协程百万并发" class="headerlink" title="Python asyncio 异步协程百万并发"></a>Python asyncio 异步协程百万并发</h1><h2 id="协程（coroutine）"><a href="#协程（coroutine）" class="headerlink" title="协程（coroutine）"></a><strong>协程（coroutine）</strong></h2><blockquote><p>本质就是一个<strong>函数</strong></p></blockquote><h2 id="事件循环——-event-loop"><a href="#事件循环——-event-loop" class="headerlink" title="事件循环——(event_loop)"></a><strong>事件循环</strong>——(event_loop)</h2><p><strong>协程函数</strong>，不是像普通函数那样直接调用运行的，必须<strong>添加到事件循环</strong>中，然后由<strong>事件循环</strong>去运行，单独运行协程函数是不会有结果的，看一个简单的例子：</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<span class="hljs-keyword">import</span> asyncio<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">say_after_time</span>(<span class="hljs-params">delay,what</span>):</span>        <span class="hljs-keyword">await</span> asyncio.sleep(delay)        <span class="hljs-built_in">print</span>(what) <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;开始时间为： <span class="hljs-subst">&#123;time.time()&#125;</span>&quot;</span>)        <span class="hljs-keyword">await</span> say_after_time(<span class="hljs-number">1</span>,<span class="hljs-string">&quot;hello&quot;</span>)        <span class="hljs-keyword">await</span> say_after_time(<span class="hljs-number">2</span>,<span class="hljs-string">&quot;world&quot;</span>)        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;结束时间为： <span class="hljs-subst">&#123;time.time()&#125;</span>&quot;</span>) loop=asyncio.get_event_loop()    <span class="hljs-comment">#创建事件循环对象</span><span class="hljs-comment"># loop=asyncio.new_event_loop()   #与上面等价，创建新的事件循环</span>loop.run_until_complete(main())  <span class="hljs-comment">#通过事件循环对象运行协程函数</span>loop.close()</code></pre></div><p>在python3.6版本中，如果我们单独像执行普通函数那样执行一个协程函数，只会返回一个coroutine对象（python3.7）如下所示：</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>main()&lt;coroutine <span class="hljs-built_in">object</span> main at <span class="hljs-number">0x1053bb7c8</span>&gt;</code></pre></div><h3 id="获取事件循环对象的几种方式"><a href="#获取事件循环对象的几种方式" class="headerlink" title="获取事件循环对象的几种方式"></a>获取事件循环对象的几种方式</h3><div class="hljs code-wrapper"><pre><code class="hljs ini"><span class="hljs-attr">loop</span> = asyncio.get_event_loop()</code></pre></div><p>它是python3.7中新添加的，<strong>获得一个事件循环</strong>，如果当前线程<strong>还没有事件循环</strong>，则<strong>创建一个新的事件循环loop；</strong></p><h3 id="通过事件循环运行协程函数的两种方式"><a href="#通过事件循环运行协程函数的两种方式" class="headerlink" title="通过事件循环运行协程函数的两种方式"></a>通过事件循环运行协程函数的两种方式</h3><ol><li><p>创建事件循环对象loop，即<code>asyncio.get_event_loop()</code>，<strong>通过事件循环运行协程函数</strong>.</p></li><li><p>直接通过<code>asyncio.run(function_name)</code>运行<strong>协程函数。</strong></p><blockquote><p><strong>但是需要注意的是，首先run函数是python3.7版本新添加的，前面的版本是没有的；</strong></p></blockquote><p> 其次，这个run函数总是<strong>会创建一个新的事件循环并在run结束之后关闭事件循环</strong>，所以，如果在<strong>同一个线程</strong>中已经有了一个事件循环，则<strong>不能再使用这个函数</strong>了，因为<strong>同一个线程不能有两个事件循环</strong>，而且这个run函数<strong>不能同时运行两次</strong>，因为他已经创建一个了。即<strong>同一个线程中是不允许有多个事件循环loop的</strong>。</p></li></ol><h2 id="Task任务"><a href="#Task任务" class="headerlink" title="Task任务"></a>Task任务</h2><h3 id="创建任务（两种方法）"><a href="#创建任务（两种方法）" class="headerlink" title="创建任务（两种方法）"></a>创建任务（两种方法）</h3><ol><li><p><code>task = asyncio.create_task(coro())</code></p><blockquote><p><strong>这是3.7版本新添加的</strong>,<strong>可以传协程函数</strong></p></blockquote></li><li><p><code>task = asyncio.ensure_future(coro())</code></p></li><li><p>也可以：</p><div class="hljs code-wrapper"><pre><code class="hljs python">loop.create_future()loop.create_task(coro)</code></pre></div></li></ol><h3 id="获取某一个任务的方法"><a href="#获取某一个任务的方法" class="headerlink" title="获取某一个任务的方法"></a>获取某一个任务的方法</h3><ol><li><p><code>task=asyncio.current_task(loop=None)</code></p><blockquote><p>返回在某一个指定的loop中，<strong>当前正在运行的任务</strong>，<strong>如果没有任务正在运行，则返回None</strong>；<br>如果loop为None，<strong>则默认为在当前的事件循环中获取</strong>.</p></blockquote></li><li><p><code>asyncio.all_tasks(loop=None)</code></p><blockquote><p>返回某一个<strong>loop中还没有结束的任务</strong></p></blockquote></li></ol><h2 id="异步函数的结果获取"><a href="#异步函数的结果获取" class="headerlink" title="异步函数的结果获取"></a>异步函数的结果获取</h2><p>对于异步编程、异步函数而言，最重要的就是<strong>异步函数调用结束之后，获取异步函数的返回值</strong>，我们可以有以下几种方式<strong>来获取函数的返回值</strong>，第一是直接通过<code>Task.result()</code>来获取；第二种是<strong>绑定一个回调函数</strong>来获取，<strong>即函数执行完毕后调用一个函数来获取异步函数的返回值。</strong></p><ol><li><p>直接通过<code>result</code>来获取.</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> asyncio<span class="hljs-keyword">import</span> time  <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hello1</span>(<span class="hljs-params">a,b</span>):</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello world 01 begin&quot;</span>)    <span class="hljs-keyword">await</span> asyncio.sleep(<span class="hljs-number">3</span>)  <span class="hljs-comment">#模拟耗时任务3秒</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello again 01 end&quot;</span>)    <span class="hljs-keyword">return</span> a+b coroutine=hello1(<span class="hljs-number">10</span>,<span class="hljs-number">5</span>)loop = asyncio.get_event_loop()                <span class="hljs-comment">#第一步：创建事件循环</span>task = asyncio.ensure_future(coroutine)         <span class="hljs-comment">#第二步:将多个协程函数包装成任务列表</span>loop.run_until_complete(task)                  <span class="hljs-comment">#第三步：通过事件循环运行</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-------------------------------------&#x27;</span>)<span class="hljs-built_in">print</span>(task.result())loop.close()  <span class="hljs-string">&#x27;&#x27;&#x27;运行结果为</span><span class="hljs-string">Hello world 01 begin</span><span class="hljs-string">Hello again 01 end</span><span class="hljs-string">-------------------------------------</span><span class="hljs-string">15</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div></li><li><p>通过定义<strong>回调函数</strong>来获取</p> <div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> asyncio<span class="hljs-keyword">import</span> time     <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hello1</span>(<span class="hljs-params">a,b</span>):</span>      <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello world 01 begin&quot;</span>)      <span class="hljs-keyword">await</span> asyncio.sleep(<span class="hljs-number">3</span>)  <span class="hljs-comment">#模拟耗时任务3秒</span>      <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello again 01 end&quot;</span>)    <span class="hljs-keyword">return</span> a+b   <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">callback</span>(<span class="hljs-params">future</span>):</span>   <span class="hljs-comment">#定义的回调函数,需要传future参数</span>    <span class="hljs-built_in">print</span>(future.result()) loop = asyncio.get_event_loop()                <span class="hljs-comment">#第一步：创建事件循环</span>task=asyncio.ensure_future(hello1(<span class="hljs-number">10</span>,<span class="hljs-number">5</span>))       <span class="hljs-comment">#第二步:将多个协程函数包装成任务</span>task.add_done_callback(callback)                      <span class="hljs-comment">#并被任务绑定一个回调函数，默认传入结果参数</span> loop.run_until_complete(task)                  <span class="hljs-comment">#第三步：通过事件循环运行</span>loop.close()                                   <span class="hljs-comment">#第四步：关闭事件循环</span>  <span class="hljs-string">&#x27;&#x27;&#x27;运行结果为：</span><span class="hljs-string">Hello world 01 begin</span><span class="hljs-string">Hello again 01 end</span><span class="hljs-string">15</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div><blockquote><p><strong>注意：</strong>所谓的<strong>回调函数</strong>，就是指协程函数coroutine<strong>执行结束时候会调用回调函数</strong>。并通过<strong>参数future获取协程执行的结果</strong>。我们创建的<strong>task和回调里的future对象</strong>，实际上是<strong>同一个对象</strong>，因为task是future的子类。</p></blockquote></li></ol><h2 id="asyncio异步编程的基本模板"><a href="#asyncio异步编程的基本模板" class="headerlink" title="asyncio异步编程的基本模板"></a>asyncio异步编程的基本模板</h2><h3 id="第一步：构造事件循环"><a href="#第一步：构造事件循环" class="headerlink" title="第一步：构造事件循环"></a><strong>第一步：构造事件循环</strong></h3><ol><li><p><code>loop = asyncio.get_running_loop()</code></p><blockquote><p>返回（获取）在当前线程中<strong>正在运行的事件循环</strong>，如果没有正在运行的事件循环，则会显示错误；它是<strong>python3.7中新添加的</strong></p></blockquote></li><li><p><code>loop = asyncio.get_event_loop() </code></p><blockquote><p><strong>获得一个事件循环</strong>，如果当前线程还没有事件循环，则<strong>创建一个新的事件循环loop</strong>；</p></blockquote></li><li><p><code>loop=asyncio.set_event_loop(thread) </code></p><blockquote><p>设置一个事件循环<strong>为当前线程的事件循环</strong>；</p></blockquote></li><li><p><code>loop=asyncio.new_event_loop()</code></p><blockquote><p><strong>创建一个新的事件循环</strong></p></blockquote></li></ol><h3 id="第二步：将一个或者是多个协程函数包装成任务Task"><a href="#第二步：将一个或者是多个协程函数包装成任务Task" class="headerlink" title="第二步：将一个或者是多个协程函数包装成任务Task"></a><strong>第二步：将一个或者是多个协程函数包装成任务Task</strong></h3><ol><li><p><code>task = asyncio.create_task(coro(参数列表))</code> </p><blockquote><p><strong>这是3.7版本新添加的</strong></p></blockquote></li><li><p><code>task = asyncio.ensure_future(coro(参数列表))</code></p></li></ol><blockquote><p>需要注意的是，在使用<code>Task.result()</code>获取<strong>协程函数结果</strong>的时候，使用<code>asyncio.create_task()</code>却会显示错，但是使用<code>asyncio.ensure_future</code>却正确</p></blockquote><h3 id="第三步：通过事件循环运行"><a href="#第三步：通过事件循环运行" class="headerlink" title="第三步：通过事件循环运行"></a><strong>第三步：通过事件循环运行</strong></h3><ol><li><p><code>loop.run_until_complete(asyncio.wait(tasks))</code></p><blockquote><p>通过<code>asyncio.wait()</code><strong>整合多个task</strong></p></blockquote></li><li><p><code>loop.run_until_complete(asyncio.gather(tasks))</code></p><blockquote><p>通过<code>asyncio.gather()</code><strong>整合多个task</strong></p></blockquote></li><li><p><code>loop.run_until_complete(task_1)  </code></p><blockquote><p><strong>单个任务则不需要整合</strong></p></blockquote></li><li><p><del>loop.run_forever()</del></p><blockquote><p><del>但是这个方法在新版本已经取消，不再推荐使用，因为使用起来不简洁</del></p></blockquote></li></ol><h4 id="使用gather和wait整合task注册多个服务"><a href="#使用gather和wait整合task注册多个服务" class="headerlink" title="使用gather和wait整合task注册多个服务"></a>使用<code>gather</code>和<code>wait</code>整合task注册多个服务</h4><ol><li><h4 id="参数形式不一样"><a href="#参数形式不一样" class="headerlink" title="参数形式不一样"></a><strong>参数形式不一样</strong></h4> <strong>gather</strong>的参数为 coroutines_or_futures,即如这种形式： <div class="hljs code-wrapper"><pre><code class="hljs python">tasks = asyncio.gather(*[task1,task2,task3])tasks = asyncio.gather(task1,task2,task3)loop.run_until_complete(tasks)</code></pre></div><strong>wait</strong>的参数为<strong>列表或者集合</strong>的形式，如下: <div class="hljs code-wrapper"><pre><code class="hljs python">tasks = asyncio.wait([task1,task2,task3])loop.run_until_complete(tasks)</code></pre></div></li><li><h4 id="返回的值不一样"><a href="#返回的值不一样" class="headerlink" title="返回的值不一样"></a><strong>返回的值不一样</strong></h4><strong>gather返回的是每一个任务运行的结果</strong>：<blockquote><h6 id="要以传入一个列表可变参数"><a href="#要以传入一个列表可变参数" class="headerlink" title="要以传入一个列表可变参数"></a>要以传入一个列表可变参数</h6></blockquote><strong>可变参数允许在调用参数的时候传入多个参数,这些参数在调用时被自动组装为一个tuple</strong><code>results = await asyncio.gather(*[tasks])</code> <code>results = await asyncio.gather(task1,task2,task3)</code> <strong>wait返回dones是已经完成的任务，pending是未完成的任务，都是集合类型</strong>：<br><code>done, pending = yield from asyncio.wait(fs)</code><blockquote><p>简单来说：<strong>async.wait会返回两个值:done和pending</strong>，done为已完成的协程Task，pending为超时未完成的协程Task，<strong>需通过future.result调用Task的result。</strong></p><p>而<code>async.gather</code>返回的是<strong>已完成Task的result</strong>。</p></blockquote></li></ol><h3 id="第四步：关闭事件循环"><a href="#第四步：关闭事件循环" class="headerlink" title="第四步：关闭事件循环"></a><strong>第四步：关闭事件循环</strong></h3><div class="hljs code-wrapper"><pre><code class="hljs python">loop.close()<span class="hljs-comment"># 以上示例都没有调用 loop.close，好像也没有什么问题。所以到底要不要调 loop.close 呢？</span></code></pre></div><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><h3 id="协程阻塞问题"><a href="#协程阻塞问题" class="headerlink" title="协程阻塞问题"></a>协程阻塞问题</h3><p><strong>异步方式依然会有阻塞的</strong>，当我们定义的很多个异步方法<strong>彼此之间有一来</strong>的时候，比如，我必须要等到函数1执行完毕，<strong>函数2需要用到函数1的返回值</strong>，就会造成<strong>阻塞</strong>，这也是异步编程的难点之一，如何合理配置这些资源，尽量<strong>减少函数之间的明确依赖</strong>，这是很重要的。</p><p><strong>结论</strong>：在有<strong>很多个异步方式</strong>的时候，一定要尽量避免这种<strong>异步函数的直接调用</strong>，这和同步是没什么区别的，一定要<strong>通过事件循环loop</strong>，<strong>“让事件循环在各个异步函数之间不停游走”</strong>，这样才不会造成阻塞。</p><h2 id="代码片段"><a href="#代码片段" class="headerlink" title="代码片段"></a>代码片段</h2><h3 id="使用gather同时注册多个任务，实现并发"><a href="#使用gather同时注册多个任务，实现并发" class="headerlink" title="使用gather同时注册多个任务，实现并发"></a>使用gather同时注册多个任务，实现并发</h3><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> asyncio<span class="hljs-keyword">import</span> time<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hello1</span>(<span class="hljs-params">a,b</span>):</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello world 01 begin&quot;</span>)    <span class="hljs-keyword">await</span> asyncio.sleep(<span class="hljs-number">3</span>)  <span class="hljs-comment">#模拟耗时任务3秒</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello again 01 end&quot;</span>)    <span class="hljs-keyword">return</span> a+b <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hello2</span>(<span class="hljs-params">a,b</span>):</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello world 02 begin&quot;</span>)    <span class="hljs-keyword">await</span> asyncio.sleep(<span class="hljs-number">2</span>)   <span class="hljs-comment">#模拟耗时任务2秒</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello again 02 end&quot;</span>)    <span class="hljs-keyword">return</span> a-b <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hello3</span>(<span class="hljs-params">a,b</span>):</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello world 03 begin&quot;</span>)    <span class="hljs-keyword">await</span> asyncio.sleep(<span class="hljs-number">4</span>)   <span class="hljs-comment">#模拟耗时任务4秒</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello again 03 end&quot;</span>)    <span class="hljs-keyword">return</span> a*b <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span>  <span class="hljs-comment">#封装多任务的入口函数</span>    <span class="hljs-comment"># 用列表表达式创建任务</span>    tasks = [        asyncio.ensure_future(hello1(<span class="hljs-number">10</span>,<span class="hljs-number">5</span>))        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>)    ]    results = <span class="hljs-keyword">await</span> asyncio.gather(tasks)       <span class="hljs-keyword">for</span> result <span class="hljs-keyword">in</span> results:    <span class="hljs-comment">#通过迭代获取函数的结果，每一个元素就是相对应的任务的返回值，顺序都没变</span>        <span class="hljs-built_in">print</span>(result)  loop = asyncio.get_event_loop()               loop.run_until_complete(main())loop.close()</code></pre></div><h3 id="异步-多线程"><a href="#异步-多线程" class="headerlink" title="异步+多线程"></a>异步+多线程</h3><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> asyncio <span class="hljs-keyword">import</span> asyncio,time,threading <span class="hljs-comment">#需要执行的耗时异步任务</span><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func</span>(<span class="hljs-params">num</span>):</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;准备调用func,大约耗时<span class="hljs-subst">&#123;num&#125;</span>&#x27;</span>)    <span class="hljs-keyword">await</span> asyncio.sleep(num)    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;耗时<span class="hljs-subst">&#123;num&#125;</span>之后,func函数运行结束&#x27;</span>) <span class="hljs-comment">#定义一个专门创建事件循环loop的函数，在另一个线程中启动它</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">start_loop</span>(<span class="hljs-params">loop</span>):</span>    asyncio.set_event_loop(loop)    loop.run_forever() <span class="hljs-comment">#定义一个main函数</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span>    coroutine1 = func(<span class="hljs-number">3</span>)    coroutine2 = func(<span class="hljs-number">2</span>)    coroutine3 = func(<span class="hljs-number">1</span>)     new_loop = asyncio.new_event_loop()                        <span class="hljs-comment">#在当前线程下创建时间循环，（未启用），在start_loop里面启动它</span>    t = threading.Thread(target=start_loop,args=(new_loop,))   <span class="hljs-comment">#通过当前线程开启新的线程去启动事件循环</span>    t.start()     asyncio.run_coroutine_threadsafe(coroutine1,new_loop)  <span class="hljs-comment">#这几个是关键，代表在新线程中事件循环不断“游走”执行</span>    asyncio.run_coroutine_threadsafe(coroutine2,new_loop)    asyncio.run_coroutine_threadsafe(coroutine3,new_loop)     <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;iloveu&quot;</span>:        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&quot;    &quot;</span>) <span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:    main() <span class="hljs-string">&#x27;&#x27;&#x27;运行结果为：</span><span class="hljs-string">i    准备调用func,大约耗时3</span><span class="hljs-string">l    准备调用func,大约耗时2</span><span class="hljs-string">o    准备调用func,大约耗时1</span><span class="hljs-string">v</span><span class="hljs-string">e</span><span class="hljs-string">u</span><span class="hljs-string">耗时1之后,func函数运行结束</span><span class="hljs-string">耗时2之后,func函数运行结束</span><span class="hljs-string">耗时3之后,func函数运行结束</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div><h3 id="httpx-aiohttp-之异步请求"><a href="#httpx-aiohttp-之异步请求" class="headerlink" title="httpx aiohttp 之异步请求"></a>httpx aiohttp 之异步请求</h3><ul><li><strong>aiohttp实现</strong></li></ul><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> aiohttp<span class="hljs-keyword">import</span> asyncio <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> aiohttp.ClientSession() <span class="hljs-keyword">as</span> client:         <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> client.get(<span class="hljs-string">&#x27;http://httpbin.org/get&#x27;</span>) <span class="hljs-keyword">as</span> resp:              <span class="hljs-keyword">assert</span> resp.status == <span class="hljs-number">200</span>              html= <span class="hljs-keyword">await</span> resp.text()              <span class="hljs-built_in">print</span>(html)</code></pre></div><ul><li><strong>httpx实现</strong></li></ul><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> httpx.AsyncClient() <span class="hljs-keyword">as</span> client:    resp = <span class="hljs-keyword">await</span> client.get(<span class="hljs-string">&#x27;http://httpbin.org/get&#x27;</span>)    <span class="hljs-keyword">assert</span> resp.status_code == <span class="hljs-number">200</span>    html = resp.text</code></pre></div><p>感觉总体上比较<code>aiohttp</code>写起来舒服多了<strong>，少写很多异步代码。</strong></p><blockquote><p>之前使用 aiohttp 中的 resp.status 来获取状态码的时候写了status_code，应该是使用 requests 习惯了吧，这下好了使用 httpx 不用担心这个写错的问题了。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 迭代器生成器修饰器</title>
    <link href="/2021/08/18/%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%94%9F%E6%88%90%E5%99%A8%E4%BF%AE%E9%A5%B0%E5%99%A8%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/08/18/%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%94%9F%E6%88%90%E5%99%A8%E4%BF%AE%E9%A5%B0%E5%99%A8%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2><blockquote><p><strong>迭代器</strong>指的是迭代取值的工具，迭代是一个重复的过程，并且每次重复都是基于上一次的结果而继续的，</p><p>单纯的重复并不是迭代!</p></blockquote><ol><li><p>可迭代对象</p><p>元组;列表;字典;集合;字符串等</p><p>生成器.</p></li><li><p>用 for 循环迭代</p></li><li><p>验证一个东西是否可迭代</p><blockquote><p><strong>可迭代不一定是迭代对象</strong></p><p>(列表不是可迭代对象,但是可迭代.)</p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> collections <span class="hljs-keyword">import</span> Iterable<span class="hljs-comment"># 判断是否是可迭代对象(迭代器)</span><span class="hljs-built_in">isinstance</span>(<span class="hljs-string">&quot;adb&quot;</span>,Iterable) <span class="hljs-comment"># instance:实例</span></code></pre></div></li><li><p>生成器可迭代,但可以迭代的不一定是生成器</p></li><li><p><code>iter()</code> 可以将列表变成可迭代对象</p></li></ol><h3 id="迭代器的作用"><a href="#迭代器的作用" class="headerlink" title="迭代器的作用"></a>迭代器的作用</h3><p>迭代器是用来<strong>迭代取值</strong>的工具，而涉及到把多个值循环取出来的类型</p><blockquote><p>有：列表、字符串、元组、字典、集合、打开文件 </p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs python">l = [<span class="hljs-string">&#x27;egon&#x27;</span>, <span class="hljs-string">&#x27;liu&#x27;</span>, <span class="hljs-string">&#x27;alex&#x27;</span>]i = <span class="hljs-number">0</span><span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(l):    <span class="hljs-built_in">print</span>(l[i])    i += <span class="hljs-number">1</span></code></pre></div><p>上述<strong>迭代取值的方式</strong>只适用于<strong>有索引</strong>的数据类型：<strong>列表、字符串、元组.</strong><br>为了解决基于索引迭代器取值的局限性<br>python必须提供一种能够不<strong>依赖于索引的取值方式</strong>，这就是<strong>迭代器</strong>.</p><h3 id="迭代器详解"><a href="#迭代器详解" class="headerlink" title="迭代器详解"></a>迭代器详解</h3><p>但凡内置有<code>__iter__()</code>方法的对象都称之为<strong>可迭代的对象</strong>:</p><div class="hljs code-wrapper"><pre><code class="hljs python">s1=<span class="hljs-string">&#x27;&#x27;</span>s1.__iter__()l=[]l.__iter__()t=(<span class="hljs-number">1</span>,)t.__iter__()d=&#123;<span class="hljs-string">&#x27;a&#x27;</span>:<span class="hljs-number">1</span>&#125;d.__iter__()set1=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;set1.__iter__()<span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;a.txt&#x27;</span>,mode=<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:    f.__iter__()    <span class="hljs-keyword">pass</span></code></pre></div><p><strong>迭代器对象</strong>:</p><p>内置有<code>__next__</code>方法并且内置有<code>__iter__</code>方法的对象<br>迭代器对象<code>__next()__</code>：得到迭代器的下一个值.<br>迭代器对象<code>__iter__()</code>：得到迭代器的本身，调用和没调用相同.</p><div class="hljs code-wrapper"><pre><code class="hljs python">d=&#123;<span class="hljs-string">&#x27;a&#x27;</span>:<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;b&#x27;</span>:<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;c&#x27;</span>:<span class="hljs-number">3</span>&#125;d_iterator=d.__iter__()<span class="hljs-built_in">print</span>(d_iterator)<span class="hljs-comment"># &lt;dict_keyiterator object at 0x0000022FF0E13A90&gt;</span><span class="hljs-built_in">print</span>(d_iterator.__next__())<span class="hljs-comment"># a</span><span class="hljs-built_in">print</span>(d_iterator.__next__())<span class="hljs-comment"># b</span><span class="hljs-built_in">print</span>(d_iterator.__next__())<span class="hljs-comment"># c</span><span class="hljs-built_in">print</span>(d_iterator.__next__())<span class="hljs-comment"># 抛出异常StopIteration,值取完了</span>d=&#123;<span class="hljs-string">&#x27;a&#x27;</span>:<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;b&#x27;</span>:<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;c&#x27;</span>:<span class="hljs-number">3</span>&#125;d_iterator=d.__iter__()<span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:    <span class="hljs-keyword">try</span>:        <span class="hljs-built_in">print</span>(d_iterator.__next__())    <span class="hljs-keyword">except</span> StopIteration:        <span class="hljs-keyword">break</span><span class="hljs-comment"># 得到&quot;a&quot;,&quot;b&quot;,&quot;c&quot;</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;====&gt;&gt;&gt;&gt;&gt;&gt;&#x27;</span>) <span class="hljs-comment"># 在一个迭代器取值取完后，再对其取值就会报错</span>d_iterator=d.__iter__()<span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:    <span class="hljs-keyword">try</span>:        <span class="hljs-built_in">print</span>(d_iterator.__next__())    <span class="hljs-keyword">except</span> StopIteration:        <span class="hljs-keyword">break</span><span class="hljs-comment"># 什么都得不到,因为迭代器值已取完</span>l=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]l_iterator=l.__iter__()<span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:    <span class="hljs-keyword">try</span>:        <span class="hljs-built_in">print</span>(l_iterator.__next__())    <span class="hljs-keyword">except</span> StopIteration:        <span class="hljs-keyword">break</span><span class="hljs-comment"># 得到1,2,3,4,5</span></code></pre></div><p>常见<strong>数据类型</strong>的分类:</p><blockquote><p>可迭代对象：<strong>字符串、列表、元组、字典、集合、文件对象</strong><br>迭代器对象：<strong>文件对象</strong></p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs python">s1=<span class="hljs-string">&#x27;&#x27;</span>s1.__iter__()l=[]l.__iter__()t=(<span class="hljs-number">1</span>,)t.__iter__()d=&#123;<span class="hljs-string">&#x27;a&#x27;</span>:<span class="hljs-number">1</span>&#125;d.__iter__()set1=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;set1.__iter__()<span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;a.txt&#x27;</span>,mode=<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:    f.__iter__()    f.__next__()</code></pre></div><h3 id="创建一个迭代器"><a href="#创建一个迭代器" class="headerlink" title="创建一个迭代器"></a>创建一个迭代器</h3><p>把一个类作为一个迭代器使用需要在类中实现两个方法 <code>iter()</code> 与 <code>next()</code> 。</p><ol><li><p><code>iter()</code>方法返回一个特殊的迭代器对象,这个迭代器对象实现了<code>next()</code>方法并通过<code>StopIteration</code>异常标识迭代的完成。</p></li><li><p><code>next()</code>方法会返回<strong>下一个迭代器对象</strong>。</p></li><li><p><strong>StopIteration</strong></p><p><code>StopIteration</code> 异常用于标识<strong>迭代的完成</strong>，防止出现无限循环的情况，在 <strong>next</strong>() 方法中我们可以设置在完成指定循环次数后触发 <code>StopIteration</code> 异常来结束迭代。</p></li></ol><blockquote><p> 创建一个返回数字的迭代器，初始值为 1，逐步递增 1</p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyNumbers</span>:</span>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__iter__</span>(<span class="hljs-params">self</span>):</span>    <span class="hljs-comment"># 初始化迭代器</span>    self.a = <span class="hljs-number">1</span>    <span class="hljs-keyword">return</span> self   <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__next__</span>(<span class="hljs-params">self</span>):</span>    <span class="hljs-comment"># 迭代器返回值</span>    <span class="hljs-keyword">if</span> self.a &lt;= <span class="hljs-number">20</span>:      x = self.a      self.a += <span class="hljs-number">1</span>      <span class="hljs-keyword">return</span> x    <span class="hljs-keyword">else</span>:      <span class="hljs-keyword">raise</span> StopIteration myclass = MyNumbers()myiter = <span class="hljs-built_in">iter</span>(myclass) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> myiter:  <span class="hljs-built_in">print</span>(x)<span class="hljs-comment"># fun2:</span>myiter = <span class="hljs-built_in">iter</span>(myclass)<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(myiter))<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(myiter))<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(myiter))<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(myiter))<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(myiter))</code></pre></div><h3 id="for-循环的工作原理"><a href="#for-循环的工作原理" class="headerlink" title="for 循环的工作原理"></a>for 循环的工作原理</h3><p>for循环可以称之为叫<strong>迭代器循环</strong></p><div class="hljs code-wrapper"><pre><code class="hljs json">d = &#123;&#x27;a&#x27;:<span class="hljs-number">1</span>,&#x27;b&#x27;:<span class="hljs-number">2</span>,&#x27;c&#x27;:<span class="hljs-number">3</span>&#125;</code></pre></div><ol><li><code>d.iter()</code> 得到一个迭代器对象</li><li><code>迭代器对象.next()</code> 拿到一个返回值，然后将该返回值赋值给k</li><li>循环往复,直到抛出<code>StopIteration</code>异常<strong>for循环会捕捉异常然后结束循环.</strong></li></ol><div class="hljs code-wrapper"><pre><code class="hljs python">d = &#123;<span class="hljs-string">&#x27;a&#x27;</span>:<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;b&#x27;</span>:<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;c&#x27;</span>:<span class="hljs-number">3</span>&#125;<span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> d:<span class="hljs-comment"># d_it = d.__iter__()</span>    <span class="hljs-built_in">print</span>(k)<span class="hljs-comment"># 循环k = d_it.__next__()直到抛出异常结束循环</span><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;a.txt&#x27;</span>,mode=<span class="hljs-string">&#x27;rt&#x27;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f: <span class="hljs-comment"># f.__iter__()</span>        <span class="hljs-built_in">print</span>(line)<span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;hello&#x27;</span>) <span class="hljs-comment"># 原理同for循环</span></code></pre></div><h2 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h2><p>在 Python 中，使用了 <code>yield</code> 的函数被称为<strong>生成器</strong>（generator）。</p><p>跟普通函数不同的是，生成器是<strong>一个返回迭代器的函数</strong>，只能用于<strong>迭代操作</strong>，更简单点理解<strong>生成器就是一个迭代器</strong>。</p><p>在<strong>调用生成器</strong>运行的过程中，每次遇到 <code>yield</code> 时函数会<strong>暂停并保存当前所有的运行信息</strong>，<strong>返回 <code>yield</code> 的值</strong>, 并在下一次执行 <code>next()</code> 方法时<strong>从当前位置继续运行</strong>。</p><p><strong>调用一个生成器函数，返回的是一个迭代器对象。</strong></p><h3 id="生成器的使用"><a href="#生成器的使用" class="headerlink" title="生成器的使用"></a>生成器的使用</h3><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func</span>():</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;第一次&#x27;</span>)    <span class="hljs-keyword">yield</span> <span class="hljs-number">1</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;第二次&#x27;</span>)    <span class="hljs-keyword">yield</span> <span class="hljs-number">2</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;第三次&#x27;</span>)    <span class="hljs-keyword">yield</span> <span class="hljs-number">3</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;第四次&#x27;</span>)g = func()<span class="hljs-built_in">print</span>(g)<span class="hljs-comment"># 生成器就是迭代器</span><span class="hljs-comment"># 生成器函数返回的是可迭代对象.</span>g.__iter__()<span class="hljs-comment"># g.__next__()会触发函数体代码的运行，然后遇到yield停下来，将yield后的值</span><span class="hljs-comment"># 当做本次调用的结果返回</span>g = func()<span class="hljs-comment"># 可以用iter将可迭代对象转化为迭代器.用next()方法</span><span class="hljs-built_in">print</span>(g)g.__iter__()res1 = g.__next__()<span class="hljs-comment"># 第一次</span><span class="hljs-built_in">print</span>(res1)<span class="hljs-comment"># 1</span>res2 = g.__next__()<span class="hljs-comment"># 第二次</span><span class="hljs-built_in">print</span>(res2)<span class="hljs-comment"># 2</span>res3 = g.__next__()<span class="hljs-comment"># 第三次</span><span class="hljs-built_in">print</span>(res3)<span class="hljs-comment"># 3</span>res4 = g.__next__()<span class="hljs-comment"># 第四次</span><span class="hljs-comment"># StopIteration</span></code></pre></div><p>实例:使用 <code>yield</code> 实现斐波那契数列：</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fibonacci</span>(<span class="hljs-params">n</span>):</span>  <span class="hljs-comment"># 生成器函数 - 斐波那契</span>    a, b, counter = <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:        <span class="hljs-keyword">if</span> (counter &gt; n):            <span class="hljs-keyword">return</span>        <span class="hljs-keyword">yield</span> a        a, b = b, a + b        counter += <span class="hljs-number">1</span>f = fibonacci(<span class="hljs-number">10</span>)  <span class="hljs-comment"># f 是一个迭代器，由生成器返回生成</span><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:    <span class="hljs-keyword">try</span>:        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(f), end=<span class="hljs-string">&quot; &quot;</span>)    <span class="hljs-keyword">except</span> StopIteration:        <span class="hljs-keyword">break</span></code></pre></div><h3 id="yield关键字"><a href="#yield关键字" class="headerlink" title="yield关键字"></a><code>yield</code>关键字</h3><p>yield关键字的作用是<strong>函数与调用者</strong>的通信，它不光能够将<strong>值返回给调用者</strong>，它还可以<strong>接收调用者传过来的值</strong>，那么怎么实现呢？ 调用者通过<code>send()</code>函数将值传递给<strong>generator</strong>，<strong>generator</strong>通过 <code>yield</code> 前面的变量(形如:<code>n = yield)</code>来接收</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test</span>():</span>number = <span class="hljs-number">0</span><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:n = <span class="hljs-keyword">yield</span> number<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我是yield关键字下面一行代码&#x27;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;调用者传递过来的值为:&#x27;</span>, n) <span class="hljs-meta">&gt;&gt;&gt; </span>t = test()<span class="hljs-meta">&gt;&gt;&gt; </span>t.send(<span class="hljs-literal">None</span>)  <span class="hljs-comment"># 当第一次执行生成器的时候，需要传入None</span><span class="hljs-meta">&gt;&gt;&gt; </span>t.send(<span class="hljs-number">1</span>)我是<span class="hljs-keyword">yield</span>关键字下面一行代码调用者传递过来的值为: <span class="hljs-number">1</span><span class="hljs-meta">&gt;&gt;&gt; </span>t.send(<span class="hljs-number">2</span>)我是<span class="hljs-keyword">yield</span>关键字下面一行代码调用者传递过来的值为: <span class="hljs-number">2</span>t.close() 关闭generator后再调用，会出现StopIteration异常<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">next</span>(t)我是<span class="hljs-keyword">yield</span>关键字下面一行代码调用者传递过来的值为: <span class="hljs-literal">None</span></code></pre></div><blockquote><p>可以发现，<code>send</code>函数和<code>next</code>函数的区别就是 <code>send</code>函数可以在执行generator的<strong>过程中</strong>，给<strong>generator</strong>发送消息。<strong>而next仅仅是接收yield右边的变量值</strong>。</p></blockquote><h3 id="send-方法用法"><a href="#send-方法用法" class="headerlink" title="send()方法用法"></a><code>send()</code><strong>方法用法</strong></h3><ol start="0"><li><p><strong>send过来的数值 = yield next出来的数值</strong></p></li><li><p>它的主要作用是，当我需要<strong>手动更改生成器里面的某一个值并且使用它</strong>，则<strong>send发送进去一个数据</strong>，然后<strong>保存到yield语句的返回值</strong>，以提供使用.</p></li><li><p><code>send()</code>的返回值就是那个<strong>本来应该被迭代出来的那个值</strong>。这样既可以<strong>保证我能够传入新的值，原来的值也不会弄丢.</strong></p></li><li><p>实例:</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">my_generator</span>(<span class="hljs-params">n</span>):</span>    <span class="hljs-string">&#x27;&#x27;&#x27;定义一个生成器&#x27;&#x27;&#x27;</span>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):        <span class="hljs-comment"># send来的数值 = yield 数值</span>        num = <span class="hljs-keyword">yield</span> i        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;传入的<span class="hljs-subst">&#123;num&#125;</span>&#x27;</span>)g = my_generator(<span class="hljs-number">5</span>)<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))a = g.send(<span class="hljs-number">100</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我是&#123;0&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(a))<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))<span class="hljs-string">&#x27;&#x27;&#x27; 结果</span><span class="hljs-string">0</span><span class="hljs-string">传入的None</span><span class="hljs-string">1</span><span class="hljs-string">传入的100 </span><span class="hljs-string">我是2     </span><span class="hljs-string">传入的None</span><span class="hljs-string">3</span><span class="hljs-string">传入的None</span><span class="hljs-string">4</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div></li></ol><h3 id="throw-方法用法"><a href="#throw-方法用法" class="headerlink" title="throw()方法用法"></a><code>throw()</code>方法用法</h3><blockquote><p>简单来说就是:<strong>向生成器扔去一个异常,使生成器停止.</strong></p></blockquote><p><code>raise exception in generator，return next yielded value or StopIteration</code>，即在<strong>生成器中抛出异常</strong>，并且这个throw函数会<strong>返回下一个要迭代的值</strong>或者是<strong>StopIteration</strong>。还是通过几个例子来看吧！</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">my_generator</span>():</span>    <span class="hljs-keyword">yield</span> <span class="hljs-string">&#x27;a&#x27;</span>    <span class="hljs-keyword">yield</span> <span class="hljs-string">&#x27;b&#x27;</span>    <span class="hljs-keyword">yield</span> <span class="hljs-string">&#x27;c&#x27;</span>g = my_generator()<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-------------------------&#x27;</span>)<span class="hljs-built_in">print</span>(g.throw(StopIteration))<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))<span class="hljs-string">&#x27;&#x27;&#x27;运行结果为：</span><span class="hljs-string">a</span><span class="hljs-string">b</span><span class="hljs-string">-------------------------</span><span class="hljs-string">StopIteration</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div><h3 id="生成器的启动与关闭close"><a href="#生成器的启动与关闭close" class="headerlink" title="生成器的启动与关闭close"></a><strong>生成器的启动与关闭close</strong></h3><ol><li><p><strong>生成器的启动</strong></p><p><strong>方法1：</strong>直接使用<code>next(g)</code>，这会<strong>直接开始迭代第一个元素</strong>（<strong>推荐使用这个启动</strong>）</p><p><strong>方法2：</strong>使用<code>g.send(None)</code>进行启动，注意<strong>第一次启动的时候只能传入<code>None</code><strong>，如果传入其他具体的指则会</strong>报错</strong>哦！</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">my_generator</span>():</span>    <span class="hljs-keyword">yield</span> <span class="hljs-number">1</span>    <span class="hljs-keyword">yield</span> <span class="hljs-number">2</span>    <span class="hljs-keyword">yield</span> <span class="hljs-number">3</span>    <span class="hljs-keyword">yield</span> <span class="hljs-number">4</span> g = my_generator()g.send(<span class="hljs-literal">None</span>)   <span class="hljs-comment">#第一次启动，本来第一次应该迭代的1，这里被取代了，但是send(None)会返回1</span><span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g)) <span class="hljs-string">&#x27;&#x27;&#x27;运行结果为：</span><span class="hljs-string">2</span><span class="hljs-string">3</span><span class="hljs-string">4</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div></li><li><p><strong>生成器的关闭</strong></p><p>如果一个生成器被<strong>中途关闭</strong>之后，在此调用<code>next()</code>方法，则会显示错误，如下：</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">my_generator</span>():</span>    <span class="hljs-keyword">yield</span> <span class="hljs-number">1</span>    <span class="hljs-keyword">yield</span> <span class="hljs-number">2</span>    <span class="hljs-keyword">yield</span> <span class="hljs-number">3</span>    <span class="hljs-keyword">yield</span> <span class="hljs-number">4</span> g = my_generator()<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))g.close()<span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))   <span class="hljs-comment">#在此处会显示错误</span><span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))<span class="hljs-string">&#x27;&#x27;&#x27;运行结果为：</span><span class="hljs-string">1</span><span class="hljs-string">2</span><span class="hljs-string">显示StopIteration</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div></li></ol><h3 id="生成器的终止迭代——StopIteration"><a href="#生成器的终止迭代——StopIteration" class="headerlink" title="生成器的终止迭代——StopIteration"></a><strong>生成器的终止迭代——<code>StopIteration</code></strong></h3><blockquote><p>前面讲的手动关闭生成器，使用<code>close()</code>方法，后面的迭代会抛出<code>StopIteration</code>异常。</p></blockquote><p>在一个生成器中，如果没有<code>return</code>，则默认执行到函数完毕时返回<code>StopIteration</code>:</p>   <div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">g1</span>():</span>    <span class="hljs-keyword">yield</span> <span class="hljs-number">1</span>g = g1()<span class="hljs-built_in">next</span>(g)    <span class="hljs-comment">#第一次调用next(g)时，会在执行完yield语句后挂起，所以此时程序并没有执行结束。</span><span class="hljs-built_in">next</span>(g)    <span class="hljs-comment">#程序试图从yield语句的下一条语句开始执行，发现已经到了结尾，所以抛出StopIteration异常。</span><span class="hljs-string">&#x27;&#x27;&#x27;运行结果为：</span><span class="hljs-string">1</span><span class="hljs-string">Traceback (most recent call last):</span><span class="hljs-string">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><span class="hljs-string">StopIteration</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div><p> 如果遇到<code>return</code>,如果在执行过程中return，则直接抛出 <code>StopIteration</code> 终止迭代:</p>   <div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">g2</span>():</span>    <span class="hljs-keyword">yield</span> <span class="hljs-string">&#x27;a&#x27;</span>    <span class="hljs-keyword">return</span>    <span class="hljs-keyword">yield</span> <span class="hljs-string">&#x27;b&#x27;</span>g=g2()<span class="hljs-built_in">next</span>(g)    <span class="hljs-comment">#程序停留在执行完yield &#x27;a&#x27;语句后的位置。</span><span class="hljs-built_in">next</span>(g)    <span class="hljs-comment">#程序发现下一条语句是return，所以抛出StopIteration异常，这样yield &#x27;b&#x27;语句永远也不会执行。</span><span class="hljs-string">&#x27;&#x27;&#x27;运行结果为：</span><span class="hljs-string">a</span><span class="hljs-string">b</span><span class="hljs-string">Traceback (most recent call last):</span><span class="hljs-string">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><span class="hljs-string">StopIteration</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div><p>如果在<code>return</code>后返回一个值，那么这个值为<code>StopIteration</code>异常的说明，不是程序的返回值。</p>   <div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">g3</span>():</span> <span class="hljs-keyword">yield</span> <span class="hljs-string">&#x27;a&#x27;</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;这是错误说明&#x27;</span> <span class="hljs-keyword">yield</span> <span class="hljs-string">&#x27;b&#x27;</span>   <span class="hljs-comment">#有一些编辑器会提示错误，此处为unreachable code，即不可到达的代码</span>g=g3()<span class="hljs-built_in">next</span>(g)<span class="hljs-built_in">next</span>(g)<span class="hljs-string">&#x27;&#x27;&#x27;运行结果为：</span><span class="hljs-string">a</span><span class="hljs-string">Traceback (most recent call last):</span><span class="hljs-string"> File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><span class="hljs-string">StopIteration: 这是错误说明</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div><blockquote><p><strong>注意：</strong>生成器没有办法使用<code>return</code>来返回值。因为<code>return</code>返回的那个值是通过<strong>StopIteration的异常信息</strong>返回的，所以没办法<strong>直接获取这个return返回的值</strong>。</p></blockquote><p>当然上面所说的无法获取<strong>return返回值</strong>，我们指的是没有办法通过<code>result=g3()</code>这种形式获取<strong>return的返回值</strong>。实际上还是有手段获取这个<strong>return的值的</strong>，有两种方法：</p><ol><li><p>使用<code>yield from</code>语句</p></li><li><p>因为<code>return</code>返回的值是作为<strong>StopIteration的一个value属性存在的</strong>，StopIteration本质上是<strong>一个类</strong>，所以可以通过访问它的<strong>value属性获取这个return返回的值</strong>。使用下面的代码：</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">g3</span>():</span>    <span class="hljs-keyword">yield</span> <span class="hljs-string">&#x27;a&#x27;</span>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;这是错误说明&#x27;</span>    <span class="hljs-keyword">yield</span> <span class="hljs-string">&#x27;b&#x27;</span>g=g3() <span class="hljs-keyword">try</span>:       <span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))  <span class="hljs-comment">#a</span>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(g))  <span class="hljs-comment">#触发异常</span><span class="hljs-keyword">except</span> StopIteration <span class="hljs-keyword">as</span> exc:    result=exc.value    <span class="hljs-built_in">print</span>(result)<span class="hljs-string">&#x27;&#x27;&#x27;运行结果为：</span><span class="hljs-string">a</span><span class="hljs-string">这是错误说明</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div></li></ol><h3 id="yield实现协程"><a href="#yield实现协程" class="headerlink" title="yield实现协程"></a><strong><code>yield</code>实现协程</strong></h3><p>在Python中，协程通过<code>yield</code>实现。因为当<strong>一个函数中有yield存在</strong>的时候，这个函数是<strong>生成器</strong>，那么当你调用这个函数的时候，你在函数体中写的代码<strong>并没有被执行</strong>，而是<strong>只返回了一个生成器对象</strong>，这个需要特别注意。然后，你的代码将会在每次使用这个生成器的时候被执行。</p><p>前面讲过<strong>yield表达式</strong>的两个关键作用：<strong>①返回一个值、②接收调用者的参数</strong></p><p><strong>“调用者”与“被调用者”</strong>之间的通信是通过<code>send()</code>进行联系的</p><p>正是因为<code>yield</code>实现的生成器具备<strong>“中断等待的功能”</strong>，才使得yield可以实现<strong>协程</strong>。</p><ol><li><p>例子1:<strong>生产者-消费者模型</strong></p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">consumer</span>():</span>    r = <span class="hljs-string">&#x27;&#x27;</span>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:        n = <span class="hljs-keyword">yield</span> r  <span class="hljs-comment">#执行的中断点</span>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> n:            <span class="hljs-keyword">return</span>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[消费者] 正在消费:&#123;0&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(n))        r = <span class="hljs-string">&#x27;200 人民币&#x27;</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">produce</span>(<span class="hljs-params">c</span>):</span>    c.send(<span class="hljs-literal">None</span>)  <span class="hljs-comment">#启动消费者（生成器）——实际上是函数调用，只不过生成器不是直接象函数那般调用的</span>    n = <span class="hljs-number">0</span>    <span class="hljs-keyword">while</span> n &lt; <span class="hljs-number">5</span>:        n = n + <span class="hljs-number">1</span>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[生产者] 正在生产:&#123;0&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(n))        r = c.send(n) <span class="hljs-comment">#给消费者传入值——实际上也是函数调用</span>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[生产者] 消费者返回:&#123;0&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(r))        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-------------------------------------------------&#x27;</span>)    c.close() c = consumer()<span class="hljs-comment">#构造一个生成器</span>produce(c) <span class="hljs-string">&#x27;&#x27;&#x27;运行结果为：</span><span class="hljs-string">[生产者] 正在生产:1</span><span class="hljs-string">[消费者] 正在消费:1</span><span class="hljs-string">[生产者] 消费者返回:200 人民币</span><span class="hljs-string">-------------------------------------------------</span><span class="hljs-string">[生产者] 正在生产:2</span><span class="hljs-string">[消费者] 正在消费:2</span><span class="hljs-string">[生产者] 消费者返回:200 人民币</span><span class="hljs-string">-------------------------------------------------</span><span class="hljs-string">[生产者] 正在生产:3</span><span class="hljs-string">[消费者] 正在消费:3</span><span class="hljs-string">[生产者] 消费者返回:200 人民币</span><span class="hljs-string">-------------------------------------------------</span><span class="hljs-string">[生产者] 正在生产:4</span><span class="hljs-string">[消费者] 正在消费:4</span><span class="hljs-string">[生产者] 消费者返回:200 人民币</span><span class="hljs-string">-------------------------------------------------</span><span class="hljs-string">[生产者] 正在生产:5</span><span class="hljs-string">[消费者] 正在消费:5</span><span class="hljs-string">[生产者] 消费者返回:200 人民币</span><span class="hljs-string">-------------------------------------------------</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div></li></ol><p>协程其实就是一个<strong>可以暂停执行</strong>的函数，并且<strong>可以恢复继续执行</strong>。那么<code>yield</code>已经可以<strong>暂停执行</strong>了，如果在暂停后有办法把一些 <code>value</code> 发回到<strong>暂停执行的函数</strong>中，那么 Python 就有了<strong>『协程』</strong>。于是有了, <strong>“把东西发送到已经暂停的生成器中”</strong> 的方法，这个方法就是<code>send()</code>。</p><h3 id="yield-from-的简单实现"><a href="#yield-from-的简单实现" class="headerlink" title="yield from 的简单实现"></a><code>yield from</code> 的简单实现</h3><p>yield是每次<strong>“惰性返回”一个值</strong>，其实从名字中就能看出，<code>yield from</code> 是<code>yield</code>的升级改进版本，如果将<strong>yield理解成“返回”</strong>，那么yield from就是<strong>“从什么（生成器）里面返回”</strong>，这就构成了<code>yield from</code>的一般语法，即:</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">yield</span> <span class="hljs-keyword">from</span> 生成器()</code></pre></div><p><strong>其实她等同于:</strong></p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> 生成器():    <span class="hljs-keyword">yield</span> item</code></pre></div><p>这样的形式。我们通过一个简单例子来看：</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">generator2</span>():</span>    <span class="hljs-keyword">yield</span> <span class="hljs-string">&#x27;a&#x27;</span>    <span class="hljs-keyword">yield</span> <span class="hljs-string">&#x27;b&#x27;</span>    <span class="hljs-keyword">yield</span> <span class="hljs-string">&#x27;c&#x27;</span>    <span class="hljs-keyword">yield</span> <span class="hljs-keyword">from</span> generator1() <span class="hljs-comment">#yield from iterable本质上等于 for item in iterable: yield item的缩写版</span>    <span class="hljs-keyword">yield</span> <span class="hljs-keyword">from</span> [<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>,<span class="hljs-number">44</span>]    <span class="hljs-keyword">yield</span> <span class="hljs-keyword">from</span> (<span class="hljs-number">12</span>,<span class="hljs-number">23</span>,<span class="hljs-number">34</span>)    <span class="hljs-keyword">yield</span> <span class="hljs-keyword">from</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>)    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> generator2():    <span class="hljs-built_in">print</span>(i,end=<span class="hljs-string">&#x27; , &#x27;</span>)<span class="hljs-string">&#x27;&#x27;&#x27;运行的结果为：</span><span class="hljs-string">a , b , c , 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 11 , 22 , 33 , 44 , 12 , 23 , 34 , 0 , 1 , 2 ,</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div><p><code>yield from</code> 后面可以跟的可以是  <strong>“ 生成器 、元组、 列表、range()函数产生的序列等可迭代对象”</strong></p><p>简单地说,<code>yield from  generator</code> 。实际上就是返回<strong>另外一个生成器</strong>。而<code>yield</code>只是返回<strong>一个元素</strong>。从这个层面来说，有下面的等价关系：<strong>yield from iterable本质上等于 for item in iterable: yield item 。</strong></p><h3 id="yield-from的高级应用"><a href="#yield-from的高级应用" class="headerlink" title="yield from的高级应用"></a><code>yield from</code>的高级应用</h3><h4 id="1-针对yield无法获取生成器return的返回值"><a href="#1-针对yield无法获取生成器return的返回值" class="headerlink" title="1. 针对yield无法获取生成器return的返回值"></a><strong>1. 针对yield无法获取生成器return的返回值</strong></h4><blockquote><p>在使用<strong>yield生成器</strong>的时候，如果使用<strong>for语句去迭代生成器</strong>，则不会显式的发出<strong>StopIteration异常</strong>，而是<strong>自动捕获StopIteration异常</strong>，所以如果<strong>遇到return，只是会终止迭代，而不会触发异常</strong>，故而也就<strong>没办法获取return的值</strong>。如下：</p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">my_generator</span>():</span>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):        <span class="hljs-keyword">if</span> i==<span class="hljs-number">2</span>:            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;我被迫中断了&#x27;</span>        <span class="hljs-keyword">else</span>:            <span class="hljs-keyword">yield</span> i <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>(<span class="hljs-params">generator</span>):</span>    <span class="hljs-keyword">try</span>:        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> generator:  <span class="hljs-comment">#不会显式触发异常，故而无法获取到return的值</span>            <span class="hljs-built_in">print</span>(i)    <span class="hljs-keyword">except</span> StopIteration <span class="hljs-keyword">as</span> exc:        <span class="hljs-built_in">print</span>(exc.value) g = my_generator()  <span class="hljs-comment">#调用</span>main(g)<span class="hljs-string">&#x27;&#x27;&#x27;运行结果为：</span><span class="hljs-string">0</span><span class="hljs-string">1</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div><p><strong>for迭代语句不会显式触发异常</strong>，故而无法获取到<strong>return的值</strong>，迭代到2的时候<strong>遇到return语句</strong>，<strong>隐式的触发了StopIteration异常</strong>，就<strong>终止迭代</strong>了，但是在程序中<strong>不会显示出来</strong>。</p><p>如果是使用<code>next()</code><strong>一次一次迭代</strong>，则会<strong>显式触发异常</strong>，但要获取return的返回值，我需要如下操作：</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">my_generator</span>():</span>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):        <span class="hljs-keyword">if</span> i==<span class="hljs-number">2</span>:            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;我被迫中断了&#x27;</span>        <span class="hljs-keyword">else</span>:            <span class="hljs-keyword">yield</span> i <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>(<span class="hljs-params">generator</span>):</span>    <span class="hljs-keyword">try</span>:        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(generator))   <span class="hljs-comment">#每次迭代一个值，则会显式出发StopIteration</span>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(generator))        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(generator))        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(generator))        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(generator))    <span class="hljs-keyword">except</span> StopIteration <span class="hljs-keyword">as</span> exc:        <span class="hljs-built_in">print</span>(exc.value)     <span class="hljs-comment">#获取返回的值</span>g=my_generator()main(g)<span class="hljs-string">&#x27;&#x27;&#x27;运行结果为：</span><span class="hljs-string">0</span><span class="hljs-string">1</span><span class="hljs-string">我被迫中断了</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div><p>现在我们使用<code>yield from</code>来完成上面的同样的功能：</p><div class="hljs code-wrapper"><pre><code class="hljs python">生成器中<span class="hljs-keyword">return</span>的值 = <span class="hljs-keyword">yield</span> <span class="hljs-keyword">from</span> 生成器对象</code></pre></div><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">my_generator</span>():</span>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):        <span class="hljs-keyword">if</span> i == <span class="hljs-number">2</span>:            <span class="hljs-comment"># 遇到return自动触发StopIteration异常</span>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;我被迫中断了&#x27;</span>        <span class="hljs-keyword">else</span>:            <span class="hljs-keyword">yield</span> i <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wrap_my_generator</span>(<span class="hljs-params">generator</span>):</span>  <span class="hljs-comment"># 定义一个包装“生成器”的生成器，它的本质还是生成器</span>    result = <span class="hljs-keyword">yield</span> <span class="hljs-keyword">from</span> generator    <span class="hljs-comment"># 自动触发StopIteration异常，并且将return的返回值赋值给yield from表达式的结果，即result</span>    <span class="hljs-built_in">print</span>(result) <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>(<span class="hljs-params">generator</span>):</span>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> generator:        <span class="hljs-built_in">print</span>(j) g = my_generator()wrap_g = wrap_my_generator(g)main(wrap_g)  <span class="hljs-comment">#调用</span><span class="hljs-string">&#x27;&#x27;&#x27;运行结果为：</span><span class="hljs-string">0</span><span class="hljs-string">1</span><span class="hljs-string">我被迫中断了</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div><p>从上面的比较可以看出，<code>yield from</code>具有以下几个<strong>特点</strong>：</p><ol><li><p><strong>单独<code>yield</code>时</strong>：的my_generator是原始的生成器，main是调用方，使用yield的时候，只涉及到这两个函数，即“调用方”与“生成器（协程函数）”是<strong>直接进行交互的，不涉及其他方法</strong>，即<strong>“调用方——&gt;生成器函数(协程函数)”；</strong></p></li><li><p><strong>在使用<code>yield from</code>的时</strong>：多了一个对原始my_generator的<strong>包装函数</strong>，然后<strong>调用方是通过这个包装函数</strong>（后面会讲到它专有的名词）来与<strong>生成器进行交互</strong>的，即<strong>“调用方——&gt;生成器包装函数——&gt;生成器函数(协程函数)”</strong>；</p></li><li><p><code>yield from iteration</code>结构会在内部<strong>自动捕获 iteration生成器的StopIteration 异常</strong>。这种处理方式与 for 循环处理 StopIteration 异常的方式一样。而且对 <code>yield from</code>结构来说，<strong>解释器不仅会捕获 StopIteration 异常，还会把return返回的值或者是StopIteration的value 属性的值变成 yield from 表达式的值，即上面的result。</strong></p></li></ol><blockquote><p>委派生成器：包含 <code>yield from</code> <iterable> <strong>表达式的生成器函数</strong>；即上面的wrap_my_generator<strong>生成器包装函数</strong></p></blockquote><blockquote><p>子生成器：从 <code>yield from</code> 表达式中 <iterable> 部分获取的生成器；即上面的my_generator<strong>生成器函数</strong></p></blockquote><blockquote><p>调用方：<strong>调用委派生成器的客户端代码</strong>；即上面的<strong>main调用方函数</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210814184753.png"></p><h4 id="2-yield-from的管道传输用法示例"><a href="#2-yield-from的管道传输用法示例" class="headerlink" title="2. yield from的管道传输用法示例"></a>2. yield from的管道传输用法示例</h4><p>其实<code>yield from</code>最重要的作用就是提供了一个<strong>“数据传输的管道”</strong>，下面通过一个简单的例子加以说明为什么是管道：</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">average</span>():</span>    total = <span class="hljs-number">0.0</span>  <span class="hljs-comment">#数字的总和</span>    count = <span class="hljs-number">0</span>    <span class="hljs-comment">#数字的个数</span>    avg = <span class="hljs-literal">None</span>   <span class="hljs-comment">#平均值</span>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:        num = <span class="hljs-keyword">yield</span> avg        total += num        count += <span class="hljs-number">1</span>        avg = total/count <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wrap_average</span>(<span class="hljs-params">generator</span>):</span>    <span class="hljs-keyword">yield</span> <span class="hljs-keyword">from</span> generator <span class="hljs-comment">#定义一个函数，通过这个函数向average函数发送数值</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>(<span class="hljs-params">wrap</span>):</span>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(wrap))  <span class="hljs-comment">#启动生成器</span>    <span class="hljs-built_in">print</span>(wrap.send(<span class="hljs-number">10</span>))  <span class="hljs-comment"># 10</span>    <span class="hljs-built_in">print</span>(wrap.send(<span class="hljs-number">20</span>))  <span class="hljs-comment"># 15</span>    <span class="hljs-built_in">print</span>(wrap.send(<span class="hljs-number">30</span>))  <span class="hljs-comment"># 20</span>    <span class="hljs-built_in">print</span>(wrap.send(<span class="hljs-number">40</span>))  <span class="hljs-comment"># 25</span>  g = average()wrap = wrap_average(g)main(wrap) <span class="hljs-string">&#x27;&#x27;&#x27;运行结果为：</span><span class="hljs-string">None</span><span class="hljs-string">10.0</span><span class="hljs-string">15.0</span><span class="hljs-string">20.0</span><span class="hljs-string">25.0</span><span class="hljs-string">&#x27;&#x27;&#x27;</span></code></pre></div><p>从上面我们可以发现，调用方发送的数据是发给<code>wrap_average</code>的，怎么依然到了生成器函数<code>average</code>里面呢？这就是<strong>“数据传输管道的作用”</strong>。即<strong>主函数调用方main把各个value传给grouper</strong> ，而这个传入的值<strong>最终到达averager函数中</strong>； <strong>grouper并不知道传入的是什么值</strong>，因为从上面的代码看出，**<code>wrap_average</code>里面完全没有处理这个值的任何代码！**</p><h2 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h2><h3 id="函数引用"><a href="#函数引用" class="headerlink" title="函数引用"></a>函数引用</h3>   <div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test</span>():</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;1&quot;</span>)<span class="hljs-built_in">print</span>(test)<span class="hljs-comment"># &lt;function __main__.test&gt;</span>a = test <span class="hljs-comment"># 变量A指向函数对象</span>a() <span class="hljs-comment"># 变量A可调用函数</span></code></pre></div><h3 id="什么是闭包"><a href="#什么是闭包" class="headerlink" title="什么是闭包"></a>什么是闭包</h3><blockquote><p><strong>在函数内部再定义一个函数，并且这个函数用到了外边函数的变量，那么将这些函数以及用到的一些变量称之为闭包。</strong></p></blockquote><h3 id="闭包的应用"><a href="#闭包的应用" class="headerlink" title="闭包的应用"></a>闭包的应用</h3>   <div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">parse</span>(<span class="hljs-params">number: <span class="hljs-built_in">int</span></span>):</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;第一层函数&quot;</span>, number)    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sum</span>(<span class="hljs-params">number2</span>):</span>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;第二层函数加和后&quot;</span>, number+number2)    <span class="hljs-keyword">return</span> <span class="hljs-built_in">sum</span><span class="hljs-comment"># 接受函数对象的引用</span>func = parse(<span class="hljs-number">100</span>)func(<span class="hljs-number">100</span>)</code></pre></div><p>   <img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210719211704.png"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210719215011.png"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210719215459.png"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210719215842.png"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210719220126.png"></p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 编写闭包函数</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkLogin</span>(<span class="hljs-params">func</span>):</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;准备检查权限&quot;</span>)    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">inner</span>():</span>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;权限正确!&quot;</span>)        func()  <span class="hljs-comment"># 执行函数的变量</span>    <span class="hljs-keyword">return</span> inner  <span class="hljs-comment"># 返回一个函数对象</span><span class="hljs-comment"># main变量指向的是mian函数</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;执行业务1&quot;</span>)<span class="hljs-comment"># 不用修改主函数的内容,就可以扩展主函数.</span>main = checkLogin(main)  <span class="hljs-comment"># 此时main变量指向的是inner函数</span>main()<span class="hljs-comment"># 等效于</span><span class="hljs-comment"># 到这里python会运行 checkLogin函数,并把下面的函数名变量指向 checkLogin 函数的返回值,即 inner 函数</span><span class="hljs-meta">@checkLogin</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">mian</span>():</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;执行业务2&quot;</span>)<span class="hljs-comment"># 在调用main之前已经被装饰了</span>mian()</code></pre></div><h3 id="多个修饰器，从下到上修饰"><a href="#多个修饰器，从下到上修饰" class="headerlink" title="多个修饰器，从下到上修饰"></a>多个修饰器，从下到上修饰</h3><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210720161511.png"></p><blockquote><p><strong>装饰是倒着装的，执行是顺着执行的。</strong></p></blockquote><h3 id="装饰有参数的函数"><a href="#装饰有参数的函数" class="headerlink" title="装饰有参数的函数"></a>装饰有参数的函数</h3><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210720162540.png"></p><blockquote><p>对不定长参数的传递</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210720162754.png"></p><h3 id="装饰有返回值的参数"><a href="#装饰有返回值的参数" class="headerlink" title="装饰有返回值的参数"></a>装饰有返回值的参数</h3><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210720163328.png" alt="image-20210720163327239"></p><h3 id="通用修饰器"><a href="#通用修饰器" class="headerlink" title="通用修饰器"></a>通用修饰器</h3><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210720164146.png"></p><h3 id="带参数的修饰器"><a href="#带参数的修饰器" class="headerlink" title="带参数的修饰器"></a>带参数的修饰器</h3><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210818144548.png"></p><blockquote><p>在函数中嵌套闭包函数</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Flask Web 框架学习笔记</title>
    <link href="/2021/08/18/Flask%20Web%20%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/08/18/Flask%20Web%20%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="Flask-Web-框架学习笔记"><a href="#Flask-Web-框架学习笔记" class="headerlink" title="Flask Web 框架学习笔记"></a>Flask Web 框架学习笔记</h1><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210818152255.png"></p><h2 id="1-Flask-初始化参数"><a href="#1-Flask-初始化参数" class="headerlink" title="1. Flask 初始化参数"></a>1. Flask 初始化参数</h2><blockquote><p><strong>Flask程序实例</strong>在创建的时候，需要<strong>默认传入当前Flask程序所指定的包</strong>(模块).</p></blockquote><ul><li>import name<ul><li>Flask程序所在的包(模块),传 <code>__name__</code> 就可以</li><li>其可以决定Flask在访问静态文件时查找的路径</li></ul></li><li>static_ <em>url</em> _path<ul><li>静态文件访问路径，可以不传，默认为: /+静态文件目录名</li></ul></li><li>static_ folder<br>-静态文件存储的文件夹，可以不传，默认为 static</li><li>template_ folder<ul><li>模板文件存储的文件夹，可以不传，默认为 templates</li></ul></li></ul><h3 id="Flask-基本编写"><a href="#Flask-基本编写" class="headerlink" title="Flask 基本编写"></a>Flask 基本编写</h3><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 导入Flask类</span><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask<span class="hljs-comment">#Flask类接收一个参数 __name__</span>app = Flask(__name__)<span class="hljs-comment"># 装饰器的作用是将路由映射到视图函数index</span><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>() :</span><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello World&#x27;</span><span class="hljs-comment"># Flask应用程序实例的run方法启动WEB服务器</span><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:app.run()</code></pre></div><h2 id="2-Flask-工程配置加载的方式"><a href="#2-Flask-工程配置加载的方式" class="headerlink" title="2. Flask 工程配置加载的方式"></a>2. Flask 工程配置加载的方式</h2><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>Flask将配置信息保存到了<code>app.config</code>属性中，该属性可以按照<strong>字典类型</strong>进行操作。</p><div class="hljs code-wrapper"><pre><code class="hljs python3">app.config.get(name) # 读取app.config[name] # 修改</code></pre></div><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><ul><li><p><strong>从配置对象中加载</strong></p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DefaultConfig</span>(<span class="hljs-params">oject</span>):</span>    <span class="hljs-comment"># 密钥</span>    SECRET_KET = <span class="hljs-string">&#x27;lovehyy2021209classpzezprem&#x27;</span>app = Flask(__name__)app.config.from_object(DefaultConfig) <span class="hljs-comment"># 从配置对象中加载</span><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>) </span><span class="hljs-comment"># 装饰器-&gt;路由</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>():</span> <span class="hljs-comment"># 视图函数</span>    <span class="hljs-built_in">print</span>(app.config[<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>])    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;hello world&#x27;</span></code></pre></div></li><li><p><strong>从配置文件中加载</strong></p><p>在项目目录下新建<code>setting.py</code>文件，存放大写常量</p><div class="hljs code-wrapper"><pre><code class="hljs python">SECRET_KET = <span class="hljs-string">&#x27;lovehyy2021209classpzezprem&#x27;</span></code></pre></div><p>在Flask程序文件中</p><div class="hljs code-wrapper"><pre><code class="hljs python">app = Flask(__name__)app.config.from_pyfile(<span class="hljs-string">&#x27;setting.py&#x27;</span>) <span class="hljs-comment"># 从配置文件加载</span></code></pre></div></li><li><p><strong>从环境变量中加载</strong></p><blockquote><p><strong>环境变量(environment variables)</strong> 一般是指在操作系统中用来指定操作系统运行环境的一些参数，如:临时文件夹位置和系统文件夹位置等。环境变量是在操作系统中一个具有特定名字的对象，它包含了一个或者多个应用程序所将使用到的信息。</p></blockquote><p><strong>通俗的理解，环境变量就是我们设置在操作系统中，由操作系统代为保存的变量值</strong>:</p><p>在Linux系统中设置和读取环境变量的方式如下:</p><div class="hljs code-wrapper"><pre><code class="hljs shell">export 变量名=变量值 # 设置echo $变量名 # 读取</code></pre></div><p><strong>Flask使用环境变量加载配置的本质是通过环境变量值找到配置文件</strong>，再读取配置文件的信息，其使用方式为：<br><code>app.config.from_ envvar(&#39;环境变量名&#39;)</code></p><p><strong>环境变量的值为配置文件的绝对路径</strong>先在终端中执行如下命令：</p><p><code>export PROJECT_ _SETTING= &#39;~/ setting. py&#39;</code></p><p>再运行如下代码</p><div class="hljs code-wrapper"><pre><code class="hljs python">app = Flask(__ name__)app.config.from_envvar(<span class="hljs-string">&#x27;PROJECT_ SETTING&#x27;</span>, silent=<span class="hljs-literal">True</span>)</code></pre></div></li><li><p><strong>各配置方式优缺点</strong></p><ul><li><strong>app.config.from _object(配置对象)</strong><ul><li>继承- -&gt;优点复用</li><li>敏感数据暴露缺点</li></ul></li><li><strong>app.config.from_pyfile(配置文件)</strong><ul><li>优点 –&gt; 独立文件保护敏感数据</li><li>缺点 –&gt; 不能继承文件路径固定不灵活</li></ul></li><li><strong>app.config.from_envvar(“环境变量名”)</strong><ul><li>优点 –&gt; 独立文件保护敏感数据文件路径不固定灵活</li><li>缺点 –&gt; 不方便要记得设置环境量</li></ul></li><li><strong>设置环境变量</strong><ul><li>终端export</li><li>pycharm设置</li></ul></li></ul></li></ul><h3 id="利用工厂函数设置"><a href="#利用工厂函数设置" class="headerlink" title="利用工厂函数设置"></a>利用工厂函数设置</h3><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DefaultConfig</span>(<span class="hljs-params"><span class="hljs-built_in">object</span></span>):</span>    DEBUG = <span class="hljs-literal">True</span>    SECRET_KEY = <span class="hljs-string">&#x27;lovehyy2021pzez209class&#x27;</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">create_flask_app</span>(<span class="hljs-params">config</span>):</span>    <span class="hljs-string">&#x27;&#x27;&#x27;构建flask对象的工厂函数,传入配置对象,返回配置后的app对象&#x27;&#x27;&#x27;</span>    app = Flask(__name__, static_url_path=<span class="hljs-string">&#x27;/static&#x27;</span>, static_folder=<span class="hljs-string">&#x27;static&#x27;</span>)    app.config.from_object(config)    <span class="hljs-keyword">return</span> appapp = create_flask_app(DefaultConfig)<span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span>, methods=[<span class="hljs-string">&quot;GET&quot;</span>]</span>)</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>():</span>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Hello Flask&quot;</span><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__mian__&#x27;</span>:    app.run()</code></pre></div><h2 id="3-Flask-运行方式"><a href="#3-Flask-运行方式" class="headerlink" title="3. Flask 运行方式"></a>3. Flask 运行方式</h2><h3 id="直接运行py文件启动"><a href="#直接运行py文件启动" class="headerlink" title="直接运行py文件启动"></a>直接运行py文件启动</h3><p>可以指定运行的主机IP地址，端口，是否开启调试模式</p><div class="hljs code-wrapper"><pre><code class="hljs python">app.run(host=<span class="hljs-string">&quot;0.0.0.0&quot;</span>, port=<span class="hljs-number">5000</span>, debug=<span class="hljs-literal">True</span>)</code></pre></div><p>关于<strong>DEBUG调试模式</strong>：</p><ol><li>程序代码修改后可以自动重启服务器</li><li>在服务器出现相关错误的时候可以直接将错误信息返回到前端进行展示</li></ol><h3 id="新版启动方式"><a href="#新版启动方式" class="headerlink" title="新版启动方式"></a>新版启动方式</h3><p><strong>开发服务器</strong>启动方式：<br>在1.0版本之后，Flask调整了开发服务器的启动方式，由代码编写app. run()语句调整为<strong>命令启动flask</strong></p><p>终端启动：</p><div class="hljs code-wrapper"><pre><code class="hljs shell">export FLASK_APP=main # 设置启动的python文件flask run # 在项目文件下执行</code></pre></div><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>环境变量 <strong>FLASK_APP</strong> 指明flask的启动实例：</p><ul><li><code>flask run -h 0.0.0.0 -p 8000</code>绑定地址端口</li><li><code>flask run --help</code> 获取帮助</li><li>生产模式与开发模式的控制<br>通过<code>FLASK_ENV</code>环境变量指明<ul><li><code>export FLASK_ ENV=production</code> 运行在生产模式，未指明则默认为此方式</li><li><code>export FLASK_ ENV=development</code> 运行在开发模式</li></ul></li></ul><h2 id="4-Flask-路由"><a href="#4-Flask-路由" class="headerlink" title="4. Flask 路由"></a>4. Flask 路由</h2><h3 id="查询路由信息"><a href="#查询路由信息" class="headerlink" title="查询路由信息"></a>查询路由信息</h3><ul><li><p>命令行方式</p><div class="hljs code-wrapper"><pre><code class="hljs shell">flask routes</code></pre></div></li><li><p>在应用中的<code>url_ map</code>属性中保存着整个Flask应用的<strong>路由映射信息</strong>，可以通过读取这个属性获取<strong>路由信息</strong>。</p><p><code>print(app.url_map)</code><br>如果想在程序中遍历路由信息，可以采用如下方式：</p><div class="hljs code-wrapper"><pre><code class="hljs python">  <span class="hljs-keyword">for</span> rule <span class="hljs-keyword">in</span> app.url_map.iter_rules():      <span class="hljs-comment"># endpoint 视图函数的名字</span>      <span class="hljs-comment"># rule 路由的路径</span>  <span class="hljs-built_in">print</span>( <span class="hljs-string">&#x27;name=&#123;&#125; path=&#123;&#125;&#x27;</span>. <span class="hljs-built_in">format</span>(rule.endpoint, rule.rule))- 搭建一个**返回所有路由信息**的json接口  ```python<span class="hljs-meta">  @app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span>, methods=[<span class="hljs-string">&quot;GET&quot;</span>]</span>)</span>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>():</span>      <span class="hljs-comment"># for rule in app.url_map.iter_rules():</span>      <span class="hljs-comment">#     print(f&quot;name=&#123;rule.endpoint&#125;;path=&#123;rule.rule&#125;&quot;)</span>      rules_iterator = app.url_map.iter_rules()      <span class="hljs-comment"># 字典推导式</span>      dic = &#123;          rule.endpoint: rule.rule          <span class="hljs-keyword">for</span> rule <span class="hljs-keyword">in</span> rules_iterator      &#125;      <span class="hljs-comment"># 利用jsonify返回json数据</span>      <span class="hljs-keyword">return</span> jsonify(dic)</code></pre></div></li></ul><h2 id="5-路由-options-限定请求方式-methods"><a href="#5-路由-options-限定请求方式-methods" class="headerlink" title="5. 路由 options 限定请求方式 methods"></a>5. 路由 options 限定请求方式 methods</h2><h3 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h3><ul><li><p><strong>GET</strong>(自带)</p></li><li><p><strong>OPTIONS</strong>(自带)  -&gt; 简化版的GET请求用于询问服务器接口信息的<br>比如接口允许的请求方式允许的</p><blockquote><p>CORS跨域:<br><a href="http://www.meiduo.site/">www.meiduo.site</a> -&gt; api.meiduo.site/users/1<br>options api.meiduo.site/uses/1</p></blockquote></li><li><p><strong>HEAD</strong>(自带) -&gt; 简化版的GET请求</p><blockquote><p>只返回GET请求处理时的响应头，不返回响应体。</p></blockquote></li></ul><h3 id="指定接口请求方式"><a href="#指定接口请求方式" class="headerlink" title="指定接口请求方式"></a>指定接口请求方式</h3><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 利用修饰器中的methods返回设定请求接口方式</span><span class="hljs-comment"># 定义视图</span><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span>, methods=[<span class="hljs-string">&quot;POST&quot;</span>]</span>)</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>():</span>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;POST API&#x27;</span></code></pre></div><h2 id="6-蓝图"><a href="#6-蓝图" class="headerlink" title="6. 蓝图"></a>6. 蓝图</h2><h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h3><p>在一个<strong>Flask应用项目</strong>中，如果<strong>业务视图</strong>过多，可以用某种方式划分出的<strong>业务单元单独维护</strong>，将每个单元用到的<strong>视图、静态文件、模板文件</strong>等独立分开。</p><p>例如从<strong>业务角度</strong>上，可将整个应用划分为<strong>用户模块单元、商品模块单元、订单模块单元</strong>，分别开发这些不同单元，并最终整合到一个项目应用中。</p><h3 id="蓝图"><a href="#蓝图" class="headerlink" title="蓝图"></a>蓝图</h3><p>在Flask中，使用<strong>蓝图Blueprint</strong>来分模块组织管理。</p><p>蓝图实际可以理解为是<strong>一个存储一组视图方法的容器对象</strong>，其具有如下特点:</p><ul><li>一个应用可以具有<strong>多个Blueprint</strong></li><li>可以将一个<strong>Blueprint注册到</strong>任何一个未使用的<strong>URL</strong>下，比如“/user”、 “/godds”。</li><li><strong>Blueprint</strong>可以单独具有<strong>自己的模板、静态文件</strong>或者其它的通用操作方法，它并不是必须要实现应用的视图和函数的</li><li>在一个<strong>应用初始化</strong>时，就应该要<strong>注册需要使用的Blueprint</strong>。★</li><li>但是一个<strong>Blueprint</strong>并不是一个完整的应用，它<strong>不能独立于应用运行</strong>，而必须要<strong>注册到某一个应用中</strong>。★</li></ul><h3 id="定义蓝图"><a href="#定义蓝图" class="headerlink" title="定义蓝图"></a>定义蓝图</h3><ol><li><p>定义</p><div class="hljs code-wrapper"><pre><code class="hljs python">user_bp = Blueprint(<span class="hljs-string">&#x27;user&#x27;</span>, __name__)</code></pre></div></li><li><p>在这个<strong>蓝图对象上进行操作</strong>,<strong>注册路由</strong>,<strong>指定静态文件夹</strong>,<strong>注册模版过滤器</strong></p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">@user_bp.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">user_profile</span>():</span>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;user_profile&#x27;</span></code></pre></div></li><li><p>在应用对象中注册这个蓝图对象</p><div class="hljs code-wrapper"><pre><code class="hljs python">app.register_blueprint(user_bp)</code></pre></div></li></ol><h3 id="单文件蓝图"><a href="#单文件蓝图" class="headerlink" title="单文件蓝图"></a>单文件蓝图</h3><p>可以将创建蓝图对象与定义视图函数放在一个文件中。</p><h3 id="目录（包）蓝图"><a href="#目录（包）蓝图" class="headerlink" title="目录（包）蓝图"></a>目录（包）蓝图</h3><p>对于一个打算包含<strong>多个文件的蓝图</strong>，通常将<strong>创建蓝图对象</strong>放到Python包的<code>__init__.py</code> 文件中</p><div class="hljs code-wrapper"><pre><code class="hljs jboss-cli"><span class="hljs-params">---------</span> project <span class="hljs-comment"># 工程目录</span>|<span class="hljs-params">----</span> main.py <span class="hljs-comment"># 启动文件</span>|<span class="hljs-params">----</span> user <span class="hljs-comment"># 用户蓝图</span>||<span class="hljs-params">----</span> __init__.py <span class="hljs-comment"># 此处创建蓝图对象</span>||<span class="hljs-params">----</span> views.py</code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210725224412.png" alt="蓝图包目录实例"></p><h4 id="循环引用问题"><a href="#循环引用问题" class="headerlink" title="循环引用问题"></a>循环引用问题</h4><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210725224744.png" alt="循环引用问题"></p><blockquote><p>所以导入视图函数要放在 <code>__init__.py</code> 文件的最后</p></blockquote><h3 id="蓝图内部静态文件"><a href="#蓝图内部静态文件" class="headerlink" title="蓝图内部静态文件"></a>蓝图内部静态文件</h3><p>和<strong>应用对象</strong>不同，蓝图对象创建时<strong>不会默认注册静态目录的路由</strong>。需要我们在创建时指定<code>static_folder</code>参数。</p><p>下面的示例将蓝图所在目录下的<code>static_admin</code>目录设置为静态目录</p><div class="hljs code-wrapper"><pre><code class="hljs python">admin = Blueprint (<span class="hljs-string">&quot;admin&quot;</span>,__ name__ , static_folder=<span class="hljs-string">&#x27;static_admin&#x27;</span>)app.register_blueprint (admin, url_prefix=<span class="hljs-string">&#x27;/admin&#x27;</span> )</code></pre></div><p>现在就可以使用<code>/admin/static_admin/&lt;filename&gt;</code>访问<code>static_ admin</code>目录下的静态文件了。<br>也可通过<code>static_url_path</code>改变访问路径</p><div class="hljs code-wrapper"><pre><code class="hljs python">admin = Blueprint(<span class="hljs-string">&quot;admin&quot;</span>,__name__, static_folder=<span class="hljs-string">&#x27;static_admin&#x27;</span> ,static_url_path=<span class="hljs-string">&#x27;/lib&#x27;</span>)app.register_blueprint(admin, url_prefix=<span class="hljs-string">&#x27;/admin&#x27;</span>)</code></pre></div><h2 id="7-处理请求"><a href="#7-处理请求" class="headerlink" title="7. 处理请求"></a>7. 处理请求</h2><blockquote><p>在视图编写中需要读取客户端请求携带的数据时，如何才能正确的<strong>取出数据</strong>呢?<br><strong>请求携带的数据</strong>可能出现在HTTP报文中的不同位置，需要<strong>使用不同的方法来获取参数</strong>。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/18/2021-08-18%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/18/2021-08-18%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月18日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210818/002238-ajiupw4lf2.png"></p><p>任务： <strong>2人合力开启一道门</strong></p><p>位置：有双人门的场景，比如云野、霞谷、禁阁</p><p>步骤：点燃双人门一边的机关，有玩家点燃另一边开启门的话，就能完成任务啦</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210818/002331-zeqi3fusgr.png"></p><p>任务： <strong>收集蓝色光芒</strong></p><p>位置：霞谷-滑冰场</p><p>步骤：进入霞谷后，往前方滑行，来到滑冰场下方收集蓝色光芒</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210818/002415-g9e85n6mco.png"></p><p>任务： <strong>净化10株黑暗植物</strong></p><p>位置：有黑暗植物的地图，比如雨林、云野、墓土</p><p>步骤：用蜡烛将黑暗植物燃烧掉即可。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210818/003007-v63stcew2f.png"></p><p>任务： <strong>在霞光城拱门上冥想</strong></p><p>位置：霞谷-拱门上方</p><p>步骤：从霞谷滑冰场进入霞光城（去飞行赛道的方向），走完长阶梯后，可以找到的拱门上面的冥想点~</p><p>难度：⚡⚡⚡</p><p> <strong>🌹2021年8月18日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210818/001917-us6vw37rbq.png"></p><p> <strong>🔥2021年8月18日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210818/002151-4azg6v8r9i.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/17/2021-08-17%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/17/2021-08-17%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月17日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210817/001746-1u0bdtgsn6.png"></p><p>任务： <strong>2人合力开启一道门</strong></p><p>位置：有双人门的场景，比如云野、霞谷、禁阁</p><p>步骤：点燃双人门一边的机关，有玩家点燃另一边开启门的话，就能完成任务啦</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210817/001829-pz5iflms8d.png"></p><p>任务： <strong>收集绿色光芒</strong></p><p>位置：云野-右边隐藏图</p><p>步骤：进入云野一图后往右边走，进入隐藏地图，在左侧的浮空岛等候绿色光芒掉落，需要有一定的耐心噢</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210817/001915-dc928varyj.png"></p><p>任务： <strong>净化10株黑暗植物</strong></p><p>位置：有黑暗植物的地图，比如雨林、云野、墓土</p><p>步骤：用蜡烛将黑暗植物燃烧掉即可。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210817/001940-r28lgos9ea.png"></p><p>任务： <strong>在密林遗迹冥想</strong></p><p>位置：雨林-密林遗迹（断桥图/水母图）</p><p>步骤：来到雨林断桥图后，冥想点在断桥旁边的亭子里~</p><p>难度：⚡⚡</p><p> <strong>🌹2021年8月17日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210817/001719-ifgy1o6hut.png"></p><p> <strong>🔥2021年8月17日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210817/002036-cje8nogtka.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/16/2021-08-16%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/16/2021-08-16%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月16日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210816/005221-4w8le3o051.png"></p><p>任务： <strong>向一位朋友做个动作</strong></p><p>位置：任意场景</p><p>步骤：传送到好友的房间，面向好友，点开动作列表后使用任意动作即可</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210816/005325-jysl13oq9h.png"></p><p>任务： <strong>净化10株黑暗植物</strong></p><p>位置：有黑暗植物的地图，比如雨林、云野、墓土</p><p>步骤：用蜡烛将黑暗植物燃烧掉即可。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210816/005402-ltebqw57jo.png"></p><p>任务： <strong>收集橙色光芒</strong></p><p>位置：雨林-密林遗迹（水母图）</p><p>步骤：进入雨林四图后往左前方走，在树林里收集橙色光芒，能量充足可以飞起来收集，也可以在下方等光芒经过</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210816/005438-tap75u8ndc.png"></p><p>任务： <strong>在云顶浮石上冥想</strong></p><p>位置：云野-右侧隐藏图（去圣岛的方向）</p><p>步骤：进入云野后往右边走，进入隐藏图，找到光圈完成冥想即可~</p><p>难度：⚡</p><p> <strong>🌹2021年8月16日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210816/004606-ifvsu9p7og.png"></p><p> <strong>🔥2021年8月16日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210816/005154-y5972iwufs.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210816/005146-usigjq9e26.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210816/005129-2hjz4p7esg.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210816/005123-ym26e491f3.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210816/004716-oghatz6vy8.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210816/004632-v1ci6bnk8z.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210816/004627-jgqdp0y8n1.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/15/2021-08-15%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/15/2021-08-15%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月15日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012259-4tksyo38e7.png"></p><p>任务： <strong>接受一位朋友的礼物</strong></p><p>位置：遇境</p><p>步骤：点开好友星盘，收取好友给自己赠送的心火或者爱心</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012201-d9im6v3yoc.png"></p><p>任务： <strong>收集紫色光芒</strong></p><p>位置：禁阁-地下室</p><p>步骤：进入禁阁往右边走，开启双人门进入地下室，通道出来可以看到紫色光芒，飞起进行收集即可</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012348-fs6qy0zlow.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012359-a17gpovks2.png"></p><p>任务： <strong>拯救一只被黑暗藤蔓困住的遥鲲</strong></p><p>位置：雨林-密林遗迹（断桥图/水母图）</p><p>步骤：蜡烛烧掉黑暗藤蔓，让遥鲲飞走即可完成任务。</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012508-7fm2hqyuti.png"></p><p>任务： **在禁阁重温先祖的美好回忆  **</p><p>位置：禁阁-三层</p><p>步骤：到禁阁三层，完成回忆任务即可</p><p>难度：⚡</p><p> <strong>🌹2021年8月15日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012117-t07l6sckvm.png"></p><p> <strong>🔥2021年8月15日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012756-djcepz86fm.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012743-ktyo6dfwlr.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012737-nfepzdw8hc.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012737-eqk0bnsycp.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012728-r8yob3ts4c.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012723-mza0lnuftd.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012719-qsvoc0jtyg.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012714-372ator5n1.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210815/012806-eibgzsnf5r.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/14/2021-08-14%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/14/2021-08-14%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月14日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210814/005809-w742crzpvy.png"></p><p>任务： <strong>向一位朋友做个动作</strong></p><p>位置：任意场景</p><p>步骤：传送到好友的房间，面向好友，点开动作列表后使用任意动作即可</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210814/005857-9v3hnus5r6.png"></p><p>任务： <strong>在巨兽荒原的神坛旁冥想</strong></p><p>位置：墓土-巨兽荒原（三图）</p><p>步骤：进入墓土三图后，直接往前飞，着陆之后往右边走，在光圈内完成冥想。光线较暗，注意躲避冥龙哦</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210814/005943-3szevyskah.png"></p><p>任务： <strong>收集橙色光芒</strong></p><p>位置：雨林-密林遗迹（水母图）</p><p>步骤：进入雨林四图后往左前方走，在树林里收集橙色光芒，能量充足可以飞起来收集，也可以在下方等光芒经过</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210814/010103-21fp4358kd.png"></p><p>任务： <strong>掀翻5只螃蟹</strong></p><p>位置：有螃蟹的场景，比如墓土、雨林</p><p>步骤：长按自己的角色大叫即可掀翻身边的螃蟹。</p><p>难度：⚡⚡</p><p> <strong>🌹2021年8月14日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210814/005654-esimtu8r57.png"></p><p> <strong>🔥2021年8月14日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210814/005742-bkohz5vfyp.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210814/010301-b2ss139wdt.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210814/010258-zys71c0p9a.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210814/010434-gq5td0kvl7.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210814/010428-yrd3oqvel2.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210814/010501-ipha9kez7c.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210814/010452-v9n1pq8d0o.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/13/2021-08-13%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/13/2021-08-13%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月13日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210813/011154-z489tfwp63.png"></p><p>任务： <strong>和朋友击掌</strong></p><p>位置：任意场景</p><p>步骤：点击好友，在好友树使用【击掌】</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210813/011334-z7p2rf1kv4.png"></p><p>任务： <strong>收集橙色光芒</strong></p><p>位置：雨林-密林遗迹（水母图）</p><p>步骤：进入雨林四图后往左前方走，在树林里收集橙色光芒，能量充足可以飞起来收集，也可以在下方等光芒经过</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210813/011407-y1zqb43n0g.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210813/011436-nzkcmi0ta8.png"></p><p>任务： <strong>拯救一只被黑暗藤蔓困住的遥鲲</strong></p><p>位置：雨林-密林遗迹（断桥图/水母图）</p><p>步骤：蜡烛烧掉黑暗藤蔓，让遥鲲飞走即可完成任务。</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210813/011517-yvjd0bu62o.png"></p><p>任务： <strong>在滑冰场旁冥想</strong></p><p>位置：霞谷-滑冰场</p><p>步骤：来到霞谷滑冰场，冥想点在高处的山上~</p><p>难度：⚡</p><p> <strong>🌹2021年8月13日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210813/010647-vbwsdg57j2.png"></p><p> <strong>🔥2021年8月13日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210813/010817-dzu3t9y4rs.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210813/010856-2v3n0zj94y.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210813/010732-97v0ik548t.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210813/010718-r4sl018ub5.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210813/010955-h5o3ym6juf.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210813/010947-5hy01wnmik.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210813/011112-37snc0y4db.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210813/011102-5rzsm870eh.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇08.12复刻攻略</title>
    <link href="/2021/08/12/2021-08-12%20%E5%85%89%E9%81%8708.12%E5%A4%8D%E5%88%BB%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/12/2021-08-12%20%E5%85%89%E9%81%8708.12%E5%A4%8D%E5%88%BB%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇08-12复刻攻略"><a href="#光遇08-12复刻攻略" class="headerlink" title="光遇08.12复刻攻略"></a>光遇08.12复刻攻略</h1><p><img src="https://ok.166.net/reunionpub/ds/kol/20210812/095752-aujgtir0lw.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210812/095804-wyq0bktsa1.jpeg"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇08.12复刻攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/12/2021-08-12%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/12/2021-08-12%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月12日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210812/001856-op5gesihc6.png"></p><p>任务： <strong>收集紫色光芒</strong></p><p>位置：禁阁-地下室</p><p>步骤：进入禁阁往右边走，开启双人门进入地下室，通道出来可以看到紫色光芒，飞起进行收集即可</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210812/001958-calh5ui4sm.png"></p><p>任务： <strong>点燃20根蜡烛</strong></p><p>位置：任意场景</p><p>步骤：点燃20根蜡烛即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210812/002245-0bjf4oguns.png"></p><p>任务： <strong>给一位朋友送礼</strong></p><p>位置：遇境</p><p>步骤：点开好友星盘，选择一位好友赠送爱心（消耗3根蜡烛）</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210812/002339-fs01zg2bjk.png"></p><p>任务： **在雨林重温先祖的美好回忆  **</p><p>位置：雨林一图</p><p>步骤：进入第一道门后可看到先祖，要注意避雨哦。</p><p>难度：⚡</p><p> <strong>🌹2021年8月12日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210812/001531-3djskp970t.png"></p><p> <strong>🔥2021年8月12日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210812/001607-j9th6vy8ur.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210812/001554-m0wjduq61a.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210812/001549-vo9fn6jkt0.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210812/001726-y5asp1n6md.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210812/001652-eszwfdyk31.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210812/001648-9ealqkjz6g.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/11/2021-08-11%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/11/2021-08-11%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月11日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210811/001027-elriofqn63.png"></p><p>任务： <strong>向一位朋友做个动作</strong></p><p>位置：任意场景</p><p>步骤：传送到好友的房间，面向好友，点开动作列表后使用任意动作即可</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210811/001051-du6gzph9nv.png"></p><p>任务： <strong>收集紫色光芒</strong></p><p>位置：禁阁-地下室</p><p>步骤：进入禁阁往右边走，开启双人门进入地下室，通道出来可以看到紫色光芒，飞起进行收集即可</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210811/001128-kp91yvrs4i.png"></p><p>任务： <strong>掀翻5只螃蟹</strong></p><p>位置：有螃蟹的场景，比如墓土、雨林</p><p>步骤：长按自己的角色大叫即可掀翻身边的螃蟹。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210811/002340-lazs6khec8.png"></p><p>任务： <strong>在仙乡的金塔下冥想</strong></p><p>位置：云野-三座金塔地图</p><p>步骤：进入云野后往前方走，来到三座塔的地图，往左边飞，在金塔旁边找到光圈，完成冥想~</p><p>难度：⚡</p><p> <strong>🌹2021年8月11日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210811/001323-l7izsq851v.png"></p><p> <strong>🔥2021年8月11日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210811/002016-3817rqgbzc.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210811/002008-wqf7n81m45.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210811/001752-9i2zvnmco3.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210811/001707-vor1mk352l.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210811/001709-g5nb4evc0m.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210811/001605-oqrpe26jmu.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210811/001604-puy87fv6bs.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/10/2021-08-10%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/10/2021-08-10%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月10日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210810/001416-rgdpb4ketj.png"></p><p>任务： <strong>收集30点烛光</strong></p><p>位置：任意场景</p><p>步骤：收集30点烛光即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210810/001557-2v80s6uyfc.png"></p><p>任务： <strong>向一位朋友招手</strong></p><p>位置：任意场景</p><p>步骤：传送到好友的房间，面向好友，点开动作列表后使用【招手】即可</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210810/001637-dpwkn3v6b9.png"></p><p>任务： <strong>收集红色光芒</strong></p><p>位置：墓土-遗忘方舟</p><p>步骤：进入墓土一图后往右边走，乘坐小船进入遗忘方舟地图，一直往前即可找到红色光芒！</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210810/001723-ezul95v7mq.png"></p><p>任务： <strong>在禁阁的神坛旁冥想</strong></p><p>位置：禁阁-顶层</p><p>步骤：来到禁阁的顶层，即可找到冥想点</p><p>难度：⚡⚡</p><p> <strong>🌹2021年8月10日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210810/001255-cklimosbqj.png"></p><p> <strong>🔥2021年8月10日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210810/001918-hnbmspdyz1.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210810/001907-dtfrkqjwep.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210810/001902-muw652sgsl.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210810/002106-fsw5v4s6gu.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210810/002106-lp79d0o64t.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210810/002226-7n4k2eshma.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210810/002223-qoajn4heus.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/09/2021-08-09%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/09/2021-08-09%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月9日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210809/001432-ctdq8uylve.png"></p><p>任务： <strong>向一位朋友做个动作</strong></p><p>位置：任意场景</p><p>步骤：传送到好友的房间，面向好友，点开动作列表后使用任意动作即可</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210809/001546-5id3mltpzs.png"></p><p>任务： <strong>在墓土追逐散落的星光</strong></p><p>位置：墓土一图</p><p>步骤：来到墓土一图触碰到飞舞的星光即可完成任务。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210809/001705-sirqwtd5bo.png"></p><p>任务： <strong>在巨兽荒原的神坛旁冥想</strong></p><p>位置：墓土-巨兽荒原（三图）</p><p>步骤：进入墓土三图后，直接往前飞，着陆之后往右边走，在光圈内完成冥想。光线较暗，注意躲避冥龙哦</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210809/001758-salycsg10b.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210809/001750-gsfpbijd29.png"></p><p>任务： <strong>拯救一只被黑暗藤蔓困住的遥鲲</strong></p><p>位置：雨林-密林遗迹（断桥图/水母图）</p><p>步骤：蜡烛烧掉黑暗藤蔓，让遥鲲飞走即可完成任务。</p><p>难度：⚡⚡⚡</p><p> <strong>🌹2021年8月9日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210809/001847-at1slf4eic.png"></p><p> <strong>🔥2021年8月9日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210809/002914-vsdopljrfy.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210809/002943-th57rkocl2.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210809/002939-ocizrgubak.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210809/002832-y1qv5bow4m.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210809/002821-upjk5er96n.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210809/002817-o9sti3rm6k.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210809/002807-lzd3bvisor.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210809/002759-vsbc4komry.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理</title>
    <link href="/2021/08/08/2021-08-08%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86/"/>
    <url>/2021/08/08/2021-08-08%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理"><a href="#光遇小助理" class="headerlink" title="光遇小助理"></a>光遇小助理</h1><p><strong>👑2021年8月8日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210808/091102-0g7z5sibf8.png"></p><p>任务： <strong>接受一位朋友的礼物</strong></p><p>位置：遇境</p><p>步骤：点开好友星盘，收取好友给自己赠送的心火或者爱心</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210808/091152-ev39aftij1.png"></p><p>任务： <strong>收集蓝色光芒</strong></p><p>位置：霞谷-滑冰场</p><p>步骤：进入霞谷后，往前方滑行，来到滑冰场下方收集蓝色光芒</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210808/091227-c4ys563hlr.png"></p><p>任务： <strong>收集30点烛光</strong></p><p>位置：任意场景</p><p>步骤：收集30点烛光即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210808/091345-9r8231cls4.png"></p><p>任务： <strong>在滑冰场旁冥想</strong></p><p>位置：霞谷-滑冰场</p><p>步骤：来到霞谷滑冰场，冥想点在高处的山上~</p><p>难度：⚡</p><p> <strong>🌹2021年8月8日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210808/091034-4qt3udzpji.png"></p><p> <strong>🔥2021年8月8日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210808/091553-ney79d8gt5.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210808/091545-5q986b1gnj.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210808/091528-cajydre4m0.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210808/091521-d6rjcpmzfe.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210808/091450-67j5ss8vqw.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210808/091620-sdprcwm20b.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210808/091617-05a8qdwmhk.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210808/091707-l5sken0vw1.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210808/091659-jwzpbg4foh.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/07/2021-08-07%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/07/2021-08-07%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月7日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210807/010857-4y1sfcgauh.png"></p><p>任务： <strong>向一位玩家鞠躬</strong></p><p>位置：任意场景</p><p>步骤：传送到好友的房间，面向好友，点开动作列表后使用【鞠躬】即可</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210807/010951-04h8is9q6s.png"></p><p>任务： <strong>在静谧庭院外冥想</strong></p><p>位置：雨林-一图</p><p>步骤：进入雨林后往下方飞（不要进入下一张地图），在左边的空地找到光圈完成冥想~</p><p>难度： <strong>⚡</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210807/011054-ml93uhdpsb.png"></p><p>任务： <strong>掀翻5只螃蟹</strong></p><p>位置：有螃蟹的场景，比如墓土、雨林</p><p>步骤：长按自己的角色大叫即可掀翻身边的螃蟹。</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210807/011232-nskrq51yh3.png"></p><p>任务： <strong>收集青色光芒</strong></p><p>位置：云野-进门往反方向进入</p><p>步骤：进入云野后不要跳下去，直接向后转进入，在云层里收集青色光芒</p><p>难度：⚡</p><p> <strong>🌹2021年8月7日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210807/010809-vnp4s62b8c.png"></p><p> <strong>🔥2021年8月7日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210807/011427-yfvgp5won4.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210807/011416-mv4rkebps9.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210807/011410-7qtfd4cump.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210807/011403-w9o8rld7n1.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210807/011351-ckf6t5mg3o.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210807/011335-a7yn0jos5w.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210807/011329-9twcjob3eq.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210807/011322-ishb7su195.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/06/2021-08-06%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/06/2021-08-06%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月6日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210806/003947-9umpsr0s5e.png"></p><p>任务： <strong>净化10株黑暗植物</strong></p><p>位置：有黑暗植物的地图，比如雨林、云野、墓土</p><p>步骤：用蜡烛将黑暗植物燃烧掉即可</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210806/003514-0nzlioy93k.png"></p><p>任务： <strong>和陌生人一起坐在长凳上</strong></p><p>位置：有长凳的场景，比如云野</p><p>步骤：坐在长凳的一侧，有玩家坐在另一侧即可完成任务</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210806/003911-9m7zs2a04p.png"></p><p>任务： <strong>在幽光山洞里冥想</strong></p><p>位置：云野-左侧隐藏图</p><p>步骤：进入云野后往左边走，进入隐藏图，找到山洞中光圈完成冥想即可~</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210806/003827-ypesh3cm7d.png"></p><p>任务： <strong>收集红色光芒</strong></p><p>位置：墓土-遗忘方舟</p><p>步骤：进入墓土一图后往右边走，乘坐小船进入遗忘方舟地图，一直往前即可找到红色光芒！</p><p>难度：⚡⚡</p><p> <strong>🌹2021年8月6日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210806/004015-8qomwe6b5s.png"></p><p> <strong>🔥2021年8月6日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210806/004051-7jaf42sbn1.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210806/004049-hto2wn7qil.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210806/004041-7d9qnayloz.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210806/004037-muswd6znsy.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210806/004057-gypi0u3saq.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210806/004110-49pgv2u7se.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210806/004111-0gqovazkr2.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210806/004119-s1d0zcp6h3.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/05/2021-08-05%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/05/2021-08-05%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月5日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210805/002859-z9obtcsg6y.png"></p><p>任务： <strong>接受一位朋友的礼物</strong></p><p>位置：遇境</p><p>步骤：点开好友星盘，收取好友给自己赠送的心火或者爱心</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210805/002928-mb941csisd.png"></p><p>任务： <strong>收集紫色光芒</strong></p><p>位置：禁阁-地下室</p><p>步骤：进入禁阁往右边走，开启双人门进入地下室，通道出来可以看到紫色光芒，飞起进行收集即可</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210805/003009-lthgbp4vzj.png"></p><p>任务： <strong>点燃20根蜡烛</strong></p><p>位置：任意场景</p><p>步骤：点燃20根蜡烛即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210805/003051-mlg3e25uob.png"></p><p>任务： <strong>在禁阁的神坛旁冥想</strong></p><p>位置：禁阁-顶层</p><p>步骤：来到禁阁的顶层，即可找到冥想点</p><p>难度：⚡⚡</p><p> <strong>🌹2021年8月5日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210805/003137-1idespl30f.png"></p><p> <strong>🔥2021年8月5日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210805/003206-6ig8lcrbwd.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210805/003156-zkoma06snj.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210805/003211-lrsg3yk6iq.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210805/003224-j2ipse0675.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210805/003234-m7p1onqtzc.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210805/003247-lki6hcv9mq.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210805/003245-8ps23ljies.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210805/003258-dm3o7r41vl.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210805/003255-n9s7vju6i8.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/04/2021-08-04%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/04/2021-08-04%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月4日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210804/002843-in83etl6wz.png"></p><p>任务： <strong>向一位玩家鞠躬</strong></p><p>位置：任意场景</p><p>步骤：传送到好友的房间，面向好友，点开动作列表后使用【鞠躬】即可</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210804/002943-h12j4c65d7.png"></p><p>任务： <strong>收集蓝色光芒</strong></p><p>位置：霞谷-滑冰场</p><p>步骤：进入霞谷后，往前方滑行，来到滑冰场下方收集蓝色光芒</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210804/003050-yksh9c4tru.png"></p><p>任务： <strong>净化10株黑暗植物</strong></p><p>位置：有黑暗植物的地图，比如雨林、云野、墓土</p><p>步骤：用蜡烛将黑暗植物燃烧掉即可。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210804/003708-pi14woz65h.png"></p><p>任务：在墓土重温先祖的美好回忆</p><p>位置：墓土二图</p><p>步骤：二图入口即可看到先祖，要注意躲避冥龙哦。</p><p>难度：⚡⚡</p><p> <strong>🌹2021年8月4日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210804/003517-nymp36kr4z.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210804/003511-g54a0dlwtv.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210804/003505-stckr5j7d8.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210804/003504-se34k92wcu.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210804/002649-skyvgw3cid.png"></p><p> <strong>🔥2021年8月4日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210804/002745-n35lyfw7av.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210804/002736-buistschlp.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210804/002732-gpzmbr7snq.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210804/003342-uhygter9cs.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210804/003335-0dn5k7twef.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/03/2021-08-03%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/03/2021-08-03%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月3日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210803/001428-43rs07a51z.png"></p><p>任务： <strong>向其他玩家传递能量</strong></p><p>位置：任意场景</p><p>步骤：在其他玩家损耗了能量的状态下，通过与其牵手传递能量，还可以尝试和好友牵手进图或者返回遇境，更多的完成方式可以在游戏中探索一下哦</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210803/001557-9dgl74usfm.png"></p><p>任务： <strong>收集红色光芒</strong></p><p>位置：墓土-遗忘方舟</p><p>步骤：进入墓土一图后往右边走，乘坐小船进入遗忘方舟地图，一直往前即可找到红色光芒！</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210803/001653-29stjkqu1a.png"></p><p>任务： <strong>收集30点烛光</strong></p><p>位置：任意场景</p><p>步骤：收集30点烛光即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210803/001757-frwm8jzlq5.png"></p><p>任务： <strong>在滑冰场旁冥想</strong></p><p>位置：霞谷-滑冰场</p><p>步骤：来到霞谷滑冰场，冥想点在高处的山上~</p><p>难度：⚡</p><p> <strong>🌹2021年8月3日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210803/002320-9v8q6uswso.png"></p><p> <strong>🔥2021年8月3日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210803/002820-vi52wpj9sg.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210803/002809-jm8yg1a6eb.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210803/002649-e5921hylca.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210803/002644-ct478q1a6f.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210803/002613-j756zn9saw.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210803/002559-3ly1ztfbj0.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210803/002553-anpm124c5b.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210803/002515-isdakso8l7.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210803/002506-fsg26e51ta.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/02/2021-08-02%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/02/2021-08-02%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月2日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210802/001729-2ky4noabus.png"></p><p>任务： <strong>向一位玩家鞠躬</strong></p><p>位置：任意场景</p><p>步骤：传送到好友的房间，面向好友，点开动作列表后使用【鞠躬】即可</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210802/002045-ps31sekrw5.png"></p><p>任务： <strong>在水母上恢复能量</strong></p><p>位置：有水母的地图，比如雨林、云野</p><p>步骤：消耗能量之后，跳到水母上方恢复能量即可。</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210802/001924-2smc0equwa.png"></p><p>任务： <strong>点燃20根蜡烛</strong></p><p>位置：任意场景</p><p>步骤：点燃20根蜡烛即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210802/002206-i1r08zpnjs.png"></p><p>任务： <strong>在雨林的神庙内冥想</strong></p><p>位置：雨林-神庙（终点后面）</p><p>步骤：来到雨林神庙，穿过神庙内的大门，可以找到冥想点~</p><p>难度：⚡⚡</p><p> <strong>🌹2021年8月2日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210802/002315-q4bk1s2tis.png"></p><p> <strong>🔥2021年8月2日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210802/002525-uh6v7e3kp2.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210802/002522-adur82y1vp.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210802/002527-wvcz8s9ia6.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210802/002540-oi0eslw1hn.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210802/002621-pjoiyk6fdl.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210802/002555-crkhd2u9lg.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210802/002549-ih8e9zmwd4.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210802/002602-9q4dycksmu.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210802/002602-nul7btp5y9.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/08/01/2021-08-01%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/08/01/2021-08-01%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年8月1日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210801/013639-fabn1s8i5w.png"></p><p>任务：和朋友击掌</p><p>位置：任意场景</p><p>步骤：点击好友，在好友树使用【击掌】</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210801/013951-7mrg9i23y6.png"></p><p>任务： <strong>收集橙色光芒</strong></p><p>位置：雨林-密林遗迹（水母图）</p><p>步骤：进入雨林四图后往左前方走，在树林里收集橙色光芒，能量充足可以飞起来收集，也可以在下方等光芒经过</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210801/014036-qksbhg7fjs.png"></p><p>任务： <strong>点燃20根蜡烛</strong></p><p>位置：任意场景</p><p>步骤：点燃20根蜡烛即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210801/014325-ad5lbh01c8.png"></p><p>任务： <strong>在云野的锦鲤池旁冥想</strong></p><p>位置：云野-神庙入口前的桥下</p><p>步骤：进入云野二图后，启动三座塔之后，随遥鲲飞上神庙，在入口前的桥下找到光圈，完成冥想即可~</p><p>难度：⚡⚡</p><p> <strong>🌹2021年8月1日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210801/013005-z6cmyofi48.png"></p><p> <strong>🔥2021年8月1日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210801/014611-j9sl7vdh0r.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210801/014553-s9zft74u58.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210801/014541-jqwei70tvz.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210801/014528-4253e9hndj.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210801/014514-nhuzwq6c2o.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210801/014448-djs9207iu5.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210801/014441-wolukzhq0n.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210801/014434-9roulycak4.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210801/014426-b850elftnd.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/07/31/2021-07-31%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/31/2021-07-31%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年7月31日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210731/010635-3muglve0ic.png"></p><p>任务： <strong>接受一位朋友的礼物</strong></p><p>位置：遇境</p><p>步骤：点开好友星盘，收取好友给自己赠送的心火或者爱心</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210731/010717-i4pbh5m76q.png"></p><p>任务： <strong>收集绿色光芒</strong></p><p>位置：云野-右边隐藏图</p><p>步骤：进入云野一图后往右边走，进入隐藏地图，在左侧的浮空岛等候绿色光芒掉落，需要有一定的耐心噢</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210731/010802-s6a37bl891.png"></p><p>任务： <strong>面对冥龙</strong></p><p>位置：墓土二图</p><p>步骤：面对冥龙即可完成，大家要注意躲避哦。</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210731/010907-vzw3lmu4tb.png"></p><p>任务： <strong>在禁阁重温先祖的美好回忆</strong>  </p><p>位置：禁阁-二层4人门里面</p><p>步骤：来到禁阁二层，进入4人门后在右侧找到先祖，完成重温任务即可</p><p>难度：⚡⚡</p><p> <strong>🌹2021年7月31日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210731/010155-97s42elovj.png"></p><p> <strong>🔥2021年7月31日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210731/010536-p0j3hcdyir.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210731/010527-4y2biwzask.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210731/010512-9gs4z5w2td.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210731/010431-7dcefkzb3q.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210731/010348-su3bjd2c5l.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/07/30/2021-07-30%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/30/2021-07-30%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年7月29日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210730/005713-r25s738l1p.png"></p><p>任务： <strong>2人合力开启一道门</strong></p><p>位置：有双人门的场景，比如云野、霞谷、禁阁</p><p>步骤：点燃双人门一边的机关，有玩家点燃另一边开启门的话，就能完成任务啦</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210730/005823-t2w7fhjc5u.png"></p><p>任务： <strong>收集青色光芒</strong></p><p>位置：云野-进门往反方向进入</p><p>步骤：进入云野后不要跳下去，直接向后转进入，在云层里收集青色光芒</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210730/005920-tqg5vd6cf4.png"></p><p>任务： <strong>收集30点烛光</strong></p><p>位置：任意场景</p><p>步骤：收集30点烛光即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210730/005959-73yt4r8bfk.png"></p><p>任务： <strong>在边陲荒漠的神庙里冥想</strong></p><p>位置：墓土-边陲荒漠（一图）</p><p>步骤：进入墓土一图，在倾倒的建筑内找到光圈完成冥想~</p><p>难度：⚡</p><p> <strong>🌹2021年7月29日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210730/010052-m7r20ys68b.png"></p><p> <strong>🔥2021年7月29日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210730/010226-kwsp9usyb2.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210730/010146-4i5vbtqnoj.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210730/010138-r7t0cznkuv.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210730/010112-i82y1ozgfh.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210730/010116-pse8notu46.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇7.29复刻攻略</title>
    <link href="/2021/07/29/2021-07-29%20%E5%85%89%E9%81%877.29%E5%A4%8D%E5%88%BB%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/29/2021-07-29%20%E5%85%89%E9%81%877.29%E5%A4%8D%E5%88%BB%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇7-29复刻攻略"><a href="#光遇7-29复刻攻略" class="headerlink" title="光遇7.29复刻攻略"></a>光遇7.29复刻攻略</h1><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/103146-9ia1kq20f5.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/103157-7ca6vfwmr9.jpeg"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇7.29复刻攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助手每日攻略</title>
    <link href="/2021/07/29/7%E6%9C%8829%E6%97%A5%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E6%89%8B%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/29/7%E6%9C%8829%E6%97%A5%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E6%89%8B%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助手每日攻略"><a href="#光遇小助手每日攻略" class="headerlink" title="光遇小助手每日攻略"></a>光遇小助手每日攻略</h1><p><strong>👑2021年7月29日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/000502-1y50acep4l.png"></p><p>任务： <strong>与4位玩家牵手组队</strong></p><p>位置：任意场景</p><p>步骤：4个玩家牵手即可完成任务啦</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/000606-f7lej8cd3i.png"></p><p>任务： <strong>收集紫色色光芒</strong></p><p>位置：禁阁-地下室</p><p>步骤：进入禁阁往右边走，开启双人门进入地下室，通道出来可以看到紫色光芒，飞起进行收集即可</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/000906-q5pjvrzna7.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/000919-n2brj6kel7.png"></p><p>任务： <strong>拯救一只被黑暗藤蔓困住的遥鲲</strong></p><p>位置：雨林-密林遗迹（断桥图/水母图）</p><p>步骤：蜡烛烧掉黑暗藤蔓，让遥鲲飞走即可完成任务。</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003144-u57k041fij.png"></p><p>任务： <strong>在霞光城上层冥想</strong></p><p>位置：霞谷-霞光城主城楼中间</p><p>步骤：从霞谷滑冰场进入霞光城（去飞行赛道的方向），围绕着主城往上飞，冥想点在中层的走廊上</p><p>难度：⚡⚡</p><p> <strong>🌹2021年7月29日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003124-ikegjhrmds.png"></p><p> <strong>🔥2021年7月29日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003343-n67us32oft.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003341-szun4a1fst.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003326-lrg6kde8qf.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003313-qtpmrzn8ce.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003304-8k2ryouf0g.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003258-cs6ljsidyr.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助手每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助手每日攻略</title>
    <link href="/2021/07/29/2021-07-29%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E6%89%8B%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/29/2021-07-29%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E6%89%8B%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助手每日攻略"><a href="#光遇小助手每日攻略" class="headerlink" title="光遇小助手每日攻略"></a>光遇小助手每日攻略</h1><p><strong>👑2021年7月29日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/000502-1y50acep4l.png"></p><p>任务： <strong>与4位玩家牵手组队</strong></p><p>位置：任意场景</p><p>步骤：4个玩家牵手即可完成任务啦</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/000606-f7lej8cd3i.png"></p><p>任务： <strong>收集紫色色光芒</strong></p><p>位置：禁阁-地下室</p><p>步骤：进入禁阁往右边走，开启双人门进入地下室，通道出来可以看到紫色光芒，飞起进行收集即可</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/000906-q5pjvrzna7.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/000919-n2brj6kel7.png"></p><p>任务： <strong>拯救一只被黑暗藤蔓困住的遥鲲</strong></p><p>位置：雨林-密林遗迹（断桥图/水母图）</p><p>步骤：蜡烛烧掉黑暗藤蔓，让遥鲲飞走即可完成任务。</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003144-u57k041fij.png"></p><p>任务： <strong>在霞光城上层冥想</strong></p><p>位置：霞谷-霞光城主城楼中间</p><p>步骤：从霞谷滑冰场进入霞光城（去飞行赛道的方向），围绕着主城往上飞，冥想点在中层的走廊上</p><p>难度：⚡⚡</p><p> <strong>🌹2021年7月29日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003124-ikegjhrmds.png"></p><p> <strong>🔥2021年7月29日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003343-n67us32oft.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003341-szun4a1fst.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003326-lrg6kde8qf.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003313-qtpmrzn8ce.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003304-8k2ryouf0g.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210729/003258-cs6ljsidyr.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助手每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/07/28/2021-07-28%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/28/2021-07-28%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年7月28日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210728/002815-wqj6seo9nm.png"></p><p>任务： <strong>接受一位朋友的礼物</strong></p><p>位置：遇境</p><p>步骤：点开好友星盘，收取好友给自己赠送的心火或者爱心</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210728/002903-7a1nmrisgz.png"></p><p>任务： <strong>收集红色光芒</strong></p><p>位置：墓土-遗忘方舟</p><p>步骤：进入墓土一图后往右边走，乘坐小船进入遗忘方舟地图，一直往前即可找到红色光芒！</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210728/003014-h2tv1incs8.png"></p><p>任务： <strong>面对冥龙</strong></p><p>位置：墓土二图</p><p>步骤：面对冥龙即可完成，大家要注意躲避哦。</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210728/003052-1w3eraouhb.png"></p><p>任务： <strong>在静谧庭院外冥想</strong></p><p>位置：雨林-一图</p><p>步骤：进入雨林后往下方飞（不要进入下一张地图），在左边的空地找到光圈完成冥想~</p><p>难度：⚡</p><p> <strong>🌹2021年7月28日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210728/004108-svp32jzdkn.png"></p><p> <strong>🔥2021年7月28日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210728/003755-jiyofwzmev.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210728/003749-qte78nuk56.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210728/003936-5zntyflc0b.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210728/003931-sfda9pgnjr.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210728/003848-l6z71tgivq.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/07/27/2021-07-27%20%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/27/2021-07-27%20%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年7月27日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210727/000947-n0ypikw6l3.png"></p><p>任务： <strong>2人合力开启一道门</strong></p><p>位置：有双人门的场景，比如云野、霞谷、禁阁</p><p>步骤：点燃双人门一边的机关，有玩家点燃另一边开启门的话，就能完成任务啦</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210727/001115-c97dgu8pfo.png"></p><p>任务： <strong>掀翻5只螃蟹</strong></p><p>位置：有螃蟹的场景，比如墓土、雨林</p><p>步骤：长按自己的角色大叫即可掀翻身边的螃蟹。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210727/001157-utas49yhom.png"></p><p>任务： <strong>收集紫色色光芒</strong></p><p>位置：禁阁-地下室</p><p>步骤：进入禁阁往右边走，开启双人门进入地下室，通道出来可以看到紫色光芒，飞起进行收集即可</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210727/001240-80hje6lrvi.png"></p><p>任务： **在云野重温先祖的美好回忆  **</p><p>位置：云野一图</p><p>步骤：在球形草坪下方重温先祖回忆。</p><p>难度：⚡</p><p> <strong>🌹2021年7月27日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210727/000911-06r7bdugqv.png"></p><p> <strong>🔥2021年7月27日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210727/001416-lss7n8thga.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210727/001457-e3kurgna12.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210727/001515-cn7em2lpwu.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210727/001508-zot9u05hp7.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210727/001527-7whqibra9v.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/07/26/2021-07-26%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/26/2021-07-26%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年7月26日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210726/003016-pln8czv6tm.png"></p><p>任务： <strong>向其他玩家传递能量</strong></p><p>位置：任意场景</p><p>步骤：在其他玩家损耗了能量的状态下，通过与其牵手传递能量，还可以尝试和好友牵手进图或者返回遇境，更多的完成方式可以在游戏中探索一下哦</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210726/003127-pyz2gbelw9.png"></p><p>任务： <strong>收集绿色光芒</strong></p><p>位置：云野-右边隐藏图</p><p>步骤：进入云野一图后往右边走，进入隐藏地图，在左侧的浮空岛等候绿色光芒掉落，需要有一定的耐心噢</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210726/003221-j4296or0fv.png"></p><p>任务： <strong>收集30点烛光</strong></p><p>位置：任意场景</p><p>步骤：收集30点烛光即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210726/003303-c9ad6usob7.png"></p><p>任务： <strong>在禁阁的神坛旁冥想</strong></p><p>位置：禁阁-顶层</p><p>步骤：来到禁阁的顶层，即可找到冥想点</p><p>难度：⚡⚡</p><p> <strong>🌹2021年7月26日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210726/003440-6yt3neizrs.png"></p><p> <strong>🔥2021年7月26日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210726/003525-zwspivcnsq.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210726/003538-hlpqs01wji.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210726/003547-7dont4p5lr.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210726/003545-i4sm5rw819.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助手每日攻略</title>
    <link href="/2021/07/25/2021-07-25%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E6%89%8B%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/25/2021-07-25%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E6%89%8B%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助手每日攻略"><a href="#光遇小助手每日攻略" class="headerlink" title="光遇小助手每日攻略"></a>光遇小助手每日攻略</h1><p><strong>👑2021年7月25日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210725/011645-7b61ujs50s.png"></p><p>任务： <strong>向一位朋友做个动作</strong></p><p>位置：任意场景</p><p>步骤：传送到好友的房间，面向好友，点开动作列表后使用任意动作即可</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210725/011747-12fk6vp8j3.png"></p><p>任务： <strong>在墓土追逐散落的星光</strong></p><p>位置：墓土一图</p><p>步骤：来到墓土一图触碰到飞舞的星光即可完成任务。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210725/011821-launq397rj.png"></p><p>任务： <strong>掀翻5只螃蟹</strong></p><p>位置：有螃蟹的场景，比如墓土、雨林</p><p>步骤：长按自己的角色大叫即可掀翻身边的螃蟹。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210725/011907-vcnqryfks5.png"></p><p>任务： <strong>在边陲荒漠的神庙里冥想</strong></p><p>位置：墓土-边陲荒漠（一图）</p><p>步骤：进入墓土一图，在倾倒的建筑内找到光圈完成冥想~</p><p>难度：⚡</p><p> <strong>🌹2021年7月25日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210725/011941-gf685dtbes.png"></p><p> <strong>🔥2021年7月25日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210725/012036-3vo8jws4lg.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210725/012036-mh4clov275.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210725/012029-4rhn6vmib2.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210725/012026-1pzksvmsai.png"></p><p>周末愉快噢宝！</p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助手每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/07/24/2021-07-24%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/24/2021-07-24%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年7月24日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210724/001611-kusjr2tgv9.png"></p><p>任务： <strong>2人合力开启一道门</strong></p><p>位置：有双人门的场景，比如云野、霞谷、禁阁</p><p>步骤：点燃双人门一边的机关，有玩家点燃另一边开启门的话，就能完成任务啦</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210724/000419-o832z9pk5a.png"></p><p>任务： <strong>在滑冰场旁冥想</strong></p><p>位置：霞谷-滑冰场</p><p>步骤：来到霞谷滑冰场，冥想点在高处的山上~</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210724/000822-vc86k3eup9.png"></p><p>任务： <strong>收集青色光芒</strong></p><p>位置：云野-进门往反方向进入</p><p>步骤：进入云野后不要跳下去，直接向后转进入，在云层里收集青色光芒</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210724/001715-u6oaqn1v2k.png"></p><p>任务： <strong>面对冥龙</strong></p><p>位置：墓土二图</p><p>步骤：面对冥龙即可完成，大家要注意躲避哦。</p><p>难度：⚡⚡⚡</p><p> <strong>🌹2021年7月24日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210724/002319-de02n4zjy6.png"></p><p> <strong>🔥2021年7月24日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210724/001352-2ozjt0wirg.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210724/001350-ze7t3hj0rq.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210724/001953-cs96lsfmeu.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210724/001946-5ramvp89yl.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210724/002106-rne5p29016.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210724/002104-h8w176bdpf.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/07/23/2021-07-23%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/23/2021-07-23%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年7月23日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210723/005724-k8im4agnsp.png"></p><p>任务： <strong>与4位玩家牵手组队</strong></p><p>位置：任意场景</p><p>步骤：4个玩家牵手即可完成任务啦</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210723/005815-a6dh37z9ql.png"></p><p>任务： <strong>收集蓝色光芒</strong></p><p>位置：霞谷-滑冰场</p><p>步骤：进入霞谷后，往前方滑行，来到滑冰场下方收集蓝色光芒</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210723/005858-zqjc8y6orn.png"></p><p>任务： <strong>点燃20根蜡烛</strong></p><p>位置：任意场景</p><p>步骤：点燃20根蜡烛即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210723/010657-mgvjtab5ei.png"></p><p>任务： <strong>在秘密花园里冥想</strong></p><p>位置：雨林-隐藏图</p><p>步骤：来到雨林二图后，通过右边入口进入隐藏图，然后往右边飞，在空心树旁边找到冥想点~</p><p>难度：⚡⚡</p><p> <strong>🌹2021年7月23日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210723/010726-8qj9ocmuga.png"></p><p> <strong>🔥2021年7月23日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210723/010816-jftwo01lq7.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210723/010835-jkvcban10l.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210723/010906-rs2k7w9of5.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210723/010857-7oj6bu2yv5.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210723/010944-f2i478qdtw.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210723/011003-6us1bktna3.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5%5B2921%5D/"/>
    <url>/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5%5B2921%5D/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p>👑 <strong>2021年7月22日任务攻略</strong> 👑</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210722/002847-wlyaqs3ki8.png"></p><p>任务： <strong>与4位玩家牵手组队</strong></p><p>位置：任意场景</p><p>步骤：4个玩家牵手即可完成任务啦</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210722/002959-6ypor3jwud.png"></p><p>任务： <strong>在云野追逐散落的星光</strong></p><p>位置：云野一图</p><p>步骤：来到云野一图触碰到飞舞的星光即可完成任务。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210722/003143-jbgwnoecu2.png"></p><p>任务： <strong>收集30点烛光</strong></p><p>位置：任意场景</p><p>步骤：收集30点烛光即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210722/003443-f384qujhvb.png"></p><p>任务： **在云野重温先祖的美好回忆  **</p><p>位置：云野一图</p><p>步骤：在球形草坪下方重温先祖回忆。</p><p>难度：⚡</p><p> <strong>🌹2021年7月22日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210722/003846-nce3igopy7.png"></p><p> <strong>🔥2021年7月22日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210722/004803-ghnk497io1.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210722/005149-au0q4kgd3s.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210722/005206-238qwsy1gt.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210722/005347-2ljke98vrs.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210722/005355-ao4j8kteyc.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210722/005506-gcfq1o0tur.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210722/005514-8kjmhlq36s.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5%5B3337%5D/"/>
    <url>/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5%5B3337%5D/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p>👑 <strong>2021年7月21日任务攻略</strong> 👑</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210721/011229-vem2h6szyw.png"></p><p>任务： <strong>向一位朋友做个动作</strong></p><p>位置：任意场景</p><p>步骤：传送到好友的房间，面向好友，点开动作列表后使用任意动作即可</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210721/011205-q20gm73hdl.png"></p><p>任务： <strong>收集绿色光芒</strong></p><p>位置：云野-右边隐藏图</p><p>步骤：进入云野一图后往右边走，进入隐藏地图，在左侧的浮空岛等候绿色光芒掉落，需要有一定的耐心噢</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210721/004913-17pd9ynm20.png"></p><p>任务： <strong>点燃20根蜡烛</strong></p><p>位置：任意场景</p><p>步骤：点燃20根蜡烛即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210721/011216-spodq9ugw1.png"></p><p>任务： <strong>在禁阁的神坛旁冥想</strong></p><p>位置：禁阁-顶层</p><p>步骤：来到禁阁的顶层，即可找到冥想点</p><p>难度：⚡⚡</p><p> <strong>🌹2021年7月21日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210721/011545-0uwg16l4d3.png"></p><p> <strong>🔥2021年7月21日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210721/010602-aeh35ipmbg.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210721/010543-sakn8c624o.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210721/010654-0s39qcz2ug.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210721/010729-dyg70sczav.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小王子季攻略</title>
    <link href="/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E7%8E%8B%E5%AD%90%E5%AD%A3%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E7%8E%8B%E5%AD%90%E5%AD%A3%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小王子季攻略"><a href="#光遇小王子季攻略" class="headerlink" title="光遇小王子季攻略"></a>光遇小王子季攻略</h1><p>🌹 <strong>小王子季地图入口</strong> 🌹</p><p>--进入禁阁之后从右手边进入小王子季地图。</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/223930-85d0to3eys.png"></p><p>🌹 <strong>小王子季玫瑰向导兑换攻略</strong> 🌹</p><p>--玫瑰向导在入口和玫瑰园中间。</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210721/001354-zqnsmtgp39.png"></p><p>🌹 <strong>小王子季6位先祖收集 &amp;兑换攻略</strong>🌹</p><p> <strong>1、呼风唤雨的统治者</strong></p><p>--进入地图之后一直往前走，看到云层之后往上方飞，在一个像皇冠的建筑上可以找到季节先祖。</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/224627-6cfsrawhqs.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/224842-iunjc6fqtl.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/224310-r5mnqys3iw.png"></p><p> <strong>2、打喷嚏的地理学家</strong></p><p>--进入地图之后一直往前走，看到云层之后往上方飞，飞到接近最高处，在书本叠放的建筑上可以找到季节先祖。</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/230208-w4k706f9mo.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/230247-tsysld7jba.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/230410-5lcbg1rn42.png"></p><p> <strong>3、星光收藏家</strong></p><p>--在中央玫瑰园的左边有一个云洞，从云洞进入之后可以看到有一艘船，在船中央可以找到先祖，需要在一定时间内收集全部星光噢</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/231650-6hd3vc971j.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/231530-smv328ztie.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/231442-qs4chk902p.png"></p><p> <strong>4、被逼无奈的掌灯人</strong></p><p>--从入口出来之后，直接向左转，靠近云层后起飞，往上飞能看到灯塔形状的建筑，先祖就在里面哦。</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/232627-59jf8sak1g.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/232650-12ivb058os.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/232702-zkogp5s9ml.png"></p><p> <strong>5、沾沾自喜的自恋者</strong></p><p>--从入口出来之后，直接向后转，靠近云层后起飞，往上飞能看到舞台的镭射灯，来到大舞台之后在右边可以找到先祖。</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/233103-ruhfm1zv26.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/233051-ju3g6m4l8z.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/233930-p1m329guwf.png"></p><p> <strong>6、萎靡不振的士兵</strong></p><p>--从入口出来之后，直接向右转，靠近云层后起飞，往上飞能看到方形建筑，进入即可找到先祖。</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/234703-dpf623gr05.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/234654-2tnfwgclqk.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/234714-wfukzyc7o0.png"></p><p>🌹 <strong>小王子季3个光之翼收集攻略</strong> 🌹</p><p>1、在皇冠建筑下方，收集先祖（ <strong>呼风唤雨的统治者</strong> ）时可以顺便收集</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/235258-dkw6bvmqez.png"></p><p>2、在灯塔建筑顶部，收集先祖（ <strong>被逼无奈的掌灯人</strong> ）时可以顺便收集</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/235253-9f4zjy165q.png"></p><p>3、在方形建筑上方，收集先祖（ <strong>萎靡不振的士兵</strong> ）时可以顺便收集</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/235137-wgz7s8m6cf.png"></p><p>🌹 <strong>小王子季1处大蜡烛收集攻略</strong> 🌹</p><p>--在玫瑰园右侧有1处大蜡烛，大家不要错过啦。</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/235618-uwtfq6sl0c.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小王子季攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5%5B2233%5D/"/>
    <url>/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5%5B2233%5D/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年7月20日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/000705-c1alh6t8qd.png"></p><p>任务： <strong>向其他玩家传递能量</strong></p><p>位置：任意场景</p><p>步骤：在其他玩家损耗了能量的状态下，通过与其牵手传递能量，还可以尝试和好友牵手进图或者返回遇境，更多的完成方式可以在游戏中探索一下哦</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/002855-s8uhoam1ef.png"></p><p>任务： <strong>在墓土追逐散落的星光</strong></p><p>位置：墓土一图</p><p>步骤：来到墓土一图触碰到飞舞的星光即可完成任务。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/003115-aueq6p2dgw.png"></p><p>任务： <strong>掀翻5只螃蟹</strong></p><p>位置：有螃蟹的场景，比如墓土、雨林</p><p>步骤：长按自己的角色大叫即可掀翻身边的螃蟹。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/003201-6tgwhp3sor.png"></p><p>任务： <strong>在远古战场中央冥想</strong></p><p>位置：墓土-远古战场（四图）</p><p>步骤：进入墓土四图，飞过主体建筑后，找到石碑完成冥想。光线较暗，注意查找哦</p><p>难度：⚡⚡</p><p> <strong>🌹2021年7月20日季节烛火攻略🌹</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/003518-nmg0w1i7kl.png"></p><p>季节烛火均在墓土一图哈，购买了季卡的小伙伴不要忘记在遇境神坛处领取季节蜡烛哟~</p><p> <strong>🔥2021年7月20日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/003747-1ynr7mus8f.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/003810-p2g61sc7he.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/003833-nekam5wzgy.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210720/003858-an1dqw6sol.png"></p><p>大蜡烛在墓土和禁阁出现，大家冲鸭~！</p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5%5B7821%5D/"/>
    <url>/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5%5B7821%5D/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p><strong>👑2021年7月19日任务攻略👑</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210719/000621-tc4ssigqf8.png"></p><p>任务： <strong>向其他玩家传递能量</strong></p><p>位置：任意场景</p><p>步骤：在其他玩家损耗了能量的状态下，通过与其牵手传递能量，还可以尝试和好友牵手进图或者返回遇境，更多的完成方式可以在游戏中探索一下哦</p><p>难度：⚡⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210719/000726-cdrzoqss9p.png"></p><p>任务： <strong>收集青色光芒</strong></p><p>位置：云野-进门往反方向进入</p><p>步骤：进入云野后不要跳下去，直接向后转进入，在云层里收集青色光芒</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210719/000820-9yg0p4sltc.png"></p><p>任务： <strong>点燃20根蜡烛</strong></p><p>位置：任意场景</p><p>步骤：点燃20根蜡烛即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210719/000906-ybvszceokq.png"></p><p>任务： <strong>在滑冰场旁冥想</strong></p><p>位置：霞谷-滑冰场</p><p>步骤：来到霞谷滑冰场，冥想点在高处的山上~</p><p>难度：⚡</p><p> <strong>🔥2021年7月19日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210719/001058-jo0762g4kv.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5%5B4476%5D/"/>
    <url>/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5%5B4476%5D/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p>👑 <strong>2021年7月18日任务攻略</strong> 👑</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210718/005441-35bsu24zem.png"></p><p>任务： <strong>和陌生人一起坐在长凳上</strong></p><p>位置：有长凳的场景，比如云野</p><p>步骤：坐在长凳的一侧，有玩家坐在另一侧即可完成任务</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210718/005839-ez4lsrfuj5.png"></p><p>任务： <strong>收集紫色光芒</strong></p><p>位置：禁阁-地下室</p><p>步骤：进入禁阁往右边走，开启双人门进入地下室，通道出来可以看到紫色光芒，飞起进行收集即可</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210718/005556-3480jgawkl.png"></p><p>任务： <strong>掀翻5只螃蟹</strong></p><p>位置：有螃蟹的场景，比如墓土、雨林</p><p>步骤：长按自己的角色大叫即可掀翻身边的螃蟹。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210718/010446-r481wskb6j.png"></p><p>任务： <strong>在荧光森林冥想</strong></p><p>位置：雨林-荧光森林</p><p>步骤：来到雨林经过2道机关门后，冥想点在隐藏图入口前的亭子里~</p><p>难度：⚡</p><p> <strong>🔥2021年7月18日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210718/010715-c0v1sapoi9.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210718/010915-qs6knbor1c.png"></p><p>大家周末玩得开心吗<del>今天的大蜡烛在雨林和禁阁，详情可以参考一下图片哟</del></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助手每日攻略</title>
    <link href="/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E6%89%8B%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E6%89%8B%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助手每日攻略"><a href="#光遇小助手每日攻略" class="headerlink" title="光遇小助手每日攻略"></a>光遇小助手每日攻略</h1><p>👑 <strong>2021年7月17日任务攻略</strong> 👑</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210717/010759-h3r8mye7qo.png"></p><p>任务： <strong>接受一位朋友的礼物</strong></p><p>位置：遇境</p><p>步骤：点开好友星盘，收取好友给自己赠送的心火或者爱心</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210717/010911-t7buoy3c24.png"></p><p>任务： <strong>收集青色光芒</strong></p><p>位置：云野-进门往反方向进入</p><p>步骤：进入云野后不要跳下去，直接向后转进入，在云层里收集青色光芒</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210717/010956-ygkobu9ht0.png"></p><p>任务： <strong>点燃20根蜡烛</strong></p><p>位置：任意场景</p><p>步骤：点燃20根蜡烛即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210717/011057-d7lwyc0afb.png">任务：<br><strong>在云野的锦鲤池旁冥想</strong></p><p>位置：云野-神庙入口前的桥下</p><p>步骤：进入云野二图后，启动三座塔之后，随遥鲲飞上神庙，在入口前的桥下找到光圈，完成冥想即可~</p><p>难度：⚡⚡</p><p> <strong>🔥2021年7月17日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210717/011308-jp1g2u7mae.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210717/011415-crh8ntd5w7.png"></p><p>周末愉快<del>大蜡烛在云野和墓土，一起前往收集烛火吧</del></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助手每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇小助理每日攻略</title>
    <link href="/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/22/2021-07-22%20%E5%85%89%E9%81%87%E5%B0%8F%E5%8A%A9%E7%90%86%E6%AF%8F%E6%97%A5%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇小助理每日攻略"><a href="#光遇小助理每日攻略" class="headerlink" title="光遇小助理每日攻略"></a>光遇小助理每日攻略</h1><p>👑 <strong>2021年7月16日任务攻略</strong> 👑</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210716/001144-ab6qy38hlk.png"></p><p>任务： <strong>2人合力开启一道门</strong></p><p>位置：有双人门的场景，比如云野、霞谷、禁阁</p><p>步骤：点燃双人门一边的机关，有玩家点燃另一边开启门的话，就能完成任务啦</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210716/001327-fhj98pg2qv.png"></p><p>任务： <strong>收集红色光芒</strong></p><p>位置：墓土-遗忘方舟</p><p>步骤：进入墓土一图后往右边走，乘坐小船进入遗忘方舟地图，一直往前即可找到红色光芒！</p><p>难度：⚡⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210716/000725-93uierwlcy.png"></p><p>任务： <strong>点燃20根蜡烛</strong></p><p>位置：任意场景</p><p>步骤：点燃20根蜡烛即可完成任务，跑图的时候可以顺便做任务哦。</p><p>难度：⚡</p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210716/001438-wfmakpgl9d.png"></p><p>任务： **在禁阁重温先祖的美好回忆  **</p><p>位置：禁阁-三层</p><p>步骤：启动底层机关来到禁阁的三层，找到先祖并完成重温任务即可。</p><p>难度：⚡</p><p> <strong>🔥2021年7月16日大蜡烛攻略🔥</strong></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210716/001905-psv1w57aer.png"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇小助理每日攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>光遇7.15复刻攻略</title>
    <link href="/2021/07/22/2021-07-22%20%E5%85%89%E9%81%877.15%E5%A4%8D%E5%88%BB%E6%94%BB%E7%95%A5/"/>
    <url>/2021/07/22/2021-07-22%20%E5%85%89%E9%81%877.15%E5%A4%8D%E5%88%BB%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="光遇7-15复刻攻略"><a href="#光遇7-15复刻攻略" class="headerlink" title="光遇7.15复刻攻略"></a>光遇7.15复刻攻略</h1><p><img src="https://ok.166.net/reunionpub/ds/kol/20210715/120951-05sdc8wkv2.png"></p><p><img src="https://ok.166.net/reunionpub/ds/kol/20210715/121044-9q20bp4gl5.jpeg"></p>]]></content>
    
    
    <categories>
      
      <category>Sky光•遇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sky光•遇</tag>
      
      <tag>光遇7.15复刻攻略</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>😭2021年广东数学中考体验</title>
    <link href="/2021/06/28/zhongkao/"/>
    <url>/2021/06/28/zhongkao/</url>
    
    <content type="html"><![CDATA[<h1 id="😭😭😭2021年广东数学中考体验"><a href="#😭😭😭2021年广东数学中考体验" class="headerlink" title="😭😭😭2021年广东数学中考体验"></a>😭😭😭2021年广东数学中考体验</h1><h2 id="个人感受"><a href="#个人感受" class="headerlink" title="个人感受"></a>个人感受</h2><blockquote><p><strong>不请自来，这张试卷太气人了。这几个月刷了那么多道题，做了那么多练习，根本没什么卵用，考的都是什么奇奇怪怪的东西，选择题不知道第几题开始，人都傻了，那个秦九韶老师都没讲过，也没做过相关练习，还有就是证明圆相切，最后压轴题就真的气人！！！本来想着冲一波高分，现在别说高分，及格都不一定，一大堆没写完。</strong></p></blockquote><blockquote><p><strong>试题可以接地气，不可以接地府</strong>.</p></blockquote><blockquote><p><strong>“出题人是神经病”</strong></p></blockquote><blockquote><p><strong>数学最后一题，深圳18年高三一模原题</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629023311.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629023333.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629023357.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629023434.jpeg" alt="img"></p><hr><p><strong>好吧。当我见到答题卡的时候，简单的图形，没有圆，尺规作图在第二十题（因为那里是个孤零零的直角三角形），二十四题貌似是个手拉手，二十五题没有图。</strong></p><p>等到试卷发下来，通览全卷，问题感觉不大。考试开始…..</p><p><strong>发下答题卡，25没图？？？24没圆？？？</strong></p><p>我察觉到了<strong>危险</strong>。</p><p>发下试卷，翻到最后，25最后一小问平行<strong>四边形存在性问题</strong>，还好是<strong>送分</strong>。</p><p>问题是第一问是什么？！二次不等式？！</p><p>我深吸一口气，决定这次做快点。</p><p>翻回去，考前五分钟做会选择。</p><p>第三题概率是我做<strong>概率选择题最久的一题</strong>（因为一般都是在几个中选几个，这次绕了点），这足以说明试卷的水平不简单。</p><p>第九题<strong>海伦公式</strong>,听说过,不会写,跳!</p><p>第十题类型题我刷过，那个AB会过定点，<strong>辅助线是三垂直</strong>，但是没有记的情况是定点(0,1)，当时为了赶时间（<strong>别问为什么这么赶</strong>，只有90分钟啊，90分钟！！！）我跳了这题。</p><p><strong>第十五题</strong>为什么不是  $ x^{2}+\frac{1}{x^{2}} $ 而是 $ x^{2}-\frac{1}{x^{2}} $<br>完了，<strong>硬算很费时间</strong>，跳了。</p><p>第十六题<strong>暴力三角函数相似勾股</strong>，有点费。但是算对了.</p><p>第十七题，<strong>定弦对等角出隐圆</strong>，作等腰直角三角形顶点就是圆心，<del>挺简单的</del>。</p><p>到大题了，第十八题居然<strong>不是算术</strong>，感觉不对劲。</p><p>第二十一题做着感觉没问题，出答案的时候k值有两个？！完了我<strong>漏解没了</strong>。。。</p><p>当我做<strong>二十三折叠题</strong>的时候，抬了下头，不到30分钟了？？？！！！</p><p>不行了，后面还有道证明题，这折叠题算了,写了几个<strong>可能的步骤</strong>.跳!</p><blockquote><p>时间还剩20分钟……</p></blockquote><p>证明题二十四题<strong>第一问还行，送分</strong>。</p><p>第二问我圆呢？自己作？算了这题跳了，<strong>写下取AD中点M，设半径，不知道有没有分</strong>。</p><p>第三问我标了下长度，发现了三角形的<strong>面积</strong>可以通过<strong>等积变形</strong>转换,又有两个<strong>三角函数</strong>,求出<strong>底和高</strong>,搞定!。</p><blockquote><p>时间还剩<strong>10分钟</strong>左右…</p></blockquote><p>最后一道压轴题，<strong>第一问我满脸问号？？？这什么玩意儿？？</strong></p><p>我求下导，画下草图，这形式有点像<strong>夹逼定理</strong>！（只是<strong>看着像而已</strong>）</p><p>一番惊奇过后，我认真思考下，要求不等式<strong>两边函数的切点</strong>，我求了，然后满脑空白，<strong>不知道接下来要做什么。。。</strong></p><p>抬头看了时间，<strong>我苦笑了下，五分钟不到了。</strong></p><p>于是我就开始<strong>蒙a的值</strong>，太大怕和上面的抛物线相交，太小又怕和下面那条直线相交。</p><p>我痛定思痛，<strong>就蒙a=2（然而答案是1）</strong>，把抛物线求了出来，仅此而已。</p><p><strong>我跳回去，选择第十题蒙C</strong>（答案是A，而且图里也没有30°之类的东西，不可能出现这种数，大意了，但都快要收卷了谁还会管呀），填空<strong>第十五题蒙了</strong>。</p><blockquote><p><strong>打铃，收卷。</strong></p></blockquote><h2 id="网上看到的一个关于广东中考的段子"><a href="#网上看到的一个关于广东中考的段子" class="headerlink" title="网上看到的一个关于广东中考的段子"></a>网上看到的一个关于<code>广东中考</code>的段子</h2><blockquote><p>我站在<strong>望北哨所</strong>，手里拿着<strong>红绸带</strong>，脑中思索着<strong>隐圆计算</strong>，收到了2kg荔枝，但是我只想吃<strong>豆沙粽</strong>和<strong>猪肉粽</strong>。恍惚间，我看到一辆跑车超速驶来，我连忙用<strong>超声波计算</strong>，制止了他的行为。我郑重的说:“ 先生，你这样不利于实现<strong>碳达峰和碳中和</strong>。他的眼中饱含泪水，注视着我，大喊一声:“这才是<strong>少年应有的模样</strong>!”</p></blockquote><h2 id="2021-年-广东中考数学-今年-题目-解析"><a href="#2021-年-广东中考数学-今年-题目-解析" class="headerlink" title="2021 年 广东中考数学  (今年) 题目+解析"></a><strong>2021</strong> 年 <strong>广东中考数学</strong>  (<strong>今年</strong>) 题目+解析</h2><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629015828.png"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629015859.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629015950.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629020000.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629020011.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629020026.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629020045.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629020057.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629020109.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629020123.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629020134.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629020207.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629020229.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629020320.png" alt="img"></p><blockquote><p>附: <strong>2020</strong>年 <strong>广东中考数学</strong> (去年的,对比一下)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629014918.jpg" alt="第1页(共4页)"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629014936.jpg" alt="第2页(共4页)"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629015036.jpg" alt="第3页(共4页)"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210629015051.jpeg" alt="第4页(共4页)"></p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学</tag>
      
      <tag>考试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>KaliLinuxHelp</title>
    <link href="/2021/06/18/KaliLinuxHelp/"/>
    <url>/2021/06/18/KaliLinuxHelp/</url>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619154844.jpg" alt="Kali"></p><h1 id="Kali-Linux-漏洞审计-批量扫描-弱密码撞库-教程"><a href="#Kali-Linux-漏洞审计-批量扫描-弱密码撞库-教程" class="headerlink" title="Kali Linux 漏洞审计 批量扫描 弱密码撞库 教程"></a>Kali Linux 漏洞审计 批量扫描 弱密码撞库 教程</h1><h1 id="nmap端口扫描"><a href="#nmap端口扫描" class="headerlink" title="nmap端口扫描"></a>nmap端口扫描</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>sudo apt-get install nmap</code></p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p><code>nmap [扫描类型] [扫描参数] [hosts 地址与范围]</code></p><h2 id="扫描类型"><a href="#扫描类型" class="headerlink" title="扫描类型"></a>扫描类型</h2><ul><li><p>-sT    TCP connect() 扫描，这是最基本的 TCP 扫描方式。这种扫描很容易被检测到，在目标主机的日志中会记录大批的连接请求以及错误信息。     </p></li><li><p>-sS    TCP 同步扫描 (TCP SYN)，因为不必全部打开一个 TCP 连接，所以这项技术通常称为半开扫描 (half-open)。这项技术最大的好处是，很少有系统能够把这记入系统日志。不过，你需要 root 权限来定制 SYN 数据包。     </p></li><li><p>-sF,-sX,-sN    秘密 FIN 数据包扫描、圣诞树 (Xmas Tree)、空 (Null) 扫描模式。这些扫描方式的理论依据是：关闭的端口需要对你的探测包回应 RST 包，而打开的端口必需忽略有问题的包（参考 RFC 793 第 64 页）。     </p></li><li><p>-sP    ping 扫描，用 ping 方式检查网络上哪些主机正在运行。当主机阻塞 ICMP echo 请求包是 ping 扫描是无效的。nmap 在任何情况下都会进行 ping 扫描，只有目标主机处于运行状态，才会进行后续的扫描。     </p></li><li><p>-sU    UDP 的数据包进行扫描，如果你想知道在某台主机上提供哪些 UDP（用户数据报协议，RFC768) 服务，可以使用此选项。     </p></li><li><p>-sA    ACK 扫描，这项高级的扫描方法通常可以用来穿过防火墙。     -sW    滑动窗口扫描，非常类似于 ACK 的扫描。     </p></li><li><p>-sR    RPC 扫描，和其它不同的端口扫描方法结合使用。     -b    FTP 反弹攻击 (bounce attack)，连接到防火墙后面的一台 FTP 服务器做代理，接着进行端口扫描。    </p></li></ul><h2 id="扫描参数"><a href="#扫描参数" class="headerlink" title="扫描参数"></a>扫描参数</h2><ul><li>-P0    在扫描之前，不 ping 主机。    </li><li>-PT    扫描之前，使用 TCP ping 确定哪些主机正在运行。     </li><li>-PS    对于 root 用户，这个选项让 nmap 使用 SYN 包而不是 ACK 包来对目标主机进行扫描。    </li><li>-PI    设置这个选项，让 nmap 使用真正的 ping(ICMP echo 请求）来扫描目标主机是否正在运行。    </li><li>-PB    这是默认的 ping 扫描选项。它使用 ACK(-PT) 和 ICMP(-PI) 两种扫描类型并行扫描。如果防火墙能够过滤其中一种包，使用这种方法，你就能够穿过防火墙。     </li><li>-O    这个选项激活对 TCP/IP 指纹特征 (fingerprinting) 的扫描，获得远程主机的标志，也就是操作系统类型。     </li><li>-I    打开 nmap 的反向标志扫描功能。    </li><li>-f    使用碎片 IP 数据包发送 SYN、FIN、XMAS、NULL。包增加包过滤、入侵检测系统的难度，使其无法知道你的企图。     </li><li>-v    冗余模式。强烈推荐使用这个选项，它会给出扫描过程中的详细信息。     </li><li>-S  <IP>   在一些情况下，nmap 可能无法确定你的源地址 (nmap 会告诉你）。在这种情况使用这个选项给出你的 IP 地址。    </li><li>-g port    设置扫描的源端口。一些天真的防火墙和包过滤器的规则集允许源端口为 DNS(53) 或者 FTP-DATA(20) 的包通过和实现连接。显然，如果攻击者把源端口修改为 20 或者 53，就可以摧毁防火墙的防护。     </li><li>-oN    把扫描结果重定向到一个可读的文件 logfilename 中。    </li><li>-oS    扫描结果输出到标准输出。    </li><li>–host_timeout    设置扫描一台主机的时间，以毫秒为单位。默认的情况下，没有超时限制。     </li><li>–max_rtt_timeout    设置对每次探测的等待时间，以毫秒为单位。如果超过这个时间限制就重传或者超时。默认值是大约 9000 毫秒。    </li><li>–min_rtt_timeout    设置 nmap 对每次探测至少等待你指定的时间，以毫秒为单位。    </li><li>-M count    置进行 TCP connect() 扫描时，最多使用多少个套接字进行并行的扫描。 </li></ul><h2 id="端口状态"><a href="#端口状态" class="headerlink" title="端口状态"></a>端口状态</h2><ul><li>Open（开放的）意味着目标机器上的应用程序正在该端口监听连接 / 报文。</li><li>filtered（被过滤的） 意味着防火墙，过滤器或者其它网络障碍阻止了该端口被访问，Nmap 无法得知 它是 open（开放的） 还是 closed（关闭的）。  </li><li>closed（关闭的） 端口没有应用程序在它上面监听，但是他们随时可能开放。 </li><li>unfiltered（未被过滤的）当端口对 Nmap 的探测做出响应，但是 Nmap 无法确定它们是关闭还是开放时 open filtered 开放或者被过滤的 closed filtered 关闭或者被过滤的</li></ul><h2 id="扫描实例"><a href="#扫描实例" class="headerlink" title="扫描实例"></a>扫描实例</h2><blockquote><p>阿里云服务器网段大全：<a href="https://blog.csdn.net/nxuu01/article/details/102779652">CSDN博客</a> <a href="https://blog.csdn.net/eagle_min/article/details/82260622">CSDN-eagle_min大佬</a></p><p>腾讯云ip段：<a href="https://blog.csdn.net/eagle_min/article/details/82260611">CSDN-eagle_min大佬</a></p></blockquote><ol><li>用nmap扫描该网段开放的888端口保存在pma.txt文件 格式要求：ip:port<br><code>nmap -vv -n --open -p 888 网段 | awk -F&#39;[ /]&#39; &#39;/Discovered open port/&#123;print $NF&quot;:&quot;$4&#125;&#39; &gt;&gt; pma.txt</code></li></ol><h1 id="Hydra-弱密码破解"><a href="#Hydra-弱密码破解" class="headerlink" title="Hydra 弱密码破解"></a>Hydra 弱密码破解</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p><code>sudo apt-get install hydra</code></p><blockquote><p>Hydra是一款<strong>非常强大的暴力破解工具</strong>，它是由著名的黑客组织THC开发的一款<strong>开源暴力破解工具</strong>。Hydra是一个验证性质的工具，主要目的是：展示安全研究人员从<strong>远程获取一个系统认证权限</strong>。</p></blockquote><h2 id="常见参数"><a href="#常见参数" class="headerlink" title="常见参数"></a>常见参数</h2><ul><li> -R: 继续从上一次进度接着破解</li><li>-S: 大写，采用SSL链接</li><li>-s <PORT>： 小写，可通过这个参数指定非默认端口</li><li>-l <LOGIN>： 指定破解的用户，对特定用户破解</li><li>-L <FILE>： 指定用户名字典</li><li>p <PASS>： 小写，指定密码破解，少用，一般是采用密码字典</li><li>-P <FILE>： 大写，指定密码字典</li><li>-e <ns>： 可选选项，n：空密码试探，s：使用指定用户和密码试探</li><li>-C <FILE>： 使用冒号分割格式，例如“登录名:密码”来代替 -L/-P 参数</li><li>-M <FILE>： 指定目标列表文件一行一条</li><li>o <FILE>： 指定结果输出文件</li><li> -f ： 在使用-M参数以后，找到第一对登录名或者密码的时候中止破解</li><li> -t <TASKS>： 同时运行的线程数，默认为16</li><li> -w <TIME>： 设置最大超时的时间，单位秒，默认是30s</li><li> -v / -V： 显示详细过程</li><li> server： 目标ip</li><li> service： 指定服务名，支持的服务和协议</li><li> OPT： 可选项</li></ul><hr><h2 id="实例分析"><a href="#实例分析" class="headerlink" title="实例分析"></a>实例分析</h2><h3 id="1-破解ssh"><a href="#1-破解ssh" class="headerlink" title="1.破解ssh"></a>1.破解ssh</h3><p><code>hydra -M sship.txt ssh -L user.txt -P passwd.txt -e ns -f -vV -t 4 -o ssh.txt</code></p><blockquote><p>-M 指定目标列表文件 一条一行</p><p>-L 指定用户字典 </p><p>-P 指定密码字典 </p><p>-e ns 空密码试探</p><p>-f 当破解一个成功密码就停止</p><p>-o 把成功的输出到ssh.txt文件 </p><p>-vV 显示详细信息</p></blockquote><h3 id="2-破解3389远程登录"><a href="#2-破解3389远程登录" class="headerlink" title="2.破解3389远程登录"></a>2.破解3389远程登录</h3><p><code>hydra -M rdpip.txt rdp -L user.txt -P passwd.txt -e ns -f -vV -t 16 -o rdp.txt</code></p><h3 id="3-破解MySQL数据库"><a href="#3-破解MySQL数据库" class="headerlink" title="3.破解MySQL数据库"></a>3.破解MySQL数据库</h3><p><code>hydra -M mysqlip.txt rdp -L user.txt -P passwd.txt -e ns -f -vV -t 16 -o mysql.txt</code></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux系统</tag>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MyDepression 抑郁症的心路历程</title>
    <link href="/2021/06/18/MyDepression/"/>
    <url>/2021/06/18/MyDepression/</url>
    
    <content type="html"><![CDATA[<h1 id="记录-抗抑郁"><a href="#记录-抗抑郁" class="headerlink" title="记录 抗抑郁"></a>记录 抗抑郁</h1><span id="more"></span><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/%E5%89%B2%E8%85%95(%E4%BA%8C%E6%AC%A1%E5%85%83).jpg" alt="割腕"></p><h1 id="各抗抑郁药物副作用对照表"><a href="#各抗抑郁药物副作用对照表" class="headerlink" title="各抗抑郁药物副作用对照表"></a>各<code>抗抑郁</code>药物副作用对照表</h1><table><thead><tr><th align="center">药物名称</th><th align="center">治疗症状</th><th align="center">副作用</th></tr></thead><tbody><tr><td align="center"><a href="http://drugs.dxy.cn/search/drug.htm?keyword=%E5%A5%A5%E6%B2%99%E8%A5%BF%E6%B3%AE%E7%89%87">奥沙西泮片</a></td><td align="center">主要用于<strong>短期缓解焦虑、紧张，激动</strong>，也可用于<strong>催眠</strong>，焦虑伴有<strong>精神抑郁</strong>的辅助用药，并能缓解急性酒精戒断症状。肌松作用较其他苯二氮卓药物为强。</td><td align="center"><strong>嗜睡、头昏、乏力</strong>等等。还可能会出现<strong>共济失调、震颤</strong>，罕见的不良反应有皮疹、白细胞减少。另外服用奥沙西泮的个别病人，可能会发生兴奋、多语、睡眠障碍甚至有幻觉（<strong>有成瘾性</strong>）</td></tr><tr><td align="center"><a href="http://drugs.dxy.cn/drug/frSns29YmepepmWKIr0plsplskl7pDyg==">阿立哌唑片</a></td><td align="center">孤独症相关的易激惹症状,适应症为用于治疗<strong>精神分裂</strong>,<strong>患者死亡增加。</strong>用于<strong>双相障碍躁狂发作</strong>患者</td><td align="center"><strong>体重增加</strong>,<strong>胃肠道</strong>不适，如恶心、厌食、腹泻等。亦可出现头痛、不安、无力、<strong>嗜睡</strong>、失眠、头晕或震颤等。</td></tr><tr><td align="center"><a href="http://drugs.dxy.cn/drug/Z69ucgieKbr0Biq7ZRRw5g==">碳酸锂缓释片</a></td><td align="center">主要治疗<strong>躁狂症</strong>，对<strong>躁狂和抑郁</strong>交替发作的<strong>双相情感性精神障碍</strong>有很好的治疗和预防复发作用，对<strong>反复发作的抑郁症</strong>也有预防<strong>发作作用</strong>。也用于治疗<strong>分裂-情感性精神病</strong>。</td><td align="center">因为锂盐的治疗指数低, <strong>治疗量和中毒量较接近</strong>(<del><strong>可用于自杀</strong></del>).有<strong>口干、烦渴、多饮、多尿、便秘、腹泻、恶心、呕吐、上腹痛</strong>。神经系统不良反应有双<strong>手细震颤、萎靡、无力、嗜睡、视物模糊、腱反射亢进</strong>。</td></tr></tbody></table><blockquote><h2 id="本博客附有抑郁症用药大全"><a href="#本博客附有抑郁症用药大全" class="headerlink" title="本博客附有抑郁症用药大全"></a>本博客附有抑郁症用药大全</h2></blockquote><blockquote><p>比如说: 碳酸锂,西酞普兰,阿米替林, <strong>舍曲林没吃了副作用有点大</strong><br><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/%E8%8D%AF.jpg" alt="xf5vOMnwKP4BJEc"></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/%E5%8C%BB%E9%99%A2.jpg" alt="Nt8GzPkYI97pBVo"></p><blockquote><p>现在也没去上学了,很难过…..</p><p>好像 <code>重度抑郁症</code> 转 <code>双向情感障碍</code> 了</p></blockquote><!-- # But it wasn't until I met her.....> ## She's cute, and I love to pinch her face, and she's happy to do it## She made me feel a little happy.## But it won't cure my depression either.## She was disappointed in me. --><h2 id="现在已经没去上学了-很快就要中考了-我也不知道怎么办了-每次抑郁发作都想跳楼"><a href="#现在已经没去上学了-很快就要中考了-我也不知道怎么办了-每次抑郁发作都想跳楼" class="headerlink" title="现在已经没去上学了,很快就要中考了,我也不知道怎么办了.每次抑郁发作都想跳楼."></a>现在已经没去上学了,很快就要中考了,我也不知道怎么办了.每次抑郁发作都想跳楼.</h2><!-- # This is her.![1.jpg](https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/1.jpg)![2.jpg](https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/2.jpg)![3.jpg](https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/3.jpg)![4.jpg](https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/4.jpg)![5.jpg](https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/5.jpg)-->]]></content>
    
    
    <categories>
      
      <category>抑郁症</category>
      
    </categories>
    
    
    <tags>
      
      <tag>抑郁症</tag>
      
      <tag>喜欢的人</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的 Hexo 博客</title>
    <link href="/2021/06/18/hello-world/"/>
    <url>/2021/06/18/hello-world/</url>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619154950.jpg" alt="download"></p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. <a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html">搭建教程</a></p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre></div><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo server</code></pre></div><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo generate</code></pre></div><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo deploy</code></pre></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>Hexo博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>😜 树莓派折腾手册 (二)——手动搭建LNMP网站服务器环境 🙏</title>
    <link href="/2021/06/18/rpi-3/"/>
    <url>/2021/06/18/rpi-3/</url>
    
    <content type="html"><![CDATA[<h1 id="😜-树莓派折腾手册-二-——手动搭建LNMP网站服务器环境-🙏"><a href="#😜-树莓派折腾手册-二-——手动搭建LNMP网站服务器环境-🙏" class="headerlink" title="😜 树莓派折腾手册 (二)——手动搭建LNMP网站服务器环境 🙏"></a>😜 树莓派折腾手册 (二)——手动搭建LNMP网站服务器环境 🙏</h1><blockquote><p>前言：这个东西我折腾了很久，试过一键部署脚本: <a href="https://lnmp.org/auto.html">https://lnmp.org/auto</a>但是我想在局域网+frp穿透的外网，访问树莓派的网站，但是只能绑定一个域名，反正用多了就出各种问题，可能我不会用 </p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo apt-get update   #好习惯，安装软件前先更新源列表</code></pre></div><h2 id="1-安装PHP7-3"><a href="#1-安装PHP7-3" class="headerlink" title="1.安装PHP7.3"></a><strong>1.安装PHP7.3</strong></h2><blockquote><p><strong>这里跳了很多坑，后来查文档才发现Debian 10 buster只能安装PHP7.0以上的版本</strong> </p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo apt install -y -t buster php7.3-fpm php7.3-curl php7.3-gd php7.3-intl php7.3-mbstring php7.3-mysql php7.3-imap php7.3-opcache php7.3-sqlite3 php7.3-xml php7.3-xmlrpc php7.3-zip</code></pre></div><p>通过命令<code>php -v</code>能够看到PHP版本号7.3，说明安装完成:</p><blockquote><p>输出显示配置文件在/etc/php/7.3/cli/php.ini。注意，实际上配置文件有两个，另外一个在/etc/php/7.3/fpm/php.ini。通过命令行调用php时，会使用第一个配置文件；通过fpm调用php（例如nginx）会使用第二个配置文件。  </p></blockquote><p>php-fpm常用管理命令:</p><div class="hljs code-wrapper"><pre><code class="hljs shell">开启php-fpm:sudo systemctl start php7.3-fpm 关闭php-fpm: sudo systemctl stop php7.3-fpm 重启php-fpm: sudo systemctl restart php7.3-fpm 编辑php-fpm配置文件:sudo nano /etc/php/7.3/fpm/php.ini</code></pre></div><h2 id="2-安装nginx"><a href="#2-安装nginx" class="headerlink" title="2.安装nginx:"></a><strong>2.安装nginx:</strong></h2><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo apt-get install nginx</code></pre></div><blockquote><p>安装完成后，会自动开启nginx。在浏览器输入树莓派的IP地址，可以看到“Welcome to nginx!”</p></blockquote><p><strong>nginx常用管理命令：</strong> </p><div class="hljs code-wrapper"><pre><code class="hljs shell">启动nginx: sudo systemctl start nginx 关闭nginx：sudo systemctl stop nginx 设置nginx开机启动：sudo systemctl enable nginx 重启nginx：sudo systemctl restart nginx <span class="hljs-meta">#</span><span class="bash">配置文件的位置：</span> 默认的网站根目录：/var/www/html nginx配置文件目录：/etc/nginx/ nginx主配置文件位置：/etc/nginx/nginx.conf</code></pre></div><h2 id="3-配置nginx解析php-关键"><a href="#3-配置nginx解析php-关键" class="headerlink" title="3.配置nginx解析php (关键)"></a>3.配置nginx解析php (关键)</h2><ul><li>编辑配置nginx文件: </li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo nano /etc/nginx/sites-enabled/default</code></pre></div><p>找到<code># pass PHP scripts to FastCGI server</code>后面的 <code>location</code> ，删除注释。修改后如下： </p><blockquote><p>PHP的默认路径转发有问题导致的,因为很多nginx的默认PHP配置文件的写法为 <strong>location ~ .php</strong> 要改成 *<em>location~.<em>.php(/.</em>)</em>$** </p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs shell">index index.php index.html index.htm index.nginx-debian.html; location ~ .*\.php(\/.*)*$ &#123; include snippets/fastcgi-php.conf; <span class="hljs-meta">#</span><span class="bash"> </span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># With php-fpm (or other unix sockets):</span></span>     fastcgi_pass unix:/run/php/php7.3-fpm.sock; <span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># With php-cgi (or other tcp sockets):</span></span> <span class="hljs-meta">#</span><span class="bash">fastcgi_pass 127.0.0.1:9000;</span> &#125;</code></pre></div><ul><li>保存后重启nginx： </li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo systemctl restart nginx</code></pre></div><p><strong>重启无报错则修改成功啦:</strong><br><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152804.png"></p><ul><li>在网站根目录创建一个php文件： </li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo nano /var/www/html/index.php</code></pre></div><p>写入以下php代码并保存： </p><div class="hljs code-wrapper"><pre><code class="hljs shell">&lt;?php phpinfo();</code></pre></div><p>在浏览器中输入树莓派的IP地址即可看到phpinfo:<br><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152811.png"></p><h2 id="4-安装mariaDB数据库"><a href="#4-安装mariaDB数据库" class="headerlink" title="4.安装mariaDB数据库"></a><strong>4.安装mariaDB数据库</strong></h2><ul><li>使用以下命令安装<code>mariadb</code>: </li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo apt-get install mariadb-server mariadb-client</code></pre></div><ul><li>执行数据库初始化安装:</li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo mysql_secure_installation</code></pre></div><blockquote><p>根据提示设置数据库<code>root用户密码</code>、<code>是否允许外网访问</code>等，建议用<strong>翻译软件</strong>，一步步翻译。  <code>回车 n Y n Y Y</code>   </p></blockquote><ul><li>尝试用<strong>普通用户pi</strong>登录数据库:<br><code>mysql -u root -p</code><br>输入上一步设置的密码，发现无法登录，错误提示如下:</li></ul><blockquote><p>ERROR 1698 (28000): Access denied for user ‘root’@’localhost’</p></blockquote><p>原因: 数据库默认使用<strong>特权用户root登录</strong>，需要修改为<strong>普通用户使用密码登录</strong><br>-尝试用<strong>特权用户root</strong>登录数据库:</p><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo mysql -u root# 登入数据库后，依次执行以下SQL： use mysql;update user set plugin=&#x27;mysql_native_password&#x27;;flush privileges;exit;</code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152818.png"></p><p>再次使用普通用户pi <code>mysql -u root -p</code> 即可通过密码登录数据库，无需root权限执行:</p><p> <img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152823.png"></p><ul><li>设置<strong>数据库密码</strong><br><strong>依次执行以下SQL：</strong> </li></ul><div class="hljs code-wrapper"><pre><code class="hljs sql">use mysql;   UPDATE <span class="hljs-keyword">user</span> <span class="hljs-keyword">SET</span> password<span class="hljs-operator">=</span>password(<span class="hljs-string">&#x27;123456&#x27;</span>) <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">user</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;root&#x27;</span>;   flush privileges;   exit;</code></pre></div><ul><li>设置<strong>mariaDB数据库</strong> <em><strong>外部网络访问权限</strong></em></li></ul><blockquote><p>根据官方的说法， MariaDB为了<strong>提高安全性</strong>，默认只监听127.0.0.1中的3306端口并且禁止了远程的TCP链接，我们可以通过下面两步来开启<strong>MySQL的远程服务</strong></p></blockquote><ol><li>打开文件<code>sudo nano /etc/mysql/mariadb.conf.d/50-server.cnf</code>，注释掉bind-address项，如下:<br><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152829.png"></li><li>开启了<strong>MySQL监听远程连接</strong>的选项，接下来需要给对应的<strong>MySQL账户分配权限</strong>，允许使用该账户<strong>远程连接</strong>到MySQL:<br>查看<strong>用户账号信息</strong>：</li></ol><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">User</span>,host <span class="hljs-keyword">from</span> mysql.user;</code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152834.png"><br><strong>root账户</strong>中的host项是<strong>localhost</strong>表示该账号只能进行<strong>本地登录</strong>，我们需要<strong>修改权限</strong>，执行MySQL命令:</p><div class="hljs code-wrapper"><pre><code class="hljs sql"><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> PRIVILEGES <span class="hljs-keyword">ON</span> <span class="hljs-operator">*</span>.<span class="hljs-operator">*</span> <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123456&#x27;</span> <span class="hljs-keyword">WITH</span> <span class="hljs-keyword">GRANT</span> OPTION;FLUSH PRIVILEGES;exit;</code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152851.png"></p><blockquote><p>这个时候发现相比之前<strong>多了一项</strong>，它的<strong>host项是%<strong>，这个时候说明配置成功了，我们可以用该账号进行</strong>远程访问</strong>了</p></blockquote><ul><li><strong>mariadb配置文件</strong>保存在多个位置:</li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">/etc/mysql/mariadb.cnf /etc/mysql/mariadb.conf.d/ /etc/mysql/conf.d/</code></pre></div><ul><li><strong>mariadb常用</strong>命令:</li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">启动mariadb: sudo systemctl start mariadb <span class="hljs-comment">#关闭/开启/重启 mariadb：systemctl stop/start/restart mariadb #设置mariadb开机启动：sudo systemctl enable mariadb</span></span></code></pre></div><ul><li><strong>连接MySQL</strong>数据库命令:</li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">mysql -h主机地址 -u用户名 －p用户密码</code></pre></div><blockquote><p><strong>(注:u与root可以不用加空格，其它也一样)</strong></p></blockquote><h2 id="5-安装phpmyadmin可视化MySQL管理工具"><a href="#5-安装phpmyadmin可视化MySQL管理工具" class="headerlink" title="5.安装phpmyadmin可视化MySQL管理工具"></a>5.安装<code>phpmyadmin</code>可视化MySQL管理工具</h2><blockquote><p><strong>官方网站</strong>:  <a href="https://www.phpmyadmin.net/">phpmyadmin官网</a></p><ul><li>用<strong>wget</strong>下载源码包包到web目录<br>(请自行到官网获取最新下载链接)，截至2020/8/4版本为:<br><strong>phpMyAdmin-5.0.2-all-languages.zip</strong></li></ul></blockquote><div class="hljs code-wrapper"><pre><code class="hljs shell">wget https://gproxy.cn/https://github.com/phpmyadmin/phpmyadmin/archive/RELEASE_5_0_4.zip</code></pre></div><ul><li><strong>解压zip格式</strong>源码包包到<strong>web目录</strong></li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo chmod 777 -R /var/www/html/unzip -d /var/www/html/ ~/phpMyAdmin-5.0.2-all-languages.zip</code></pre></div><blockquote><p>若unzip不受支持请安装<br><strong>sudo apt-get install unzip</strong></p></blockquote><ul><li><strong>重命名文件夹并修改参数</strong></li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">cd /var/www/html/mv phpMyAdmin-5.0.2-all-languages phpmyadmincd phpmyadminmv config.sample.inc.php config.inc.phpnano config.inc.php$cfg[&#x27;AllowArbitraryServer&#x27;] = true;</code></pre></div><p>编辑<code>config.inc.php</code>文件，修改密钥字段:<br><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152859.png"></p><blockquote><p>修改<strong>blowfish_secret</strong>字段，后面的密钥无仅仅用于加密而已，<strong>尽量足够长</strong>。<strong>当然偷偷插入<del>喜欢的女孩子</del>名字也是可以的哦</strong></p></blockquote><ul><li>把<strong>config.inc.php文件权限修改</strong>为744</li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo chmod 744 config.inc.php</code></pre></div><ul><li>尝试访问 http://你的树莓派ip/phpmyadmin<br><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152752.png"><br><strong>启动高级功能</strong> 会新建一个phpmyadmin数据库<br><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152912.png"><br><strong>安装成功！</strong><br><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152920.png"></li></ul><h2 id="6-搭建多个nginx虚拟主机"><a href="#6-搭建多个nginx虚拟主机" class="headerlink" title="6.搭建多个nginx虚拟主机"></a>6.搭建多个<code>nginx</code>虚拟主机</h2><blockquote><p>有时候我们要在主机的<strong>不同端口</strong>搭建不同用处的<strong>web服务</strong>，这时就需要多个新建多个nginx虚拟主机的啦~</p></blockquote><ul><li><p>打开<code>nginx</code>主配置文件</p><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo nano /etc/nginx/nginx.conf</code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152925.png" alt="image-20200805160257592"></p></li></ul><p>找到<code>include</code>字段就是每个<strong>虚拟主机配置文件</strong>，为了方便管理，我们在<strong>用户家目录</strong>新建一个<code>nginx-conf</code>存放我们的<strong>nginx虚拟主机文件</strong></p><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 在配置文件插入include /home/pi/nginx-conf/*;</span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152933.png" alt="image-20200805160615360"></p><div class="hljs code-wrapper"><pre><code class="hljs shell">mkdir /home/pi/nginx-confnano /home/pi/nginx-conf/kodbox.conf</code></pre></div><p>写入以下内容:           <em><strong>(贴出一份完整的nginx虚拟主机配置，需要自行修改两个参数)</strong></em></p><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 监听端口 两个都要改server &#123;listen 88 default_server;listen [::]:88 default_server;<span class="hljs-comment"># SSL configuration## listen 443 ssl default_server;# listen [::]:443 ssl default_server;## include snippets/snakeoil.conf;root /home/pi/kodbox; #网站根目录位置# Add index.php to the list if you are using PHPindex index.php index.html index.htm index.nginx-debian.html;server_name _;location / &#123;try_files $uri $uri/ =404;&#125;# pass PHP scripts to FastCGI server#location ~ .*\.php(\/.*)*$ &#123;include snippets/fastcgi-php.conf;fastcgi_pass unix:/run/php/php7.3-fpm.sock;&#125;&#125;</span></span></code></pre></div><p>重启<code>nginx</code>，愿一切安好:</p><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo systemctl restart nginxwget --content-disposition https://packagecloud.io/headmelted/codebuilds/packages/debian/stretch/code-oss_1.45.0-1586135971_arm64.deb/download.deb</code></pre></div><h2 id="7-树莓派PHP调优"><a href="#7-树莓派PHP调优" class="headerlink" title="7. 树莓派PHP调优"></a>7. 树莓派<code>PHP</code>调优</h2><blockquote><h4 id="lnmp默认环境部署完成后，进行调优以应对多并发，复杂任务的情景"><a href="#lnmp默认环境部署完成后，进行调优以应对多并发，复杂任务的情景" class="headerlink" title="lnmp默认环境部署完成后，进行调优以应对多并发，复杂任务的情景"></a><strong>lnmp默认环境</strong>部署完成后，进行调优以应对<strong>多并发，复杂任务的情景</strong></h4></blockquote><ul><li><p>部署<strong>PHP探针</strong>以测试</p><blockquote><p>部署服务器探针推荐X探针，GitHub项目地址：</p><p><a href="https://github.com/kmvan/x-prober">GitHub X刘海探针</a></p></blockquote></li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">克隆项目到www目录<span class="hljs-built_in">cd</span> /var/www/htmlwget https://github.com/kmvan/x-prober/raw/master/dist/prober.php<span class="hljs-comment">#删除默认页rm index.phpmv prober.php index.phpsudo chmod 777 index.php</span></span></code></pre></div><p><strong>尝试</strong>访问 <code>http://树莓派ip</code> :</p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152940.png" alt="image-20200807132503823"></p><blockquote><p>可以看到这些参数都是好   <strong>鸡肋的</strong></p></blockquote><ul><li>修改<strong>php.ini</strong> 仔细看好喽~</li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo nano /etc/php/7.3/fpm/php.ini</code></pre></div><p>修改 <em><strong>post 方式提交的数据大小</strong></em>，查找：<code>post_max_size</code> <strong>酌情修改为2000M</strong></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152945.png" alt="image-20200807133234597"></p><p>修改 <em><strong>运行超时秒数</strong></em> ，查找：<code>max_execution_time</code> <strong>酌情修改为3600s</strong></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152950.png" alt="image-20200807133453326"></p><p>修改 <em><strong>上传文件限制</strong></em> ，查找：<code>upload_max_filesize</code> <strong>酌情修改为2000M</strong></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152956.png" alt="image-20200807133741086"></p><p>修改 <em><strong>运行内存限制</strong></em> ，查找：<code>memory_limit</code> <strong>酌情修改为2000M</strong></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619153003.png" alt="image-20200807133917750"></p><p>开启 <em><strong>文件上传</strong></em>  ,查找：<code>file_uploads</code> 更改为<code>On</code></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619153007.png" alt="image-20200807134107318"></p><ul><li><p>更改完成后重启 <code>nginx+php-fpm</code> </p><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">max_input_time</span> = <span class="hljs-number">3600</span>;sudo systemctl restart nginxsudo systemctl restart php<span class="hljs-number">7</span>.<span class="hljs-number">3</span>-fpm</code></pre></div></li></ul><p><strong>更改后的探针页面</strong>：</p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619153012.png" alt="image-20200807134706542"></p><h2 id="8-搭建kodbox云私有云盘"><a href="#8-搭建kodbox云私有云盘" class="headerlink" title="8.搭建kodbox云私有云盘"></a>8.搭建<code>kodbox</code>云私有云盘</h2><blockquote><h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><h4 id="即刻下载，开启私有云盘之旅"><a href="#即刻下载，开启私有云盘之旅" class="headerlink" title="即刻下载，开启私有云盘之旅"></a>即刻下载，开启私有云盘之旅</h4><p><strong>官网:<a href="http://kodcloud.com/download/">可道云官网</a></strong></p></blockquote><ul><li><strong>下载源码</strong></li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">cd ~mkdir kodboxcd kodboxwget http://static.kodcloud.com/update/download/kodbox.1.11.zipunzip kodbox.1.11.zipunzip kodbox.1.11.ziprm kodbox.1.11.zipchmod 777 ~/kodbox</code></pre></div><p>尝试访问 <strong>http://树莓派ip:88</strong> :</p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619153018.png" alt="image-20200805163537543"></p><blockquote><p>除了PHP版本外其他都可以通过哒~</p></blockquote><ul><li><p>安装系统缓存<code>Redis</code></p><div class="hljs code-wrapper"><pre><code class="hljs routeros">sudo apt-<span class="hljs-builtin-name">get</span> install redis php-redis</code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619153025.png" alt="image-20200805164115135"></p></li></ul><p><strong>redis服务会自动运行自动添加开机启动项，省心！！！</strong></p><p><strong>编辑</strong><code>sudo nano /etc/php/7.3/fpm/php.ini </code>文件加入：</p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619153032.png" alt="image-20200807211906533"></p><div class="hljs code-wrapper"><pre><code class="hljs ini"><span class="hljs-attr">extension</span>=redis.so<span class="hljs-comment">#重启php-fpmsudo systemctl restart php7.3-fpm </span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619153038.png" alt="image-20200805164305612"></p><blockquote><h4 id="数据库选择MySQL，填入自己的密码"><a href="#数据库选择MySQL，填入自己的密码" class="headerlink" title="数据库选择MySQL，填入自己的密码"></a>数据库选择<strong>MySQL</strong>，填入自己的密码</h4><h4 id="系统缓存类型选择Redis"><a href="#系统缓存类型选择Redis" class="headerlink" title="系统缓存类型选择Redis"></a>系统缓存类型选择Redis</h4></blockquote>]]></content>
    
    
    <categories>
      
      <category>树莓派</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux系统</tag>
      
      <tag>树莓派</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>😃 树莓派折腾手册 (一)——准备系统 😃</title>
    <link href="/2021/06/18/rpi-1/"/>
    <url>/2021/06/18/rpi-1/</url>
    
    <content type="html"><![CDATA[<h1 id="😃-树莓派折腾手册-一-——准备系统-😃"><a href="#😃-树莓派折腾手册-一-——准备系统-😃" class="headerlink" title="😃 树莓派折腾手册 (一)——准备系统 😃"></a>😃 树莓派折腾手册 (一)——准备系统 😃</h1><h2 id="烧录官方Debian-10-buster系统镜像："><a href="#烧录官方Debian-10-buster系统镜像：" class="headerlink" title="烧录官方Debian 10 buster系统镜像："></a>烧录官方<code>Debian 10 buster</code>系统镜像：</h2><p> 先用 <strong>SDFormatter</strong> 格式化一下内存卡叭:</p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152409.png" alt="hZkDB8qxtRgQz3S"></p><h3 id="1-烧写镜像用到的软件：-Win32-Disk-Image"><a href="#1-烧写镜像用到的软件：-Win32-Disk-Image" class="headerlink" title="1. 烧写镜像用到的软件： Win32 Disk Image"></a>1. 烧写镜像用到的软件： <strong>Win32 Disk Image</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152403.png" alt="Zb6CEHnf17oqO5Q"></p><ul><li>然后在U盘的根目录建立一个空白的 <strong>ssh文件  方便ssh远程连接</strong><br><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/sasw.png" alt="FV5qpvWz7LtsOgi"></li><li>用 <strong>Windows PowerShell</strong> 连接树莓派ssh<br><code>shift+右键</code> 呼出<strong>Windows PowerShell</strong><br><strong>完整连接语法</strong>:</li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">ssh -p 端口号 用户名@主机地址</code></pre></div><blockquote><p>树莓派默认的用户名 <strong>pi</strong> 密码 <strong>raspberry</strong><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152448.png" alt="QLA74lscbwzRWY2"></p></blockquote><ul><li>树莓派扩展TF卡分区:<br>sudo raspi-config –&gt; Advanced options –&gt;Expand Filesystem, 确认重启</li></ul><h3 id="2-启动树莓派HDMI功能"><a href="#2-启动树莓派HDMI功能" class="headerlink" title="2. 启动树莓派HDMI功能 :"></a>2. 启动树莓派HDMI功能 :</h3><ul><li><p>编辑<code>config.txt</code>文件，修改以下参数:<br>sudo nano /boot/config.txt</p><ul><li>把下面#注释符号去掉<br>hdmi_force_hotplug=1  #启用HDMI热插拔功能<br>config_hdmi_boost=4    #启用加强HDMI信号</li></ul><blockquote><p>不出意外的话应该可以接上，但是我的没有声音输出诶<br>注：如果还是不能的话，找到#hdmi_group=1这句话，把前面的#注释符号去掉，把数字改成 2强行指定显示器类型：1是连接老式电视，2代表连接新电视。</p></blockquote></li></ul><h2 id="树莓派-Debian-10-buster-换清华源："><a href="#树莓派-Debian-10-buster-换清华源：" class="headerlink" title="树莓派 Debian 10 buster 换清华源："></a>树莓派 <code>Debian 10 buster</code> 换清华源：</h2><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo nano /etc/apt/sources.listdeb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contribdeb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contribsudo nano /etc/apt/sources.list.d/raspi.listdeb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main ui</code></pre></div><ul><li>更新源列表: <code>sudo apt-get update</code></li><li>更新软件版本，升级软件包: <code>sudo apt-get upgrade</code></li></ul><h2 id="树莓派rasp-config相关设置"><a href="#树莓派rasp-config相关设置" class="headerlink" title="树莓派rasp-config相关设置"></a>树莓派<code>rasp-config</code>相关设置</h2><h3 id="1-设置pi，root用户密码，并解锁"><a href="#1-设置pi，root用户密码，并解锁" class="headerlink" title="1. 设置pi，root用户密码，并解锁:"></a>1. 设置pi，root用户密码，并解锁:</h3><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">树莓派修改密码，顺便解锁root用户</span>sudo passwd pisudo passwd root<span class="hljs-meta">#</span><span class="bash">解锁root用户</span>sudo passwd --unlock root<span class="hljs-meta">#</span><span class="bash">如果想在终端直接用root用户登录，编辑</span>sudo nano /etc/ssh/sshd_config修改 PermitRootLogin without-password 为 PermitRootLogin yes</code></pre></div><h3 id="2-respi本地化操作"><a href="#2-respi本地化操作" class="headerlink" title="2. respi本地化操作 :"></a>2. <strong>respi本地化</strong>操作 :</h3><ul><li>安装中文字体，提供几个Linux中文字体库:</li></ul> <div class="hljs code-wrapper"><pre><code class="hljs shell">sudo apt-get install xfonts-wqysudo apt-get install ttf-wqy-zenhei ttf-wqy-microhei</code></pre></div><ul><li>设置终端中文显示: <code>sudo raspi-config</code>:<br>选择change_locale，在Default locale for the system environment:中选择zh_CN.UTF-8。<br>往下翻一会儿直到找到zh_CN UTF-8把光标移动到前面，然后按下空格键打上*<br><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152513.png" alt="3hQeD8k9L1mgTZc"></li><li>改变键盘布局: <code>sudo dpkg-reconfigure keyboard-configuration</code></li></ul><h3 id="3-设置-vnc桌面-连接"><a href="#3-设置-vnc桌面-连接" class="headerlink" title="3. 设置 vnc桌面 连接"></a>3. 设置 vnc桌面 连接</h3><blockquote><p>注:这里放弃了树莓派自带的 <strong>realvnc</strong> 因为不支持网页 <strong>novnc</strong> 且功能很少，所以用 <strong>Tightvnc</strong> 代替</p></blockquote><ul><li>安装<strong>Tightvncserver</strong>: <code>sudo apt-get install tightvncserver</code></li><li>安装好之后设置一个<strong>VNC密码</strong>:  vncpasswd</li></ul><blockquote><p>注: 先输入操作密码两次，然后会询问是否设置一个查看(view-only)密码，按自己喜欢，一般没必要。</p></blockquote><ul><li>设置<strong>开机自启动</strong> :</li></ul><blockquote><p>设置<strong>开机启动</strong>，需要在 <strong>/etc/init.d/</strong> 中创建一个文件。例如<strong>tightvncserver</strong>:  (启动脚本的名称，有和程序名一致的习惯)</p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs sh">sudo nano /etc/init.d/tightvncserver<span class="hljs-comment"># 内容如下:</span><span class="hljs-comment">#!/bin/sh</span><span class="hljs-comment">### BEGIN INIT INFO</span><span class="hljs-comment"># Provides:          tightvncserver</span><span class="hljs-comment"># Required-Start:    $local_fs</span><span class="hljs-comment"># Required-Stop:     $local_fs</span><span class="hljs-comment"># Default-Start:     2 3 4 5</span><span class="hljs-comment"># Default-Stop:      0 1 6</span><span class="hljs-comment"># Short-Description: Start/stop tightvncserver</span><span class="hljs-comment">### END INIT INFO</span><span class="hljs-comment"># More details see:</span><span class="hljs-comment"># http://www.penguintutor.com/linux/tightvnc</span><span class="hljs-comment">### Customize this entry</span><span class="hljs-comment"># Set the USER variable to the name of the user to start tightvncserver under</span><span class="hljs-built_in">export</span> USER=<span class="hljs-string">&#x27;pi&#x27;</span><span class="hljs-comment">### End customization required</span><span class="hljs-built_in">eval</span> <span class="hljs-built_in">cd</span> ~<span class="hljs-variable">$USER</span><span class="hljs-keyword">case</span> <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> <span class="hljs-keyword">in</span>  start)    <span class="hljs-comment"># 启动命令行。此处自定义分辨率、控制台号码或其它参数。</span>    su <span class="hljs-variable">$USER</span> -c <span class="hljs-string">&#x27;/usr/bin/tightvncserver -depth 16 -geometry 800x600 :1&#x27;</span>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Starting TightVNC server for <span class="hljs-variable">$USER</span> &quot;</span>    ;;  stop)    <span class="hljs-comment"># 终止命令行。此处控制台号码与启动一致。</span>    su <span class="hljs-variable">$USER</span> -c <span class="hljs-string">&#x27;/usr/bin/tightvncserver -kill :1&#x27;</span>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Tightvncserver stopped&quot;</span>    ;;  *)    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Usage: /etc/init.d/tightvncserver &#123;start|stop&#125;&quot;</span>    <span class="hljs-built_in">exit</span> 1    ;;<span class="hljs-keyword">esac</span><span class="hljs-built_in">exit</span> 0</code></pre></div><p>然后给<strong>tightvncserver文件</strong>加<strong>执行权限</strong>：</p><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo chmod 755 /etc/init.d/tightvncserver</code></pre></div><p>并更新<strong>开机启动列表</strong>：</p><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo update-rc.d tightvncserver defaults</code></pre></div><p>一些<strong>service命令</strong> :</p><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo service tightvncserver restart #重启服务sudo service tightvncserver start/stop #关闭/开启服务sudo service tightvncserver status #查看服务运行状态</code></pre></div><blockquote><p>附:   vnc客户端下载<br><a href="https://www.realvnc.com/en/connect/download/viewer/">vnc官网</a></p></blockquote><p>连接成功惹~:<br><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152521.png"><br><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152531.png"><br>编辑 ./vnc/xstartup 配置文件使其能与windown共享剪贴板</p><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo nano .vnc/xstartup<span class="hljs-meta"></span><span class="hljs-meta">#</span><span class="bash">在后方追加</span>vncconfig -nowin -iconic &amp;<span class="hljs-meta">#</span><span class="bash">重启Tightvncserver</span>sudo service tightvncserver restart</code></pre></div><h3 id="4-部署novnc网页"><a href="#4-部署novnc网页" class="headerlink" title="4.部署novnc网页 :"></a>4.部署<strong>novnc网页</strong> :</h3><blockquote><p>方便在网页上控制树莓派屏幕，但是<strong>不支持realvnc</strong></p></blockquote><ul><li>安装 <strong>git 支持</strong></li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo apt-get install git</code></pre></div><ul><li><strong>克隆</strong> novnc项目:</li></ul><blockquote><p>在中国大陆听说<del>加上 <em><a href="https://gproxy.cn/">https://gproxy.cn</a></em> 就可以加速 <strong>克隆</strong> 速度丫</del> 改口 应换成  <a href="https://github.com.cnpmjs.org/">https://github.com.cnpmjs.org/</a></p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs shell">git clone https://github.com/kanaka/noVNC #源地址git clone https://github.com.cnpmjs.org/kanaka/noVNC #加速地址</code></pre></div><ul><li>运行 <strong>novnc</strong> 并设置<strong>开机自启动</strong>:</li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">cd noVNC<span class="hljs-meta">#</span><span class="bash"> 初始化可能有点点慢</span>./utils/launch.sh --vnc localhost:5901 #监听5901 vnc端口</code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152538.png"></p><ul><li>尝试访问: <a href="http://raspiberry:6080/">http://raspiberry:6080</a>  可<br><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152542.png"></li><li>一些<strong>高级设置</strong> :</li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">./utils/websockify --web ./ 8787 localhost:5901  #修改6080默认端口./utils/websockify --web ./ 8787 192.168.1.10:5901 #可以讲localhost改成所有安装了vncserver的IP地址</code></pre></div><p> <strong>连接速度太慢可以安装Python的numpy库解决</strong></p><ul><li>设置<strong>开机启动</strong>：</li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">编辑开机启动项</span>sudo nano /etc/rc.local<span class="hljs-meta">#</span><span class="bash">以pi用户运行程序</span>su pi -c &quot;/home/pi/noVNC/utils/launch.sh --vnc localhost:5901&quot; &amp;</code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152617.png" alt="fEVci5dlNCMaUs4"></p><h3 id="5-安装cockpit-web可视化管理"><a href="#5-安装cockpit-web可视化管理" class="headerlink" title="5.安装cockpit web可视化管理"></a>5.安装<code>cockpit</code> web可视化管理</h3><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo apt-get updatesudo apt-get install cockpit</code></pre></div><blockquote><p>安装的依赖有  <strong>一丢丢多</strong></p></blockquote><ul><li>默认是用<code>https</code>访问，需要修改配置文件使其能<code>http</code>访问</li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo nano /etc/cockpit/cockpit.conf #这个文件默认是不存在的需要新建[WebService]AllowUnencrypted=trueLoginTitle=鲸云pi</code></pre></div><ul><li>配置<strong>开机启动</strong></li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo systemctl enable cockpit.socketsudo systemctl start cockpit.socket</code></pre></div><ul><li><p>页面</p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152626.png" alt="image-20200805174634421"></p></li></ul><h2 id="Python设置"><a href="#Python设置" class="headerlink" title="Python设置"></a>Python设置</h2><h3 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h3><blockquote><p>树莓派默认安装了两个版本的<strong>Python</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152632.png"></p><h3 id="树莓派pip换源"><a href="#树莓派pip换源" class="headerlink" title="树莓派pip换源"></a>树莓派pip换源</h3><blockquote><p><strong>pip</strong>更换为<strong>国内源</strong>，可以大大的提高安装成功率和速度。不管你用的是<strong>pip3还是pip，方法都是一样的</strong></p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs shell">mkdir ~/.pipnano ~/.pip/pip.conf<span class="hljs-meta"></span><span class="hljs-meta">#</span><span class="bash">写入</span>[global]timeout = 5000index-url = https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple[install]use-mirrors = truemirrors = https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple</code></pre></div><ul><li><strong>更新pip版本</strong></li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">python3 -m pip install --upgrade pip</code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619152649.png" alt="seVOiSZrBKgE827"></p><ul><li><strong>树莓派指定Python版本安装模块</strong></li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo pip3 install XXX   #Python3版本sudo pip install XXX   #Python2版本</code></pre></div><h2 id="部署zsh"><a href="#部署zsh" class="headerlink" title="部署zsh"></a>部署zsh</h2><div class="hljs code-wrapper"><pre><code class="hljs shell">sh -c &quot;$(wget -O- https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh)&quot;git clone https://github.com.cnpmjs.org/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions git clone https://github.com.cnpmjs.org/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting  ZSH_DISABLE_COMPFIX=true</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>树莓派</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux系统</tag>
      
      <tag>树莓派</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>😏 树莓派折腾手册（三）——搭建离线下载器 👀</title>
    <link href="/2021/06/18/rpi-2/"/>
    <url>/2021/06/18/rpi-2/</url>
    
    <content type="html"><![CDATA[<h1 id="😏-树莓派折腾手册（三）——搭建离线下载器-👀"><a href="#😏-树莓派折腾手册（三）——搭建离线下载器-👀" class="headerlink" title="😏 树莓派折腾手册（三）——搭建离线下载器 👀"></a>😏 树莓派折腾手册（三）——搭建离线下载器 👀</h1><h2 id="1-挂载硬盘-U盘"><a href="#1-挂载硬盘-U盘" class="headerlink" title="1.挂载硬盘/U盘"></a>1.挂载硬盘/U盘</h2><blockquote><p><strong>注意：开始之前先把存储设备格式化成</strong> <strong>fat32文件系统</strong> </p></blockquote><ul><li><p>树莓派4B Debian10系统插上储存设备后默认自动挂载到  <code>/media</code> 目录我们先卸载U盘：</p><p>查询硬盘状态:   <code>sudo fdisk -l</code> </p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619153119.png" alt="9XBTemAzD6R8yot"></p></li></ul><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo umount /media/pi/PI   #这里不能照抄命令，要根据实际情况更改 <span class="hljs-meta"></span><span class="hljs-meta">#</span><span class="bash">如果出现 target is busy 的情况，我们要强行结束U盘目录下的进程</span> sudo fuser -mv -k /media/U盘 名字    # 然后再执行umount卸载命令</code></pre></div><ul><li>编辑<code>/etc/fstab</code>中添加像下面这样的挂载配置： </li></ul><div class="hljs code-wrapper"><pre><code class="hljs awk">sudo nano <span class="hljs-regexp">/etc/</span>fstab<span class="hljs-regexp">/dev/</span>sda1 <span class="hljs-regexp">/home/</span>pi/disk vfat utf8,uid=<span class="hljs-number">1000</span>,gid=<span class="hljs-number">1000</span>,umask=<span class="hljs-number">000</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-comment">#挂载点需要自行更改 sda1要加数字</span>sudo rebootmount <span class="hljs-regexp">/dev/</span>sda1 <span class="hljs-regexp">/home/</span>pi/disk -o utf8,uid=<span class="hljs-number">1000</span>,gid=<span class="hljs-number">1000</span>,umask=<span class="hljs-number">000</span> -t vfat</code></pre></div><ul><li><p>重启 ，不出意外的话开机 应该 会自动挂载，且有写权限，用户是pi：如图挂载至 <code>/home/pi/disk</code> 目录，有<strong>777权限</strong></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619153142.png" alt="3ilg9S1UJ2EcHPV"></p></li></ul><h2 id="2-部署Aria2离线下载器"><a href="#2-部署Aria2离线下载器" class="headerlink" title="2.部署Aria2离线下载器"></a>2.部署Aria2离线下载器</h2><ul><li>下载安装<code>Aria2</code>:</li></ul><div class="hljs code-wrapper"><pre><code class="hljs routeros">sudo apt-<span class="hljs-builtin-name">get</span> updatesudo apt-<span class="hljs-builtin-name">get</span> install aria2</code></pre></div><ul><li><p>安装nginx：</p><blockquote><p>上面已经安装过的<strong>小可爱</strong>可以<strong>跳过</strong></p></blockquote></li></ul><div class="hljs code-wrapper"><pre><code class="hljs routeros">sudo apt-<span class="hljs-builtin-name">get</span> install nginx</code></pre></div><ul><li><p>配置Aria2， 创建配置文件： </p><div class="hljs code-wrapper"><pre><code class="hljs awk"><span class="hljs-comment">#创建目录 </span>sudo mkdir <span class="hljs-regexp">/etc/</span>aria2/ <span class="hljs-comment">#创建配置文件 </span>sudo touch <span class="hljs-regexp">/etc/</span>aria2/aria2.conf <span class="hljs-comment">#创建aria2用户 </span>sudo useradd -M -s <span class="hljs-regexp">/usr/</span>sbin/nologin aria2 <span class="hljs-comment">#创建session文件，用于保存进度: </span>sudo touch <span class="hljs-regexp">/etc/</span>aria2/aria2.session <span class="hljs-comment">#修改文件拥有者为aria2： </span>sudo chown aria2 <span class="hljs-regexp">/etc/</span>aria2 <span class="hljs-regexp">/etc/</span>aria2/aria2.session</code></pre></div></li><li><p>编辑<code>Aria2配置</code>文件:</p><div class="hljs code-wrapper"><pre><code class="hljs routeros"><span class="hljs-comment">#根据需要编辑文件: </span>sudo nano /etc/aria2/aria2.conf <span class="hljs-comment">#配置实例</span><span class="hljs-comment">#默认下载位置，需要改这里！！ </span><span class="hljs-attribute">dir</span>=/home/pi/disk <span class="hljs-comment">#断点续传 </span><span class="hljs-attribute">continue</span>=<span class="hljs-literal">true</span> <span class="hljs-attribute">min-split-size</span>=10M <span class="hljs-attribute">input-file</span>=/etc/aria2/aria2.session <span class="hljs-attribute">save-session</span>=/etc/aria2/aria2.session <span class="hljs-attribute">enable-rpc</span>=<span class="hljs-literal">true</span> <span class="hljs-attribute">rpc-allow-origin-all</span>=<span class="hljs-literal">true</span> <span class="hljs-comment">#只让本机访问6800端口，因为下面让nginx代理 </span><span class="hljs-attribute">rpc-listen-all</span>=<span class="hljs-literal">false</span> <span class="hljs-comment">#rpc秘钥，需要改这里 </span><span class="hljs-attribute">rpc-secret</span>=123456 rpc默认端口为6800<span class="hljs-comment">#rpc-listen-port=6800 </span><span class="hljs-attribute">listen-port</span>=51413  <span class="hljs-attribute">enable-dht</span>=<span class="hljs-literal">false</span> <span class="hljs-attribute">enable-peer-exchange</span>=<span class="hljs-literal">false</span> <span class="hljs-attribute">peer-id-prefix</span>=-TR2770- <span class="hljs-attribute">user-agent</span>=Transmission/2.77 <span class="hljs-attribute">seed-ratio</span>=0 <span class="hljs-attribute">bt-seed-unverified</span>=<span class="hljs-literal">true</span> <span class="hljs-attribute">bt-save-metadata</span>=<span class="hljs-literal">true</span></code></pre></div></li><li><p>创建<strong>systemd</strong>文件在 <code>/lib/systemd/system/aria2.service</code> 为如下: </p><div class="hljs code-wrapper"><pre><code class="hljs routeros">sudo nano /lib/systemd/system/aria2.service<span class="hljs-comment">#配置实例 </span>[Unit] <span class="hljs-attribute">Description</span>=Aria2c download manager <span class="hljs-attribute">After</span>=network.target  [Service] <span class="hljs-attribute">Type</span>=simple <span class="hljs-attribute">User</span>=aria2 <span class="hljs-attribute">ExecStart</span>=/usr/bin/aria2c  <span class="hljs-attribute">--conf-path</span>=/etc/aria2/aria2.conf  [Install] <span class="hljs-attribute">WantedBy</span>=multi-user.target</code></pre></div></li><li><p>启动<strong>Aria2</strong>:</p><div class="hljs code-wrapper"><pre><code class="hljs routeros"><span class="hljs-comment">#启动Aria2 </span>sudo systemctl start aria2.service <span class="hljs-comment">#可以设置开机启动 </span>sudo systemctl <span class="hljs-builtin-name">enable</span> aria2.service <span class="hljs-comment">#如果要关闭开机启动 </span>sudo systemctl <span class="hljs-builtin-name">disable</span> aria2.service</code></pre></div></li><li><p>配置<strong>nginx+ariaNg</strong>可视化管理页面：</p><blockquote><p>到<a href="https://github.com/mayswind/AriaNg/releases"><strong>AriaNG</strong>开源项目页面</a> 获取最新版版本</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619153158.png" alt="UO7c5EItjBHRsgN"></p><p><strong>把源码克隆到</strong> <code>/website/AriaNg/</code>：</p><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo mkdir /websitesudo chmod 777 -R /websitecd /websitemkdir AriaNgcd AriaNg<span class="hljs-meta"></span><span class="hljs-meta">#</span><span class="bash">自己复制最新版链接</span>wget https://github.com/mayswind/AriaNg/releases/download/1.1.6/AriaNg-1.1.6.zip<span class="hljs-meta">#</span><span class="bash">祖国加速通道</span>wget https://gproxy.cn/https://github.com/mayswind/AriaNg/releases/download/1.1.6/AriaNg-1.1.6.zip<span class="hljs-meta">#</span><span class="bash">解压</span>unzip AriaNg-1.1.6.ziprm AriaNg-1.1.6.zip<span class="hljs-meta">#</span><span class="bash">授权</span>sudo chmod 777 -R /website</code></pre></div></li></ul><blockquote><p>为了方便使用，我把<strong>AriaNg</strong>和<strong>jsonrpc</strong>都配置在了 <strong>80 端口</strong>，利用nginx的<strong>代理功能</strong>，把本机 6800 端口隐藏,对外<strong>只暴露 80 端口.</strong> </p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">修改nginx配置文件</span> sudo nano /etc/nginx/sites-enabled/default<span class="hljs-meta"></span><span class="hljs-meta">#</span><span class="bash">添加配置aria2Ng</span> location /aria2 &#123;             alias /website/AriaNg/;             index index.html;     &#125; <span class="hljs-meta">#</span><span class="bash">代理jsonrpc</span> location /jsonrpc &#123;        proxy_pass http://localhost:6800/jsonrpc;             proxy_redirect off;             proxy_set_header        X-Real-IP       $remote_addr;             proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;             proxy_set_header Host $host;             #以下代码使支持WebSocket             proxy_http_version 1.1;             proxy_set_header Upgrade $http_upgrade;             proxy_set_header Connection &quot;upgrade&quot;; &#125; <span class="hljs-meta"></span><span class="hljs-meta">#</span><span class="bash">最后别忘记重启nginx</span> sudo systemctl restart nginx</code></pre></div><ul><li><p>尝试访问 <a href="http://树莓派ip/aria2">http://树莓派ip/aria2</a> ，<strong>设置参数</strong></p></li><li><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619153219.png" alt="wNbqhBl7KWL6Jcx"></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210619153228.png" alt="2o7a8c3qpFODP4Y"></p>]]></content>
    
    
    <categories>
      
      <category>树莓派</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux系统</tag>
      
      <tag>树莓派</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 并发编程笔记</title>
    <link href="/2021/06/18/PythonConcurrent/"/>
    <url>/2021/06/18/PythonConcurrent/</url>
    
    <content type="html"><![CDATA[<h1 id="Python-并发编程"><a href="#Python-并发编程" class="headerlink" title="Python 并发编程"></a>Python 并发编程</h1><h2 id="各并发技术"><a href="#各并发技术" class="headerlink" title="各并发技术"></a>各并发技术</h2><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210630200927.png"></p><h2 id="1-多线程-Thread（threading）"><a href="#1-多线程-Thread（threading）" class="headerlink" title="1. 多线程 Thread（threading）"></a>1. 多线程 Thread（threading）</h2><blockquote><ul><li><p>优点：<strong>相比进程，更轻量级、占用资源少.</strong></p></li><li><p>缺点：</p><ul><li>相比进程：多线程只能<strong>并发执行</strong>，<strong>不能利用多CPU（GIL）</strong></li><li>相比协程：启动数目<strong>有限制</strong>，占用内存资源，<strong>有线程切换开销</strong></li></ul></li><li><p>适用于：<strong>IO密集型计算</strong>、同时运行的任务数目要求不多</p></li></ul></blockquote><h3 id="多进程普通写法"><a href="#多进程普通写法" class="headerlink" title="多进程普通写法"></a>多进程普通写法</h3><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> threadingthreads = [] <span class="hljs-comment"># 线程列表</span><span class="hljs-comment"># 为每个url创建一个线程对象并加入线程列表里</span><span class="hljs-comment"># target: 函数名 args: 函数参数(元组格式)</span><span class="hljs-keyword">for</span> url <span class="hljs-keyword">in</span> urls:    threads.append(        threading.Thread(target=craw, args=(url,))    )<span class="hljs-comment"># 遍历线程列表启动线程</span><span class="hljs-keyword">for</span> thread <span class="hljs-keyword">in</span> threads:    thread.start()<span class="hljs-comment"># 等待线程结束再执行主线程</span><span class="hljs-keyword">for</span> thread <span class="hljs-keyword">in</span> threads:    thread.join()</code></pre></div><h3 id="利用线程池技术"><a href="#利用线程池技术" class="headerlink" title="利用线程池技术"></a>利用线程池技术</h3><blockquote><p>好处:新建线程系统需要<strong>分配资源</strong>、终止线程系统需要回收资源,线程池可以<strong>重用线程</strong>，则可以<strong>减去新建/终止的开销</strong></p></blockquote><ul><li><p>原理</p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210630204323.png"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210630204353.png"></p></li><li><p>代码实现</p><ol><li><strong>map方式提交</strong></li></ol><blockquote><p><code>map</code> 的结果和入参是顺序对应的,且map传入函数参数时要传入<strong>参数列表</strong></p></blockquote><blockquote><p><a href="https://www.runoob.com/python3/python3-func-zip.html">Python Zip()函数</a></p><blockquote><p><strong>zip()</strong> 函数用于将<strong>可迭代的对象作为参数</strong>，将对象中<strong>对应的元素打包成一个个元组</strong>，然后返回由这些<strong>元组组成的对象</strong>，这样做的好处是<strong>节约了不少的内存</strong>。</p><p>我们可以使用 <code>list()</code> 转换来输出列表。</p><p><strong>元素个数与最短的列表一致</strong>.</p><p>如果各个迭代器的元素个数不一致，则返回列表长度与最短的对象相同，利用 ***** 号操作符，可以将元组解压为列表。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210630211154.png" alt="&quot;形象&quot;"></p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> concurrent.futures <span class="hljs-keyword">import</span> ThreadPoolExecutor<span class="hljs-comment"># 可以设置线程数</span><span class="hljs-keyword">with</span> ThreadPoolExecutor(max_workers=<span class="hljs-number">10</span>) <span class="hljs-keyword">as</span> pool:    <span class="hljs-comment"># map 向线程池提交任务,传入方法名,以及参数列表</span>    htmls = pool.<span class="hljs-built_in">map</span>(craw, urls)    <span class="hljs-comment"># htmls urls(列表) 都是可迭代对象,可以用 zip 函数将他们打包成一个元组</span>    htmls = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">zip</span>(urls, htmls))    <span class="hljs-comment"># 结果和入参是顺序对应的</span>    <span class="hljs-keyword">for</span> url, html <span class="hljs-keyword">in</span> htmls:        <span class="hljs-built_in">print</span>(url, <span class="hljs-built_in">len</span>(html))</code></pre></div><ol start="2"><li><strong>submit 方式提交</strong></li></ol><blockquote><p><strong>future模式，更强大</strong>,注意如果用<code>as_completed</code>顺序是不定的</p></blockquote><blockquote><p><a href="https://www.runoob.com/python3/python3-att-dictionary-items.html">Python3 字典 items方法</a></p><blockquote><p>Python 字典 items() 方法以列表<strong>返回视图对象</strong>，是一个<strong>可遍历的 key/value 对</strong>。</p></blockquote><p>将: <code>&#123;&#39;Name&#39;: &#39;Runoob&#39;, &#39;Age&#39;: 7&#125;</code> 变为: <code>[(&#39;Age&#39;, 7), (&#39;Name&#39;, &#39;Runoob&#39;)]</code></p></blockquote><ul><li><p><strong>方法一</strong></p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> concurrent.futures <span class="hljs-keyword">import</span> ThreadPoolExecutor,as_completed<span class="hljs-keyword">with</span> ThreadPoolExecutor() <span class="hljs-keyword">as</span> pool:    <span class="hljs-comment"># 利用线程列表启动</span>    futures=[        pool.submit(craw,url)        <span class="hljs-keyword">for</span> url <span class="hljs-keyword">in</span> urls    ]    <span class="hljs-comment"># 通过遍历线程列表取出结果(要等所有结果运行完才有)</span>    <span class="hljs-keyword">for</span> future <span class="hljs-keyword">in</span> futures:        <span class="hljs-built_in">print</span>(future.result())            <span class="hljs-comment"># as_completed 不需要等待所有结果运行完才输出结果</span>    <span class="hljs-comment"># 一旦有结果运行完就会输出</span>    <span class="hljs-keyword">for</span> future <span class="hljs-keyword">in</span> as_completed(futures):        <span class="hljs-built_in">print</span>(future.result())</code></pre></div></li><li><p><strong>方法二</strong></p><blockquote><p><strong>适合需要与某一个量一一对应建立联系</strong></p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> concurrent.futures <span class="hljs-keyword">import</span> ThreadPoolExecutor<span class="hljs-keyword">with</span> ThreadPoolExecutor() <span class="hljs-keyword">as</span> pool:    futures = &#123;&#125;  <span class="hljs-comment"># 字典,便于一一对应</span>    <span class="hljs-comment"># htmls格式: ([],[],[],..)</span>    <span class="hljs-comment"># 遍历元组的每个列表,把列表中的两个参数赋值给 url,html</span>    <span class="hljs-keyword">for</span> url, html <span class="hljs-keyword">in</span> htmls:        <span class="hljs-comment"># submwit 提交,传入方法名和单个参数</span>        future = pool.submit(parse, html)        <span class="hljs-comment"># 使用字典 将 future 对象与链接一一对应</span>        futures[future] = url        <span class="hljs-comment"># 将转化为元组的字典遍历出来</span>    <span class="hljs-comment"># future-&gt;线程对象 url-&gt;线程对应的url</span>    <span class="hljs-keyword">for</span> future,url <span class="hljs-keyword">in</span> futures.items():        <span class="hljs-comment"># 线程对象通过 result 取出运行结果</span>        <span class="hljs-built_in">print</span>(url,future.result())</code></pre></div></li></ul></li></ul><h3 id="生产者消费者模型-Producer-Consumer"><a href="#生产者消费者模型-Producer-Consumer" class="headerlink" title="生产者消费者模型  ( Producer, Consumer)"></a>生产者消费者模型  ( Producer, Consumer)</h3><ol><li><p>多组件的<code>Pipeline</code>技术架构</p><blockquote><p>复杂的事情一般都不会一下子做完，而是会分<strong>很多中间步骤一步步完成</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210703065209.png"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210703065255.png"></p></li><li><p><strong>多线程数据通信的<code>queue.Queue</code></strong></p><blockquote><p><code>queue.Queue</code>可以用于<strong>多线程之间</strong>的、<strong>线程安全</strong>的数据通信</p><p><strong>多个线程</strong> 可以 <strong>同时</strong> 读取 <strong>同一个队列</strong> </p></blockquote><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 1、导入类库</span><span class="hljs-keyword">import</span> queue<span class="hljs-comment"># 2、创建Queue</span>q = queue.Queue()<span class="hljs-comment"># 3、添加元素</span>q.put(item)<span class="hljs-comment"># 4、获取元素</span>item = q.get()<span class="hljs-comment"># 5、查询状态</span><span class="hljs-comment"># 查看元素的多少</span>q.qsize()<span class="hljs-comment"># 判断是否为空</span>q.empty()<span class="hljs-comment"># 判断是否已满</span>q.full()</code></pre></div></li><li><p>实例:</p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> threading<span class="hljs-keyword">import</span> queue<span class="hljs-keyword">import</span> random,time<span class="hljs-comment"># 传入 url 队列 和 Html 队列</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">do_craw</span>(<span class="hljs-params">url_queue: queue.Queue, html_queue: queue.Queue</span>):</span>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:        <span class="hljs-comment"># 从 Url 队列里获取一个链接</span>        url = url_queue.get()        html = blog_spider.craw(url)        <span class="hljs-comment"># 将获取到的 html 内容放入 html 队列</span>        html_queue.put(html)        <span class="hljs-comment"># current_thead: 当前线程 .name: 获取线程的名字</span>        <span class="hljs-built_in">print</span>(threading.current_thread().name, <span class="hljs-string">f&quot;craw <span class="hljs-subst">&#123;url&#125;</span>&quot;</span>,              <span class="hljs-string">&quot;url_queue.size=&quot;</span>, url_queue.qsize())        time.sleep(random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>))<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">do_parse</span>(<span class="hljs-params">html_queue: queue.Queue, fout</span>):</span>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:        html = html_queue.get()        results = blog_spider.parse(html)        <span class="hljs-keyword">for</span> result <span class="hljs-keyword">in</span> results:            fout.write(<span class="hljs-built_in">str</span>(result) + <span class="hljs-string">&quot;\n&quot;</span>)        <span class="hljs-built_in">print</span>(threading.current_thread().name, <span class="hljs-string">f&quot;results.size&quot;</span>, <span class="hljs-built_in">len</span>(results),              <span class="hljs-string">&quot;html_queue.size=&quot;</span>, html_queue.qsize())        time.sleep(random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>))<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:    url_queue = queue.Queue() <span class="hljs-comment"># 链接队列</span>    html_queue = queue.Queue() <span class="hljs-comment"># Html 文件队列</span>    <span class="hljs-comment"># 将所有链接添加到链接队列里面</span>    <span class="hljs-keyword">for</span> url <span class="hljs-keyword">in</span> urls:        url_queue.put(url)    <span class="hljs-comment"># 创建链接访问线程</span>    <span class="hljs-keyword">for</span> idx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):        t = threading.Thread(target=do_craw, args=(url_queue, html_queue),                             name=<span class="hljs-string">f&quot;craw<span class="hljs-subst">&#123;idx&#125;</span>&quot;</span>)        t.start()    <span class="hljs-comment"># 创建 HTML 解析线程</span>    fout = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;02.data.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>)    <span class="hljs-keyword">for</span> idx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>):        <span class="hljs-comment"># name: 设置线程的名字.</span>        t = threading.Thread(target=do_parse, args=(html_queue, fout),                             name=<span class="hljs-string">f&quot;parse<span class="hljs-subst">&#123;idx&#125;</span>&quot;</span>)        t.start()</code></pre></div></li></ol><h2 id="2-多进程-MultiProcess"><a href="#2-多进程-MultiProcess" class="headerlink" title="2. 多进程 (MultiProcess)"></a>2. 多进程 (MultiProcess)</h2><h3 id="全局解释器锁-Python的大缺点"><a href="#全局解释器锁-Python的大缺点" class="headerlink" title="全局解释器锁 (Python的大缺点)"></a>全局解释器锁 (Python的大缺点)</h3><ol><li><strong>任何时刻仅有一个线程</strong>在执行。</li><li>在<strong>多核心处理器上</strong>，使用 GIL 的解释器也只允许同一时间执行一个线程</li><li>GIL目的：为了解决多线程之间<strong>数据完整性</strong>和状态同步问题</li><li>GIL带来的<strong>问题</strong></li></ol><ul><li>即使使用了多线程，同一时刻也只有<strong>单个线程使用CPU</strong>，导致多核CPU的浪费</li><li>GIL只会对<strong>CPU密集型</strong>的程序产生影响</li><li>如果程序主要是在做<strong>I/O操作</strong>，比如<strong>处理网络连接</strong>，那么<strong>多线程技术</strong>常常是一个明智的选择</li></ul><ol start="5"><li><strong>规避GIL</strong>的方法</li></ol><ul><li>规避方法2： 使用<code>multiprocessing</code>多进程，对CPU密集型计算，单独启动子进程解释器去执行</li><li>规避方法2： ﻿将计算密集型的任务转移到<strong>C语言</strong>中，因为C语言比Python快得多，注意要在C语言中自己释放GIL</li></ul><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210701000441.png"></p><blockquote><h3 id="多进程适用于-CPU密集型计算"><a href="#多进程适用于-CPU密集型计算" class="headerlink" title="多进程适用于 CPU密集型计算"></a>多进程适用于 CPU密集型计算</h3><p>多进程的API与 <strong>多线程的实现十分类似</strong></p></blockquote><table><thead><tr><th align="left">语法条目</th><th align="center">多线程</th><th align="center">多进程</th></tr></thead><tbody><tr><td align="left">引入模块</td><td align="center">from threading import Thread</td><td align="center">from multiprocessing import Process</td></tr><tr><td align="left">新建  启动  等待结束</td><td align="center">t=Thread(target=func, args=(100, ))  t.start()  t.join()</td><td align="center">p = Process(target=f, args=(‘bob’,))  p.start()  p.join()</td></tr><tr><td align="left">数据通信</td><td align="center">import queue  q = queue.Queue()  q.put(item)  item = q.get()</td><td align="center">from multiprocessing import Queue  q = Queue()  q.put([42, None, ‘hello’])  item = q.get()</td></tr><tr><td align="left">线程安全加锁</td><td align="center">from threading import Lock  lock = Lock()  with lock:      # do something</td><td align="center">from multiprocessing import Lock  lock = Lock()  with lock:      # do something</td></tr><tr><td align="left">池化技术</td><td align="center">from concurrent.futures import  ThreadPoolExecutor    with ThreadPoolExecutor() as executor:      # 方法1      results = executor.map(func, [1,2,3])        # 方法2      future = executor.submit(func, 1)      result = future.result()</td><td align="center">from concurrent.futures import ProcessPoolExecutor    with ProcessPoolExecutor() as executor:      # 方法1      results = executor.map(func, [1,2,3])        # 方法2      future = executor.submit(func, 1)      result = future.result()</td></tr></tbody></table><h3 id="利用进程池技术实现多进程"><a href="#利用进程池技术实现多进程" class="headerlink" title="利用进程池技术实现多进程"></a><strong>利用进程池技术实现多进程</strong></h3><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> concurrent.futures <span class="hljs-keyword">import</span> ProcessPoolExecutor<span class="hljs-keyword">import</span> time<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test</span>(<span class="hljs-params">lover</span>):</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;我喜欢:&quot;</span>, lover)    time.sleep(<span class="hljs-number">1</span>)<span class="hljs-comment"># 任何池化技术都需要写程序入口</span><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:    <span class="hljs-comment"># 喜欢的人列表</span>    lovers = [<span class="hljs-string">&quot;颖怡&quot;</span>, <span class="hljs-string">&quot;菲菲&quot;</span>, <span class="hljs-string">&quot;詹天佑&quot;</span>]    start_time = time.time()    <span class="hljs-comment"># 1. 使用 map 方式提交</span>    <span class="hljs-keyword">with</span> ProcessPoolExecutor(max_workers=<span class="hljs-number">10</span>) <span class="hljs-keyword">as</span> pool:        <span class="hljs-comment"># map 方式提交进程池需要传入函数名和多参数元组</span>        pool.<span class="hljs-built_in">map</span>(test, lovers)    <span class="hljs-comment"># 2. 使用 submit 方式提交</span>    <span class="hljs-keyword">with</span> ProcessPoolExecutor() <span class="hljs-keyword">as</span> pool:        <span class="hljs-comment"># 利用进程列表启动</span>        futures=[            pool.submit(test,lover)            <span class="hljs-keyword">for</span> lover <span class="hljs-keyword">in</span> lovers        ]    end_time = time.time()    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;cost Time:&quot;</span>, end_time-start_time)</code></pre></div><h2 id="3-并发锁-Concurrent-Lock"><a href="#3-并发锁-Concurrent-Lock" class="headerlink" title="3. 并发锁 (Concurrent Lock)"></a>3. 并发锁 (Concurrent Lock)</h2><blockquote><p><strong>线程安全</strong>指某个函数、函数库在<strong>多线程环境</strong>中被调用时，能够正确地处理多个线程之间的<strong>共享变量</strong>，使程序功能正确完成。</p><p>由于<strong>线程的执行随时会发生切换</strong>，就造成了不可预料的结果，出现<strong>线程不安全</strong>(简单来说就是程序串行)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210702130844.png"></p><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> threading<span class="hljs-comment"># 实例化锁对象</span>lock = threading.Lock()<span class="hljs-comment"># 上锁</span>lock.locked()<span class="hljs-comment"># 释放锁</span>lock.release()</code></pre></div><h3 id="用法1-try-finally-模式"><a href="#用法1-try-finally-模式" class="headerlink" title="用法1:  try-finally 模式"></a>用法1:  <code>try-finally</code> 模式</h3><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> threadinglock = threading.Lock()lock.acquire()<span class="hljs-keyword">try</span>:    <span class="hljs-comment"># do something</span><span class="hljs-keyword">finally</span>:    lock.release()</code></pre></div><h3 id="用法2-with-模式-推荐这种方式"><a href="#用法2-with-模式-推荐这种方式" class="headerlink" title="用法2: with 模式  (推荐这种方式)"></a>用法2: <code>with</code> 模式  <strong>(推荐这种方式)</strong></h3><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> threadinglock = threading.Lock()<span class="hljs-keyword">with</span> lock:    <span class="hljs-comment"># do something</span></code></pre></div><h3 id="什么时候需要上锁"><a href="#什么时候需要上锁" class="headerlink" title="什么时候需要上锁"></a>什么时候需要上锁</h3><blockquote><p> <strong>多人读,不需要|一读一写要加|多人写要加</strong></p></blockquote><p>只是操作<strong>共享变量</strong>部分的代码要<strong>上锁</strong>,而不是多线程中所有代码都要上锁,并<strong>不影响多线程</strong>的执行效果.</p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210702143102.png" alt="image-20210702143100587"></p><h2 id="4-异步协程"><a href="#4-异步协程" class="headerlink" title="4. 异步协程"></a>4. 异步协程</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><blockquote><p>同步：执行 IO 操作时，<strong>必须等待执行完成才得到返回结果</strong>。<br>异步：执行 IO 操作时，<strong>不必等待执行就能得到返回结果</strong>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210702150837.jpeg"></p><p><img src="https://cdn.jsdelivr.net/gh/AdminWhaleFall/Pic@master/img/20210702143833.png" alt="image-20210702143832079"></p><blockquote><p>注意：要用在<strong>异步IO编程中</strong>,依赖的<strong>库必须支持异步IO特性.</strong></p><p>爬虫引用中：<code>requests</code> 不支持异步|需要用 <code>aiohttp</code></p></blockquote><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><h4 id="1-什么是协程、异步"><a href="#1-什么是协程、异步" class="headerlink" title="1. 什么是协程、异步"></a>1. 什么是协程、异步</h4><p>举个例子：假设有1个洗衣房，里面有10台洗衣机，有一个洗衣工在负责这10台洗衣机。那么<strong>洗衣房就相当于1个进程</strong>，洗衣工就相当<strong>1个线程</strong>。如果有10个洗衣工，就相当于<strong>10个线程</strong>，<strong>1个进程是可以开多线程的</strong>。这就是多线程！</p><p>那么协程呢？先不急。大家都知道，洗衣机洗衣服是<strong>需要等待时间</strong>的，如果10个洗衣工，1人负责1台洗衣机，这样效率肯定会提高，但是不觉得<strong>浪费资源</strong>吗？明明1 个人能做的事，却要10个人来做。只是把衣服放进去，打开开关，<strong>就没事做</strong>了，等衣服洗好再拿出来就可以了。就算很多人来洗衣服，<strong>1个人也足以应付了</strong>，开好第一台洗衣机，在等待的时候去<strong>开第二台洗衣机，再开第三台</strong>，……直到有衣服洗好了，就回来把衣服取出来，接着<strong>再取另一台</strong>的（哪台洗好先就取哪台，所以<strong>协程是无序的</strong>）。这就是计算机的协程！洗衣机就是<strong>执行的方法</strong>。</p><p>当你程序中方法需要等待时间的话，就可以用<strong>协程</strong>，<strong>效率高，消耗资源少。</strong></p><p><strong>洗衣房 ==&gt; 进程 | 洗衣工 ==&gt; 线程 | 洗衣机 ==&gt; 方法(函数)</strong></p><h4 id="2-async-await的使用"><a href="#2-async-await的使用" class="headerlink" title="2. async \ await的使用"></a>2. <code>async</code> \ <code>await</code>的使用</h4><p>正常的函数在执行时是<strong>不会中断</strong>的，所以你要写一个<strong>能够中断</strong>的函数，就需要添加<code>async</code>关键字。</p><p><code>async</code> 用来声明一个函数为异步函数，异步函数的特点是<strong>能在函数执行过程中挂起，去执行其他异步函数</strong>，等到<strong>挂起条件</strong>（假设挂起条件是sleep(5)）消失后，也就是5秒到了<strong>再回来执行</strong>。</p><p><code>await</code> 用来用来声明<strong>程序挂起</strong>，比如异步程序执行到<strong>某一步时需要等待的时间很长，就将此挂起</strong>，去<strong>执行其他的异步程序</strong>。<code>await</code> 后面只能跟 <strong>异步函数</strong> 或有<code>__await__</code>属性的对象，因为<strong>异步程序与一般程序不同</strong>。</p><p>假设有两个异步函数<code>async a，async b</code>，a中的某一步有<code>await</code>，当程序碰到关键字<code>await b()</code>后，异步程序挂起后去执行另一个异步b程序，就是从<strong>函数内部跳出去执行其他函数</strong>，<strong>当挂起条件消失后，不管b是否执行完，要马上从b程序中跳出来</strong>，<strong>回到原程序执行原来</strong>的操作。如果await后面跟的<strong>b函数不是异步函数</strong>，那么操作就<strong>只能等b执行完再返回</strong>，无法在<strong>b执行的过程中返回</strong>。如果要在<strong>b执行完</strong>才返回，也就<strong>不需要用await关键字了</strong>，直接<strong>调用b函数</strong>就行。所以这就需要<code>await</code>后面跟的是<strong>异步函数</strong>了。在一个异步函数中，可以<strong>不止一次挂起</strong>，也就是可以用多个<code>await</code>。</p><h3 id="基本实现"><a href="#基本实现" class="headerlink" title="基本实现:"></a><strong>基本实现:</strong></h3><blockquote><ul><li><ol><li>在普通的函数前面加 <strong>async</strong> 关键字；</li></ol></li><li><ol start="2"><li><code>await</code> 表示在这个地方<strong>等待子函数执行完成</strong>，再往下执行。（在并发操作中，把程序控制权交给主程序，让他分配其他协程执行。） <code>await</code> 只能在带有 <code>async</code> 关键字的函数中运行。</li></ol></li></ul></blockquote><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 异步io简单实现</span><span class="hljs-keyword">import</span> asyncio<span class="hljs-keyword">import</span> time<span class="hljs-comment"># 获取超级事件循环</span><span class="hljs-comment"># event:事件 loop:环</span>loop = asyncio.get_event_loop()urls = [    <span class="hljs-string">f&quot;https://skyxinye.xyz/#<span class="hljs-subst">&#123;page&#125;</span>&quot;</span>    <span class="hljs-keyword">for</span> page <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">99</span>)]<span class="hljs-comment"># 定义协程函数</span><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">myfunc</span>(<span class="hljs-params">url</span>):</span>    <span class="hljs-keyword">await</span> time.sleep(<span class="hljs-number">2</span>) <span class="hljs-comment"># 这样写不行,因为 time.sleep 不是异步函数,不能中途跳出执行另一个协程.</span>    <span class="hljs-keyword">await</span> asyncio.sleep(<span class="hljs-number">2</span>) <span class="hljs-comment"># 用协程函数.</span><span class="hljs-comment"># 创建 task 列表</span><span class="hljs-comment"># create:创造</span>tasks = [    <span class="hljs-comment"># 在超级循环中创造多个任务,并设置等待任务完成.(如果协程函数中没有同步操作的话就不用设置)</span>    <span class="hljs-comment"># 任务没有运行</span>    loop.create_task(asyncio.wait(myfunc(url)))    <span class="hljs-keyword">for</span> url <span class="hljs-keyword">in</span> urls]<span class="hljs-comment"># 执行异步事件列表,运行直到完成,如果是协程列表就要设置等待事件完成.</span>loop.run_until_complete(asyncio.wait(tasks))</code></pre></div><h4 id="利用-aiohttp-模块发送网络请求"><a href="#利用-aiohttp-模块发送网络请求" class="headerlink" title="利用 aiohttp 模块发送网络请求"></a>利用 <code>aiohttp</code> 模块发送网络请求</h4><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 异步模块 aiohttp 使用</span><span class="hljs-keyword">import</span> asyncio<span class="hljs-keyword">import</span> aiohttp<span class="hljs-comment"># Http请求 协程函数</span><span class="hljs-comment"># GET</span><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">async_get</span>(<span class="hljs-params">url</span>):</span>    <span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-string">    aiohttp:发送http请求</span><span class="hljs-string">    1.创建一个ClientSession对象</span><span class="hljs-string">    2.通过ClientSession对象去发送请求（get, post, delete等）</span><span class="hljs-string">    3.await 异步等待返回结果</span><span class="hljs-string">    &quot;&quot;&quot;</span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Get Url:&quot;</span>, url)    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> aiohttp.ClientSession() <span class="hljs-keyword">as</span> se:        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> se.get(url) <span class="hljs-keyword">as</span> resp:            result = <span class="hljs-keyword">await</span> resp.text()            <span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(result))urls = [    <span class="hljs-string">f&quot;https://skyxinye.xyz/#<span class="hljs-subst">&#123;page&#125;</span>&quot;</span>    <span class="hljs-keyword">for</span> page <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">99999</span>)]<span class="hljs-comment"># 超级循环</span>loop = asyncio.get_event_loop()<span class="hljs-comment"># 事件列表</span>tasks=[    loop.create_task(async_get(url))    <span class="hljs-keyword">for</span> url <span class="hljs-keyword">in</span> urls ]<span class="hljs-comment"># 用 wait 方法遍历事件列表.协程列表需要设置等待运行完成</span>loop.run_until_complete(asyncio.wait(tasks))<span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-string">    异步协程不用事件列表的另一种实现方法</span><span class="hljs-string">    aiohttp:发送POST请求</span><span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-comment"># POST</span><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span>    data = &#123;<span class="hljs-string">&#x27;key1&#x27;</span>: <span class="hljs-string">&#x27;value1&#x27;</span>, <span class="hljs-string">&#x27;key2&#x27;</span>: <span class="hljs-string">&#x27;value2&#x27;</span>&#125;    url = <span class="hljs-string">&#x27;http://httpbin.org/post&#x27;</span>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> aiohttp.ClientSession() <span class="hljs-keyword">as</span> session:        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> session.post(url, data=data) <span class="hljs-keyword">as</span> res:            <span class="hljs-built_in">print</span>(res.status)            <span class="hljs-built_in">print</span>(<span class="hljs-keyword">await</span> res.text())loop = asyncio.get_event_loop()<span class="hljs-comment"># 如果是单个协程就不需要设置 asyncio.wait()</span>task = loop.create_task(main())loop.run_until_complete(task)</code></pre></div><h4 id="利用-aiofile-异步操作文件"><a href="#利用-aiofile-异步操作文件" class="headerlink" title="利用 aiofile 异步操作文件"></a>利用 <code>aiofile</code> 异步操作文件</h4><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> aiofiles<span class="hljs-keyword">import</span> asyncio<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">write</span>():</span>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> aiofiles.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;test.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&quot;utf8&quot;</span>) <span class="hljs-keyword">as</span> fp:        <span class="hljs-keyword">await</span> fp.write(<span class="hljs-string">&quot;异步写入文件&quot;</span>)        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;文件写入成功&quot;</span>)<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">read</span>():</span>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> aiofiles.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;test.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,encoding=<span class="hljs-string">&quot;utf8&quot;</span>) <span class="hljs-keyword">as</span> fp:        content = <span class="hljs-keyword">await</span> fp.read()        <span class="hljs-built_in">print</span>(content)<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">read2_demo</span>():</span>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> aiofiles.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;text.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,encoding=<span class="hljs-string">&quot;utf-8&quot;</span>) <span class="hljs-keyword">as</span> fp:        <span class="hljs-comment"># 读取每行</span>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> fp:            <span class="hljs-built_in">print</span>(line)<span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&quot;__main__&quot;</span>:    asyncio.run(write())</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>抑郁症用药大全对照表</title>
    <link href="/2021/06/18/medicineSimple/"/>
    <url>/2021/06/18/medicineSimple/</url>
    
    <content type="html"><![CDATA[<h1 id="抑郁症常用药物对照表"><a href="#抑郁症常用药物对照表" class="headerlink" title="抑郁症常用药物对照表"></a>抑郁症常用药物对照表</h1><blockquote><h2 id="利用-Python-爬取-项目地址-AdminWhaleFall-MyCuteGirl"><a href="#利用-Python-爬取-项目地址-AdminWhaleFall-MyCuteGirl" class="headerlink" title="利用 Python 爬取,项目地址:AdminWhaleFall/MyCuteGirl/"></a>利用 Python 爬取,项目地址:<a href="https://github.com/AdminWhaleFall/MyCuteGirl/">AdminWhaleFall/MyCuteGirl/</a></h2></blockquote><table><thead><tr><th align="center">药物名称(俗名)</th><th>主治</th></tr></thead><tbody><tr><td align="center">圣·约翰草提取物片(路优泰)</td><td>抑郁症，焦虑和/或烦躁不安。</td></tr><tr><td align="center">马来酸氟伏沙明片(兰释)</td><td>抑郁发作。强迫症(OCD)。</td></tr><tr><td align="center">盐酸氟西汀分散片(百优解)</td><td>抑郁症强迫症(OCD)神经性贪食症：作为心理治疗的辅助用药，以减少贪食和导泻行为 中度至重度抑郁发作：8岁及以上的儿童和青少年强迫症：7岁及以上的儿童和青少年</td></tr><tr><td align="center">劳拉西泮片(罗拉)</td><td>适用于焦虑障碍的治疗或用于缓解焦虑症状以及与抑郁症状相关的焦虑的短期治疗。与日常生活压力相关的焦虑或紧张，通常不需要抗焦虑药的治疗。劳拉西泮长期应用的效果即应用4个月以上的效果还未经系统的临床研究评估。医师应定期重新评估该药对个体患者的有效性。</td></tr><tr><td align="center">阿戈美拉汀片(维度新)</td><td>治疗成人抑郁症。本品适用于成人。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>癫痫：部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。全身性发作：强直、阵挛、强直阵挛发作。三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期 预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经 痛以及疱疹后神经痛。预防或治疗躁狂-抑郁症；对锂或抗精神病药或抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。中枢性部分性尿崩症， 可单用或氯磺丙脲或氯贝丁酯等合用。酒精癖的戒断综合征。</td></tr><tr><td align="center">米氮平片(瑞美隆®)</td><td>抑郁症的发作</td></tr><tr><td align="center">盐酸度洛西汀肠溶胶囊(欣百达)</td><td>用于治疗抑郁症； 用于治疗广泛性焦虑障碍； 用于治疗慢性肌肉骨骼疼痛。</td></tr><tr><td align="center">氢溴酸西酞普兰片(氢溴酸西酞普兰片)</td><td>治疗抑郁症。</td></tr><tr><td align="center">噻奈普汀钠片(达体朗)</td><td>抑郁发作(即典型性)。</td></tr><tr><td align="center">圣·约翰草提取物片(路优泰)</td><td>抑郁症，焦虑和/或烦躁不安。</td></tr><tr><td align="center">马来酸氟伏沙明片(兰释)</td><td>抑郁发作。强迫症(OCD)。</td></tr><tr><td align="center">盐酸氟西汀分散片(百优解)</td><td>抑郁症强迫症(OCD)神经性贪食症：作为心理治疗的辅助用药，以减少贪食和导泻行为 中度至重度抑郁发作：8岁及以上的儿童和青少年强迫症：7岁及以上的儿童和青少年</td></tr><tr><td align="center">劳拉西泮片(罗拉)</td><td>适用于焦虑障碍的治疗或用于缓解焦虑症状以及与抑郁症状相关的焦虑的短期治疗。与日常生活压力相关的焦虑或紧张，通常不需要抗焦虑药的治疗。劳拉西泮长期应用的效果即应用4个月以上的效果还未经系统的临床研究评估。医师应定期重新评估该药对个体患者的有效性。</td></tr><tr><td align="center">阿戈美拉汀片(维度新)</td><td>治疗成人抑郁症。本品适用于成人。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>癫痫：部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。全身性发作：强直、阵挛、强直阵挛发作。三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期 预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经 痛以及疱疹后神经痛。预防或治疗躁狂-抑郁症；对锂或抗精神病药或抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。中枢性部分性尿崩症， 可单用或氯磺丙脲或氯贝丁酯等合用。酒精癖的戒断综合征。</td></tr><tr><td align="center">米氮平片(瑞美隆®)</td><td>抑郁症的发作</td></tr><tr><td align="center">盐酸度洛西汀肠溶胶囊(欣百达)</td><td>用于治疗抑郁症； 用于治疗广泛性焦虑障碍； 用于治疗慢性肌肉骨骼疼痛。</td></tr><tr><td align="center">氢溴酸西酞普兰片(氢溴酸西酞普兰片)</td><td>治疗抑郁症。</td></tr><tr><td align="center">噻奈普汀钠片(达体朗)</td><td>抑郁发作(即典型性)。</td></tr><tr><td align="center">盐酸阿米替林片(阿密替林)</td><td>用于治疗各种抑郁症，本品的镇静作用较强，主要用于治疗焦虑性或激动性抑郁症。</td></tr><tr><td align="center">盐酸帕罗西汀片(赛乐特)</td><td>本品用于治疗抑郁症、强迫症、伴有或不伴有广场恐怖的惊恐障碍、社交恐怖症/社交焦虑症。 疗效满意后，继续服用本品可防止抑郁症、惊恐障碍和强迫症的复发。</td></tr><tr><td align="center">盐酸文拉法辛缓释胶囊(怡诺思)</td><td>本品用于治疗抑郁症（包括伴有焦虑的抑郁症）及广泛性焦虑障碍。</td></tr><tr><td align="center">草酸艾司西酞普兰片(来士普)</td><td>治疗抑郁症。治疗伴有或不伴有广场恐怖症的惊恐障碍。</td></tr><tr><td align="center">盐酸舍曲林片(左洛复)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。 舍曲林也用于治疗强迫症。疗效满意后，继续服用舍曲林可有效地防止强迫症初始症状的复发。</td></tr><tr><td align="center">阿戈美拉汀片(维度新)</td><td>治疗成人抑郁症。br/&gt;br/&gt;本品适用于成人。</td></tr><tr><td align="center">盐酸度洛西汀肠溶胶囊(欣百达)</td><td>用于治疗抑郁症；br/&gt;br/&gt;用于治疗广泛性焦虑障碍。</td></tr><tr><td align="center">盐酸帕罗西汀肠溶缓释片(赛乐特)</td><td>用于治疗成人抑郁症。 在两项对符合美国精神障碍诊断统计手册（第四版）标准的抑郁症门诊患者进行的12周对照临床试验中，确立了盐酸帕罗西汀肠溶缓释片治疗抑郁症发作的有效性。尚未充分研究帕罗西汀对住院抑郁患者的抗抑郁作用。尚未在对照临床试验中对帕罗西汀肠溶缓释片超过12周的疗效安全性进行系统的评价；可是，在对照临床试验中证实了帕罗西汀速释片对抑郁症患者的长达1年维持治疗的有效性（参见【临床试验】）。 医生如果选择帕罗西汀肠溶缓释片进行长期治疗，应该定期对药物用于个体患者的长期有效性进行再评估。</td></tr><tr><td align="center">盐酸氟西汀胶囊(艾旭)</td><td>各种抑郁性精神障碍、包括轻性或重性抑郁症、双相情感性精神障碍的抑郁症，心因性抑郁及抑郁性神经症。</td></tr><tr><td align="center">米氮平口腔崩解片(瑞美隆®)</td><td>抑郁症的发作。对症状如快感缺乏，精神运动性抑制，睡眠欠佳（早醒），以及体重减轻均有疗效。也可用于其它症状如：对事物丧失兴趣，自杀念头以及情绪波动（早上好，晚上差）。本药在用药1-2周后起效。</td></tr><tr><td align="center">盐酸文拉法辛胶囊(博乐欣)</td><td>抑郁症。</td></tr><tr><td align="center">盐酸多塞平片(多虑平片)</td><td>用于治疗抑郁症及焦虑性神经症。</td></tr><tr><td align="center">氢溴酸西酞普兰片(氢溴酸西酞普兰片)</td><td>各种类型的抑郁症。</td></tr><tr><td align="center">米氮平片(瑞美隆)</td><td>用于抑郁症的治疗。</td></tr><tr><td align="center">盐酸帕罗西汀片(乐友)</td><td>治疗各种类型的抑郁症。包括伴有焦虑的抑郁症及反应性抑郁症。常见的抑郁症状：乏力，睡眠障碍，对日常活动缺乏兴趣和愉悦感，食欲减退。治疗强迫性神经症。常见的强迫症状：感受反复和持续的可引起明显焦虑的思想、冲动或想象，从而导致重复的行为或心理活动。治疗伴有或不伴有广场恐怖的惊恐障碍。常见的惊恐发作症状：心悸，出汗，气短，胸痛，恶心，麻刺感和濒死感。治疗社交恐怖症/社交焦虑症。常见的社交焦虑的症状：心悸，出汗，气短等。通常表现为继发于显著或持续的对一个或多个社交情景或表演场合的畏惧，从而导致回避。治疗疗效满意后，继续服用本品可防止抑郁症、惊恐障碍和强迫症的复发。</td></tr><tr><td align="center">米氮平片(派迪生)</td><td>抑郁症。</td></tr><tr><td align="center">氢溴酸西酞普兰片(喜普妙)</td><td>治疗抑郁症。</td></tr><tr><td align="center">草酸艾司西酞普兰片(百适可)</td><td>治疗抑郁症。治疗伴有或不伴有广场恐怖症的惊恐障碍。</td></tr><tr><td align="center">盐酸帕罗西汀片(舒坦罗)</td><td>本品用于治疗抑郁症、强迫症、伴有或不伴有广场恐怖的惊恐障碍、社交恐怖症/社交焦虑症。 疗效满意后，继续服用本品可防止抑郁症、惊恐障碍和强迫症的复发。</td></tr><tr><td align="center">盐酸度洛西汀肠溶片(奥思平)</td><td>用于治疗抑郁症。</td></tr><tr><td align="center">盐酸氟西汀胶囊(优克)</td><td>各种抑郁性精神障碍，包括轻性或重性抑郁症、双相情感性精神障碍的抑郁症，心因性抑郁及抑郁性神经症。 中度至重度抑郁发作：8岁及以上的儿童和青少年强迫症：7岁及以上的儿童和青少年</td></tr><tr><td align="center">盐酸氟西汀片(开克)</td><td>各种抑郁性精神障碍。包括轻性或重性抑郁症,双相情感性精神障碍的抑郁相,心因性抑郁及抑郁性神经症。 中度至重度抑郁发作：8岁及以上的儿童和青少年强迫症：7岁及以上的儿童和青少年</td></tr><tr><td align="center">吗氯贝胺片(吗氯贝胺片)</td><td>抑郁症。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>对淡漠、退缩、木僵、抑郁、幻觉和妄想症状的效果较好，适用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕</td></tr><tr><td align="center">盐酸氟西汀胶囊(奥麦伦)</td><td>各种抑郁性精神障碍、包括轻性或重性抑郁症、双相情感性精神障碍的抑郁症，心因性抑郁及抑郁性神经症。 中度至重度抑郁发作：8岁及以上的儿童和青少年强迫症：7岁及以上的儿童和青少年</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>对淡漠、退缩、木僵、抑郁、幻觉和妄想症状的效果较好，适用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">盐酸氟西汀胶囊(百优解)</td><td>抑郁症; 强迫症; 神经性贪食症：作为心理治疗的辅助用药，以减少贪食和导泻行为。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>对淡漠、退缩、木僵、抑郁、幻觉和妄想症状的效果较好，适用于精神分裂症单纯型、偏执型、紧张型及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其它用途有止呕。</td></tr><tr><td align="center">盐酸阿米替林片(盐酸阿米替林片)</td><td>用于治疗各种抑郁症，本品的镇静作用较强，主要用于治疗焦虑性或激动性抑郁症。</td></tr><tr><td align="center">盐酸舍曲林片(快五优)</td><td>盐酸舍曲林用于治疗抑郁症的相关症状.包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用盐酸舍曲林可有效地防止抑郁症的复发和再发。盐酸舍曲林也用于治疗强迫症，初始治疗有反应后，盐酸舍曲林在治疗强迫症二年的时间内、仍保持它的有效性，安全性和耐受性。</td></tr><tr><td align="center">盐酸氟西汀肠溶片(金开克)</td><td>本品适用于抑郁症缓解期，用于巩固期治疗和维持期疗效。</td></tr><tr><td align="center">盐酸马普替林片(路滴美)</td><td>抑郁症内源性抑郁症，迟发性抑郁症（更年期性抑郁症）。精神性抑郁症，反应性和神经性抑郁症、耗竭性抑郁症。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>复杂部分性发作 (亦称精神运动性发作或颞叶癫癎)、全身强直-阵孪性发作、上述两种混合性发作或其他部分性或全身性发作；对典型或不典型失神发作、肌阵孪或失神张力发作无效。三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。预防或治疗躁狂-抑郁症；对锂或抗精神病药或抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。对某些精神疾病包括精神分裂症性情感性疾病，顽固性精神分裂症及与边缘系统功能障碍有关的失控综合征。不宁腿综合征 (Ekbom综合征)，偏侧面肌痉孪。酒精癖的戒断综合征。</td></tr><tr><td align="center">盐酸多塞平片(盐酸多塞平片)</td><td>用于治疗抑郁症及焦虑性神经症。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>对淡漠、退缩、木僵、抑郁、幻觉和妄想症状的效果较好，适用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">甲磺酸瑞波西汀胶囊(甲磺酸瑞波西汀胶囊)</td><td>用于治疗成人抑郁症。</td></tr><tr><td align="center">氯普噻吨片(氯普噻吨片)</td><td>用于急性和慢性精神分裂症，适用于伴有精神运动性激越、焦虑、抑郁症状的精神障碍。</td></tr><tr><td align="center">盐酸甲氯芬酯胶囊(特维知®)</td><td>用于改善脑出血、脑手术、脑外伤、脑动脉硬化等引起的意识障碍。亦可用于老年性痴呆、慢性记忆障碍、抑郁症、小儿智力发育迟钝及小儿遗尿症等。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>1、癫痫：部分性发作：复杂部分性发作。全身性发作：强直、阵挛、强直阵挛发作。 2、三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。 3、预防或治疗躁狂-抑郁症；对锂或抗精神病药或抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。 4、中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。 5、酒精癖的戒断综合征。</td></tr><tr><td align="center">阿戈美拉汀片(阿美宁)</td><td>治疗成人抑郁症。本品适用于成人。</td></tr><tr><td align="center">盐酸米安色林片(盐酸米安色林片)</td><td>适用于药物治疗的各型抑郁症患者，能解除其抑郁症状。</td></tr><tr><td align="center">盐酸氯米帕明注射液(氯丙米嗪)</td><td>用于治疗严重抑郁症及难治性抑郁症。</td></tr><tr><td align="center">盐酸安非他酮片(乐孚亭)</td><td>用于治疗抑郁症。</td></tr><tr><td align="center">甲磺酸瑞波西汀片(甲磺酸瑞波西汀片)</td><td>用于治疗成人抑郁症。</td></tr><tr><td align="center">盐酸文拉法辛缓释片(盐酸文拉法辛缓释片)</td><td>本品适用于治疗各种类型抑郁症（包括伴有焦虑的抑郁症）及广泛性焦虑症。</td></tr><tr><td align="center">甲磺酸瑞波西汀片(佐乐辛)</td><td>用于治疗成人抑郁症。</td></tr><tr><td align="center">盐酸舍曲林片(唯他停)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。</td></tr><tr><td align="center">米氮平片(米尔宁)</td><td>用于抑郁症的治疗。</td></tr><tr><td align="center">氢溴酸西酞普兰片(迈克伟)</td><td>各种类型的抑郁症。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>1．癫痫： （1）部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。 （2）全身性发作：强直、阵挛、强直阵挛发作。 2．三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。3．预防或治疗躁狂-抑郁症：对锂或抗精神病药或抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。 4．中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。 5．酒精癖的戒断综合征。</td></tr><tr><td align="center">匹莫林片(匹莫林片)</td><td>用于治疗儿童多动症、轻度抑郁症及发作性睡病。也可用于遗传性过敏性皮炎。</td></tr><tr><td align="center">莫达非尼片(莫达非尼片)</td><td>抑郁症患者。特发性嗜睡或发作性睡眠症</td></tr><tr><td align="center">盐酸多塞平片(盐酸多塞平片)</td><td>用于治疗抑郁症及焦虑性神经症。</td></tr><tr><td align="center">盐酸多塞平片(盐酸多塞平片)</td><td>用于治疗抑郁症及焦虑性神经症。</td></tr><tr><td align="center">盐酸舍曲林片(乐元)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸舍曲林片(西同静)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸多塞平片(盐酸多塞平片)</td><td>用于治疗抑郁症及焦虑性神经症。</td></tr><tr><td align="center">马来酸氟伏沙明片(瑞必乐)</td><td>抑郁症及相关症状的治疗 ；强迫症症状的治疗。</td></tr><tr><td align="center">氯普噻吨片(氯普噻吨片)</td><td>用于急性和慢性精神分裂症，适用于伴有精神运动性激越、焦虑、抑郁症状的精神障碍。</td></tr><tr><td align="center">阿普唑仑胶囊(阿普唑仑胶囊)</td><td>催眠镇静药。适用于治疗焦虑症、抑郁症、失眠、恐惧。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">碳酸锂缓释片(碳酸锂缓释片)</td><td>主要治疗躁狂症，对躁狂和抑郁交替发作的双相情感性精神障碍有很好的治疗和预防复发作用，对反复发作的抑郁症也有预防发作作用。也用于治疗分裂-情感性精神病。</td></tr><tr><td align="center">碳酸锂片(碳酸锂片)</td><td>主要治疗躁狂症，对躁狂和抑郁交替发作的双相情感性精神障碍有很好的治疗和预防复发作用，对反复发作的抑郁症也有预防发作作用。也用于治疗分裂-情感性精神病。</td></tr><tr><td align="center">氯普噻吨片(氯普噻吨片)</td><td>用于急性和慢性精神分裂症，适用于伴有精神运动性激越、焦虑、抑郁症状的精神障碍。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>适用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>对淡漠、退缩、木僵、抑郁、幻觉和妄想症状的效果较好，适用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">碳酸锂片(碳酸锂片)</td><td>主要治疗躁狂症，对躁狂和抑郁交替发作的双相情感性精神障碍有很好的治疗和预防复发作用，对反复发作的抑郁症也有预防发作作用。也用于治疗分裂-情感性精神病。</td></tr><tr><td align="center">碳酸锂片(碳酸锂片)</td><td>主要治疗躁狂症，对躁狂和抑郁交替发作的双相情感性精神障碍有很好的治疗和预防复发作用，对反复发作的抑郁症也有预防发作作用。也用于治疗分裂-情感性精神病。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>（1）癫癎：部分性发作，复杂部分性发作，简单部分性发作和继发性全身发作，全身性发作，全身性发作，强直、阵挛、强直阵挛发作。 （2）三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。 （3）预防或治疗躁狂-抑郁症；对锂或抗精神病药、抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。 （4）中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。 （5）酒精癖的戒断综合征。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>癫痫：部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。 全身性发作：强直、阵挛、强直阵挛发作。 三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。 预防或治疗躁狂一抑郁症：对锂、抗精神病药、抗抑郁药无效的或不能耐受的躁狂一抑郁症，可单用或与锂盐和其它抗抑郁药合用。 中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。 酒精癖的戒断综合征。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>癫痫：部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。全身性发作：强直、阵挛、强直阵挛发作。 三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。 预防或治疗躁狂-抑郁症：对锂或抗精神病药或抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。 中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。 酒精癖的戒断综合征。</td></tr><tr><td align="center">卡马西平片(宁新宝)</td><td>（1）癫痫：部分性发作：复杂部分性发作、简单部分发作和继发性全身发作。全身性发作：强直、阵挛、强制性挛发作。 （2）三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。 （3）预防或治疗躁狂-抑郁症：对锂、抗精神病药、抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。 （4）中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。 （5）酒精癖的戒断综合征。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>1.癫痫。部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。全身性发作：强直、阵挛、强直阵挛发作。 2.三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。 3.预防或治疗躁狂-抑郁症：对锂、抗精神病药、抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。 4.中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。 5.酒精癖的戒断综合征。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>1.癫痫：部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。全身性发作：强直、阵挛、强直阵挛发作。 2.三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。 3.预防或治疗躁狂-抑郁症；对锂、抗精神病药、抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。 4.中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。 5.酒精癖的戒断综合征。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>对淡漠、退缩、木僵、抑郁、幻觉和妄想症状的效果较好，适用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">卡马西平胶囊(卡马西平胶囊)</td><td>复杂部分性发作 (亦称精神运动性发作或颞叶癫痫)、全身强直-阵孪性发作、上述两种混合性发作或其他部分性或全身性发作；对典型或不典型失神发作、肌阵孪或失神张力发作无效。三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。预防或治疗躁狂-抑郁症；对锂、抗精神病药、抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。 中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。 对某些精神疾病包括精神分裂症性情感性疾病，顽固性精神分裂症及与边缘系统功能障碍有关的失控综合征。 不宁腿综合症（Ekbom综合征），偏侧面肌痉孪。 酒精癖的戒断综合征。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>（1）复杂部分性发作（亦称精神运动性发作或颞叶癫痫）、全身强直-阵孪性发作、上述两种混合性发作或其他部分性或全身性发作；对典型或不典型失神发作、肌阵孪或失神张力发作无效。 （2）三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。 （3）预防或治疗躁狂-抑郁症；对锂、抗精神病药、抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。 （4）中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。 （5）对某些精神疾病包括精神分裂症性情感性疾病，顽固性精神分裂症及与边缘系统功能障碍有关的失控综合征。 （6）不宁腿综合征（Ekbom综合征），偏侧面肌痉孪。 （7）酒精癖的戒断综合征。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>复杂部分性发作（亦称精神运动性发作或颞叶癫癎）、全身强直-阵孪性发作、上述两种混合性发作或其他部分性或全身性发作；对典型或不典型失神发作、肌阵孪或失神张力发作无效。 三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。 预防或治疗躁狂-抑郁症；对锂或抗精神病药或抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。 中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。 对某些精神疾病包括精神分裂症性情感性疾病，顽固性精神分裂症及与边缘系统功能障碍有关的失控综合征。 不宁腿综合征（Ekbom综合征），偏侧面肌痉挛。 酒精癖的戒断综合征。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>复杂部分性发作（亦称精神运动性发作或颞叶癫痫）、全身强直-阵孪性发作、上述两种混合性发作或其他部分性或全身性发作；对典型或不典型失神发作、肌阵孪或失神张力发作无效。 三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。 预防或治疗躁狂-抑郁症：对锂、抗精神病药、抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。 中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。 对某些精神疾病包括精神分裂症性情感性疾病，顽固性精神分裂症及与边缘系统功能障碍有关的失控综合征。 不宁腿综合征（Ekbom综合征），偏侧面肌痉孪。 酒精癖的戒断综合征。</td></tr><tr><td align="center">盐酸舍曲林分散片(盐酸舍曲林分散片)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑，有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用治疗强迫症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。</td></tr><tr><td align="center">吗氯贝胺片(恬泰)</td><td>抑郁症。</td></tr><tr><td align="center">吗氯贝胺片(亚正)</td><td>抑郁症</td></tr><tr><td align="center">米氮平片(派迪生)</td><td>抑郁症。</td></tr><tr><td align="center">吗氯贝胺胶囊(贝苏)</td><td>抑郁症。</td></tr><tr><td align="center">盐酸氯米帕明注射液(盐酸氯米帕明注射液)</td><td>用于治疗严重抑郁症及难治性抑郁症。</td></tr><tr><td align="center">盐酸米那普仑片(盐酸米那普仑片)</td><td>治疗抑郁症。</td></tr><tr><td align="center">氢溴酸西酞普兰胶囊(多弗)</td><td>治疗抑郁症。</td></tr><tr><td align="center">氢溴酸西酞普兰片(一泰纳)</td><td>治疗抑郁症。</td></tr><tr><td align="center">氢溴酸西酞普兰口服溶液(氢溴酸西酞普兰口服溶液)</td><td>各种类型的抑郁症。</td></tr><tr><td align="center">盐酸安非他酮缓释片(盐酸安非他酮缓释片)</td><td>用于治疗抑郁症。</td></tr><tr><td align="center">盐酸安非他酮片(盐酸安非他酮片)</td><td>用于治疗抑郁症。</td></tr><tr><td align="center">氢溴酸西酞普兰片(望悠)</td><td>各种类型的抑郁症。</td></tr><tr><td align="center">氢溴酸西酞普兰片(氢溴酸西酞普兰片)</td><td>各种类型的抑郁症。</td></tr><tr><td align="center">盐酸安非他酮缓释片(盐酸安非他酮缓释片)</td><td>用于治疗抑郁症。</td></tr><tr><td align="center">盐酸安非他酮缓释片(盐酸安非他酮缓释片)</td><td>用于治疗抑郁症。</td></tr><tr><td align="center">氢溴酸西酞普兰片(优乐喜)</td><td>各种类型的抑郁症。</td></tr><tr><td align="center">氢溴酸西酞普兰片(易特安)</td><td>各种类型的抑郁症。</td></tr><tr><td align="center">盐酸氟西汀胶囊(聚立能)</td><td>用于各种抑郁症的治疗。</td></tr><tr><td align="center">盐酸安非他酮缓释片(宏发)</td><td>用于治疗抑郁症。</td></tr><tr><td align="center">盐酸安非他酮片(盐酸安非他酮片)</td><td>用于治疗抑郁症。</td></tr><tr><td align="center">盐酸度洛西汀肠溶胶囊(奥思平)</td><td>用于治疗抑郁症。</td></tr><tr><td align="center">氢溴酸西酞普兰口服溶液(氢溴酸西酞普兰口服溶液)</td><td>各种类型的抑郁症。</td></tr><tr><td align="center">米氮平片(米尔宁®)</td><td>用于治疗抑郁症。</td></tr><tr><td align="center">氢溴酸西酞普兰片(望悠)</td><td>各种类型的抑郁症。</td></tr><tr><td align="center">氢溴酸西酞普兰片(氢溴酸西酞普兰片)</td><td>各种类型的抑郁症。</td></tr><tr><td align="center">米氮平片(米氮平片)</td><td>用于抑郁症的治疗。</td></tr><tr><td align="center">草酸艾司西酞普兰(草酸艾司西酞普兰)</td><td>治疗抑郁障碍</td></tr><tr><td align="center">盐酸安非他酮缓释片(盐酸安非他酮缓释片)</td><td>用于治疗抑郁症。</td></tr><tr><td align="center">氢溴酸西酞普兰片(特林那)</td><td>各种类型的抑郁症。</td></tr><tr><td align="center">盐酸度洛西汀肠溶胶囊(奥思平)</td><td>用于治疗抑郁症。</td></tr><tr><td align="center">甲磺酸瑞波西汀片(叶洛抒)</td><td>用于治疗成人抑郁症。</td></tr><tr><td align="center">噻奈普汀钠片(达体朗)</td><td>抑郁发作（即典型性）</td></tr><tr><td align="center">盐酸舍曲林片(盐酸舍曲林片)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。 舍曲林也用于治疗强迫症。疗效满意后，继续服用舍曲林可有效地防止强迫症初始症状的复发。</td></tr><tr><td align="center">盐酸文拉法辛胶囊(盐酸文拉法辛胶囊)</td><td>适用于各种类型抑郁症。</td></tr><tr><td align="center">盐酸文拉法辛胶囊(盐酸文拉法辛胶囊)</td><td>适用于各种类型抑郁症。</td></tr><tr><td align="center">盐酸文拉法辛胶囊(盐酸文拉法辛胶囊)</td><td>适用于各种类型抑郁症。</td></tr><tr><td align="center">噻奈普汀片(达体朗)</td><td>抑郁发作(即典型性)。</td></tr><tr><td align="center">盐酸文拉法辛胶囊(盐酸文拉法辛胶囊)</td><td>适用于治疗各种类型抑郁症。</td></tr><tr><td align="center">盐酸文拉法辛胶囊(盐酸文拉法辛胶囊)</td><td>适用于各种类型抑郁症</td></tr><tr><td align="center">盐酸文拉法辛胶囊(盐酸文拉法辛胶囊)</td><td>适用于各种类型抑郁症。</td></tr><tr><td align="center">盐酸文拉法辛胶囊(盐酸文拉法辛胶囊)</td><td>适用于各种类型抑郁症</td></tr><tr><td align="center">盐酸文拉法辛片(盐酸文拉法辛片)</td><td>适用于治疗各种类型抑郁症。</td></tr><tr><td align="center">吗氯贝胺片(吗氯贝胺片)</td><td>本品用于治疗抑郁症。</td></tr><tr><td align="center">盐酸安非他酮缓释片(Ⅱ)(盐酸安非他酮缓释片(Ⅱ))</td><td>本品用于治疗抑郁症。</td></tr><tr><td align="center">盐酸文拉法辛胶囊(盐酸文拉法辛胶囊)</td><td>适用于治疗各种类型抑郁症。</td></tr><tr><td align="center">氢溴酸伏硫西汀片(心达悦Brintellix)</td><td>本品用于治疗成人抑郁症。</td></tr><tr><td align="center">盐酸舍曲林胶囊(联环优定)</td><td>舍曲林用于治疗a class=’J-redirect’ data-type=’18’ data-id=’127’ field-id=’2325’&gt;抑郁症/a&gt;的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。br/&gt;br/&gt;舍曲林也用于治疗a class=’J-redirect’ data-type=’18’ data-id=’129’ field-id=’2329’&gt;强迫症/a&gt;，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸舍曲林胶囊(盐酸舍曲林胶囊)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。br/&gt;br/&gt;舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸文拉法辛片(盐酸文拉法辛片)</td><td>适用于治疗各种类型抑郁症。</td></tr><tr><td align="center">盐酸舍曲林胶囊(愈朗)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。 疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。 舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸舍曲林胶囊(郁洛欣)</td><td>​舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸舍曲林分散片(盐酸舍曲林分散片)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸舍曲林片(盐酸舍曲林片)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸舍曲林片(盐酸舍曲林片)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。 舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸文拉法辛胶囊(盐酸文拉法辛胶囊)</td><td>适用于治疗各种类型抑郁症。</td></tr><tr><td align="center">盐酸舍曲林片(申安)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸舍曲林片(贝玉)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸舍曲林片(盐酸舍曲林片)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性，安全性和耐受性。</td></tr><tr><td align="center">盐酸多塞平片(盐酸多塞平片)</td><td>用于治疗抑郁症及焦虑性神经症。</td></tr><tr><td align="center">盐酸舍曲林胶囊(盐酸舍曲林胶囊)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸舍曲林胶囊(盐酸舍曲林胶囊)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸舍曲林片(盐酸舍曲林片)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸舍曲林片(彼迈乐)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸舍曲林片(应思调)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸舍曲林片(伊素明)</td><td>舍曲林用于治疗抑郁症的相关症状，包括伴随焦虑、有或无躁狂史的抑郁症。疗效满意后，继续服用舍曲林可有效地防止抑郁症的复发和再发。舍曲林也用于治疗强迫症，初始治疗有反应后，舍曲林在治疗强迫症二年的时间内，仍保持它的有效性、安全性和耐受性。</td></tr><tr><td align="center">盐酸多塞平片(天平)</td><td>用于治疗抑郁症及焦虑性神经症。</td></tr><tr><td align="center">盐酸多塞平片(盐酸多塞平片)</td><td>用于治疗抑郁症及焦虑性神经症。</td></tr><tr><td align="center">盐酸多塞平片(盐酸多塞平片)</td><td>用于治疗抑郁症及焦虑性神经症。</td></tr><tr><td align="center">盐酸多塞平片(盐酸多塞平片)</td><td>用于治疗抑郁症及焦虑性神经症。</td></tr><tr><td align="center">盐酸曲唑酮片(舒绪)</td><td>本品适用于抑郁症的治疗，对伴有或不伴有焦虑的患者均有效。</td></tr><tr><td align="center">盐酸曲唑酮片(宏发)</td><td>本品适用于抑郁症的治疗，对伴有或不伴有焦虑的患者均有效。</td></tr><tr><td align="center">盐酸氟西汀分散片(盐酸氟西汀分散片)</td><td>抑郁症、强迫症、神经性贪食症：作为心理治疗的辅助用药，以减少贪食和导泻行为。 中度至重度抑郁发作：8岁及以上的儿童和青少年强迫症：7岁及以上的儿童和青少年</td></tr><tr><td align="center">盐酸马普替林片(盐酸马普替林片)</td><td>用于各型抑郁症。对精神分裂症后抑郁也有效。</td></tr><tr><td align="center">盐酸安非他酮缓释片(盐酸安非他酮缓释片)</td><td>1、用于治疗抑郁症。2、用于辅助戒烟。</td></tr><tr><td align="center">盐酸氟西汀分散片(盐酸氟西汀分散片)</td><td>抑郁症; 强迫症; 神经性贪食症：作为心理治疗的辅助用药，以减少贪食和导泻行为。 中度至重度抑郁发作：8岁及以上的儿童和青少年强迫症：7岁及以上的儿童和青少年</td></tr><tr><td align="center">盐酸马普替林片(盐酸马普替林片)</td><td>用于各型抑郁症。对精神分裂症后抑郁也有效。</td></tr><tr><td align="center">草酸艾司西酞普兰片(百洛特)</td><td>治疗抑郁症。治疗伴有或不伴有广场恐怖症的惊恐障碍。</td></tr><tr><td align="center">盐酸曲唑酮片(舒绪)</td><td>本品适用于抑郁症的治疗，对伴有或不伴有焦虑的患者均有效。</td></tr><tr><td align="center">盐酸帕罗西汀片(盐酸帕罗西汀片)</td><td>治疗各种类型的抑郁症，包括伴有焦虑的抑郁症及反应性抑郁症。常见的抑郁症状：乏力、睡眠障碍、对日常活动缺乏兴趣和愉悦感、食欲减退。治疗强迫性神经症。常见的强迫症状：感受反复和持续的可引起明显焦虑的思想、冲动或想象，从而导致重复的行为或心理活动。治疗伴有或不伴有广场恐怖的惊恐障碍。常见的惊恐发作症状：心悸、出汗、气短、胸痛、恶心、麻刺感和濒死感。治疗社交恐怖症/社交焦虑症。常见的社交焦虑的症状：心悸、出汗、气短等。通常表现为继发于显著或持续的对一个或多个社交情景或表演场合的畏惧，从而导致回避。治疗疗效满意后，继续服用本品可防止抑郁症、惊恐障碍和强迫症的复发。</td></tr><tr><td align="center">盐酸马普替林片(盐酸马普替林片)</td><td>用于各型抑郁症。对精神分裂症后抑郁也有效。</td></tr><tr><td align="center">草酸艾司西酞普兰片(草酸艾司西酞普兰片)</td><td>治疗抑郁症。治疗伴有或不伴有广场恐怖症的惊恐障碍。</td></tr><tr><td align="center">盐酸度洛西汀肠溶胶囊(盐酸度洛西汀肠溶胶囊)</td><td>用于治疗抑郁症；用于治疗广泛性焦虑障碍。</td></tr><tr><td align="center">盐酸度洛西汀肠溶胶囊(盐酸度洛西汀肠溶胶囊)</td><td>抑郁症；广泛性焦虑障碍；慢性肌肉骨骼疼痛。</td></tr><tr><td align="center">富马酸喹硫平缓释片(富马酸喹硫平缓释片)</td><td>本品用于治疗精神分裂症和双相情感障碍的抑郁发作。</td></tr><tr><td align="center">盐酸帕罗西汀片(盐酸帕罗西汀片)</td><td>治疗各种类型的抑郁症，包括伴有焦虑的抑郁症及反应性抑郁症。常见的抑郁症状：乏力、睡眠障碍、对日常活动缺乏兴趣和愉悦感、食欲减退。治疗强迫性神经症。常见的强迫症状：感受反复和持续的可引起明显焦虑的思想、冲动或想象、从而导致重复的行为或心理活动。治疗伴有或不伴有广场恐怖的惊恐障碍。常见的惊恐发作症状：心悸、出汗、气短、胸痛、恶心、麻刺感和濒死感。治疗社交恐怖症/社交焦虑症。常见的社交焦虑的症状：心悸、出汗、气短等。通常表现为继发于显著或持续的对一个或多个社交情景或表演场合的畏惧，从而导致回避。治疗疗效满意后，继续服用本品可防止抑郁症、惊恐障碍和强迫症的复发。</td></tr><tr><td align="center">草酸艾司西酞普兰片(草酸艾司西酞普兰片)</td><td>治疗抑郁障碍，治疗伴有或不伴有广场恐怖症的惊恐障碍。</td></tr><tr><td align="center">草酸艾司西酞普兰片(草酸艾司西酞普兰片)</td><td>治疗抑郁障碍，治疗伴有或不伴有广场恐怖症的惊恐障碍。</td></tr><tr><td align="center">草酸艾司西酞普兰片(草酸艾司西酞普兰片)</td><td>治疗抑郁障碍，治疗伴有或不伴有广场恐怖症的惊恐障碍。</td></tr><tr><td align="center">盐酸氟西汀胶囊(盐酸氟西汀胶囊)</td><td>抑郁发作。强迫症。精神性贪食症：可作为心理治疗的补充，用于减少贪食和导泻行为。</td></tr><tr><td align="center">氯普噻吨片(氯普噻吨片)</td><td>用于急性和慢性精神分裂症，适用于伴有精神运动性激越、焦虑、抑郁症状的精神障碍。</td></tr><tr><td align="center">氯普噻吨片(氯普噻吨片)</td><td>用于急性和慢性精神分裂症，适用于伴有精神运动性激越、焦虑、抑郁症状的精神障碍。</td></tr><tr><td align="center">富马酸喹硫平缓释片(思瑞康)</td><td>用于治疗精神分裂症。 用于双相情感障碍的抑郁发作。</td></tr><tr><td align="center">盐酸氯普噻吨注射液(盐酸氯普噻吨注射液)</td><td>用于急性和慢性精神分裂症，适用于伴有精神运动性激越、焦虑、抑郁症状的精神障碍。</td></tr><tr><td align="center">盐酸帕罗西汀肠溶缓释片(盐酸帕罗西汀肠溶缓释片)</td><td>用于治疗成人抑郁症。 在两项对符合美国精神障碍诊断统计手册（第四版）标准的抑郁症门诊患者进行的12周对照临床试验中，确立了盐酸帕罗西汀肠溶缓释片治疗抑郁症发作的有效性。尚未充分研究帕罗西汀对住院抑郁患者的抗抑郁作用。 尚未在对照临床试验中对帕罗西汀肠溶缓释片超过12周的疗效安全性进行系统的评价；可是，在对照临床试验中证实了帕罗西汀速释片对抑郁症患者的长达1年维持治疗的有效性（参见【临床试验】）。医生如果选择帕罗西汀肠溶缓释片进行长期治疗，应该定期对药物用于个体患者的长期有效性进行再评估。</td></tr><tr><td align="center">富马酸喹硫平缓释片(富马酸喹硫平缓释片)</td><td>本品用于治疗精神分裂症和双相情感障碍的抑郁发作。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其它用途有止呕。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>用于精神分裂症单纯型、偏执型、紧张型及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">舒必利注射液(舒必利注射液)</td><td>用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">盐酸丙米嗪片(盐酸丙米嗪片)</td><td>用于各种抑郁症。因具有振奋作用，适用于迟钝型抑郁，但不宜用于激越型抑郁或焦虑性抑郁。亦可用于小儿遗尿症。</td></tr><tr><td align="center">巴戟天寡糖胶囊(巴戟天寡糖胶囊)</td><td>温补肾阳。用于轻中度抑郁症中医辨证属于肾阳虚证者，症见抑郁情绪、心绪低落、失眠多梦、疲倦乏力等。</td></tr><tr><td align="center">盐酸丙米嗪片(盐酸丙米嗪片)</td><td>用于各种抑郁症。因具有振奋作用，适用于迟钝型抑郁，但不宜用于激越型抑郁或焦虑性抑郁。亦可用于小儿遗尿症。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">舒必利片(舒必利片)</td><td>用于精神分裂症单纯型、偏执型、紧张型、及慢性精神分裂症的孤僻、退缩、淡漠症状。对抑郁症状有一定疗效。其他用途有止呕。</td></tr><tr><td align="center">盐酸氟西汀胶囊(盐酸氟西汀胶囊)</td><td>抑郁症：盐酸氟西汀胶囊用于治疗抑郁症状，伴有或不伴有焦虑症状，尤其是不需要镇静作用时。 强迫症。 神经性贪食症：盐酸氟西汀胶囊用于减少贪食和导泻行为。 惊恐障碍：盐酸氟西汀胶囊用于治疗伴有或不伴有广场恐怖症的惊恐障碍。</td></tr><tr><td align="center">槟榔十三味丸(槟榔十三味丸)</td><td>调节“赫依”。安神止痛。用于心悸，失眠，精神失常，游走刺痛。病名注释：“游走刺痛”：本方指类似于胁间神经痛。 “赫依”本方指失眠健忘、神经衰弱、抑郁症、神经官能症、更年期综合症等。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>癫痫：部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。全身性发作：强直、阵挛、强直阵挛发作。三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多 发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛 以及疱疹后神经痛。预防或治疗躁狂-抑郁症；对锂或抗精神病药或抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。中枢性部分性尿崩症，可单用或与氯磺丙脲或氯贝丁酯等合用。酒精癖的戒断综合征。</td></tr><tr><td align="center">碳酸锂片(碳酸锂片)</td><td>主要治疗躁狂症，对躁狂和抑郁交替发作的双相情感性精神障碍有很好的治疗和预防复发作用，对反复发作的抑郁症也有预防发作作用。也用于治疗分裂-情感性精神病。</td></tr><tr><td align="center">奥氮平片(奥氮平片)</td><td>精神分裂症。双相情感障碍躁狂发作。双相情感障碍抑郁发作。奥氮平初始治疗有效的患者，可用于精神分裂症维持治疗和预防双相情感障碍复发。</td></tr><tr><td align="center">盐酸文拉法辛缓释胶囊(盐酸文拉法辛缓释胶囊)</td><td>本品适用于各种类型抑郁症，包括伴有焦虑的抑郁症，及广泛性焦虑症。1. 各种类型抑郁症本品推荐用于治疗各种类型抑郁症。 本品治疗符合诊断与统计手册第三版(修订版)(DSM-III-R)或诊断与统计手册第四版(DSM-IV)诊断标准的门诊成年抑郁症患者的疗效已在8周和12周的对照研究中得到确定。 一次抑郁发作(DSM-IV)是指明显和相对持久(在2周时间内的几乎每一天)的抑郁情绪伴有对几乎所有活动兴趣减退和愉快感的缺失，与其平时的表现明显不同，同时在2周的时间内具有以下9项症状中的5项：抑郁情绪、日常活动中的明显兴趣减退和愉快感缺失、体重和食欲的明显变化、失眠或睡眠过多、精神运动性激越或迟滞、疲劳、自责自罪或无价值感、思维迟缓和注意力难以集中以及自杀意念和自杀行为。 2. 广泛性焦虑症(GAD) 本品推荐用于治疗广泛性焦虑症患者。日常应激相关的焦虑和神经质一般不需要应用抗焦虑药。 在为期8周和6个月的安慰剂对照研究证实本品对符合DSM-IV诊断标准的GAD患者有效。 广泛性焦虑症(DSM-IV)是指维持至少6个月难以控制的过分焦虑和担心(预期)。 至少具有以下6项症状中的3项：坐立不安和神经质、容易疲劳、难以集中注意力或头脑空白、易怒、肌肉震颤和睡眠障碍。 尽管为期6个月的临床研究证实本品对广泛性焦虑症患者有效，但当医生选择本品作为长期治疗时应该定期评估药物对患者的长期疗效(见[用法用量])。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>1、癫痫：部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。全身性发作：强直、阵挛、强直阵挛发作。br/&gt;br/&gt;2、三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。br/&gt;br/&gt;3、预防或治疗躁狂-抑郁症：对锂、抗精神病药、抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其他抗抑郁药合用。br/&gt;br/&gt;4、中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。br/&gt;br/&gt;5、酒精癖的戒断综合征。</td></tr><tr><td align="center">盐酸甲氯芬酯胶囊(盐酸甲氯芬酯胶囊)</td><td>用于改善脑出血、脑手术、脑外伤、脑动脉硬化等引起的意识障碍。亦可用于老年性痴呆、慢性记忆障碍、抑郁症、小儿智力发育迟钝及小儿遗尿症等。</td></tr><tr><td align="center">盐酸甲氯芬酯胶囊(健瑙素)</td><td>用于改善脑出血、脑手术、脑外伤、脑动脉硬化等引起的意识障碍。亦可用于老年性痴呆、慢性记忆障碍、抑郁症、小儿智力发育迟钝及小儿遗尿症等。</td></tr><tr><td align="center">碳酸锂片(碳酸锂片)</td><td>主要治疗躁狂症，对躁狂和抑郁交替发作的双相情感性精神障碍有很好的治疗和预防复发作用，对反复发作的抑郁症也有预防发作作用。也用于治疗分裂-情感性精神病。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>癫痫：部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。全身性发作：强直、阵挛、强直阵挛发作。三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。预防或治疗躁狂-抑郁症；对锂、抗精神病药、抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。酒精癖的戒断综合征。</td></tr><tr><td align="center">槟榔十三味丸(槟榔十三味丸)</td><td>调节“赫依”。安神止痛。用于心悸，失眠，精神失常，游走刺痛。病名注释：“游走刺痛”：本方指类似于胁间神经痛。 “赫依”本方指失眠健忘、神经衰弱、抑郁症、神经官能症、更年期综合症等。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>癫痫：部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。全身性发作：强直、阵挛、强直阵挛发作。三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多 发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛 以及疱疹后神经痛。预防或治疗躁狂-抑郁症；对锂或抗精神病药或抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。中枢性部分性尿崩症，可单用或与氯磺丙脲或氯贝丁酯等合用。酒精癖的戒断综合征。</td></tr><tr><td align="center">碳酸锂片(碳酸锂片)</td><td>主要治疗躁狂症，对躁狂和抑郁交替发作的双相情感性精神障碍有很好的治疗和预防复发作用，对反复发作的抑郁症也有预防发作作用。也用于治疗分裂-情感性精神病。</td></tr><tr><td align="center">奥氮平片(奥氮平片)</td><td>精神分裂症。双相情感障碍躁狂发作。双相情感障碍抑郁发作。奥氮平初始治疗有效的患者，可用于精神分裂症维持治疗和预防双相情感障碍复发。</td></tr><tr><td align="center">盐酸文拉法辛缓释胶囊(盐酸文拉法辛缓释胶囊)</td><td>本品适用于各种类型抑郁症，包括伴有焦虑的抑郁症，及广泛性焦虑症。1. 各种类型抑郁症本品推荐用于治疗各种类型抑郁症。 本品治疗符合诊断与统计手册第三版(修订版)(DSM-III-R)或诊断与统计手册第四版(DSM-IV)诊断标准的门诊成年抑郁症患者的疗效已在8周和12周的对照研究中得到确定。 一次抑郁发作(DSM-IV)是指明显和相对持久(在2周时间内的几乎每一天)的抑郁情绪伴有对几乎所有活动兴趣减退和愉快感的缺失，与其平时的表现明显不同，同时在2周的时间内具有以下9项症状中的5项：抑郁情绪、日常活动中的明显兴趣减退和愉快感缺失、体重和食欲的明显变化、失眠或睡眠过多、精神运动性激越或迟滞、疲劳、自责自罪或无价值感、思维迟缓和注意力难以集中以及自杀意念和自杀行为。 2. 广泛性焦虑症(GAD) 本品推荐用于治疗广泛性焦虑症患者。日常应激相关的焦虑和神经质一般不需要应用抗焦虑药。 在为期8周和6个月的安慰剂对照研究证实本品对符合DSM-IV诊断标准的GAD患者有效。 广泛性焦虑症(DSM-IV)是指维持至少6个月难以控制的过分焦虑和担心(预期)。 至少具有以下6项症状中的3项：坐立不安和神经质、容易疲劳、难以集中注意力或头脑空白、易怒、肌肉震颤和睡眠障碍。 尽管为期6个月的临床研究证实本品对广泛性焦虑症患者有效，但当医生选择本品作为长期治疗时应该定期评估药物对患者的长期疗效(见[用法用量])。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>1、癫痫：部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。全身性发作：强直、阵挛、强直阵挛发作。br/&gt;br/&gt;2、三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。br/&gt;br/&gt;3、预防或治疗躁狂-抑郁症：对锂、抗精神病药、抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其他抗抑郁药合用。br/&gt;br/&gt;4、中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。br/&gt;br/&gt;5、酒精癖的戒断综合征。</td></tr><tr><td align="center">盐酸甲氯芬酯胶囊(盐酸甲氯芬酯胶囊)</td><td>用于改善脑出血、脑手术、脑外伤、脑动脉硬化等引起的意识障碍。亦可用于老年性痴呆、慢性记忆障碍、抑郁症、小儿智力发育迟钝及小儿遗尿症等。</td></tr><tr><td align="center">盐酸甲氯芬酯胶囊(健瑙素)</td><td>用于改善脑出血、脑手术、脑外伤、脑动脉硬化等引起的意识障碍。亦可用于老年性痴呆、慢性记忆障碍、抑郁症、小儿智力发育迟钝及小儿遗尿症等。</td></tr><tr><td align="center">碳酸锂片(碳酸锂片)</td><td>主要治疗躁狂症，对躁狂和抑郁交替发作的双相情感性精神障碍有很好的治疗和预防复发作用，对反复发作的抑郁症也有预防发作作用。也用于治疗分裂-情感性精神病。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>癫痫：部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。全身性发作：强直、阵挛、强直阵挛发作。三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。预防或治疗躁狂-抑郁症；对锂、抗精神病药、抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。酒精癖的戒断综合征。</td></tr><tr><td align="center">槟榔十三味丸(槟榔十三味丸)</td><td>调节“赫依”。安神止痛。用于心悸，失眠，精神失常，游走刺痛。病名注释：“游走刺痛”：本方指类似于胁间神经痛。 “赫依”本方指失眠健忘、神经衰弱、抑郁症、神经官能症、更年期综合症等。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>癫痫：部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。全身性发作：强直、阵挛、强直阵挛发作。三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多 发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛 以及疱疹后神经痛。预防或治疗躁狂-抑郁症；对锂或抗精神病药或抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。中枢性部分性尿崩症，可单用或与氯磺丙脲或氯贝丁酯等合用。酒精癖的戒断综合征。</td></tr><tr><td align="center">碳酸锂片(碳酸锂片)</td><td>主要治疗躁狂症，对躁狂和抑郁交替发作的双相情感性精神障碍有很好的治疗和预防复发作用，对反复发作的抑郁症也有预防发作作用。也用于治疗分裂-情感性精神病。</td></tr><tr><td align="center">奥氮平片(奥氮平片)</td><td>精神分裂症。双相情感障碍躁狂发作。双相情感障碍抑郁发作。奥氮平初始治疗有效的患者，可用于精神分裂症维持治疗和预防双相情感障碍复发。</td></tr><tr><td align="center">盐酸文拉法辛缓释胶囊(盐酸文拉法辛缓释胶囊)</td><td>本品适用于各种类型抑郁症，包括伴有焦虑的抑郁症，及广泛性焦虑症。1. 各种类型抑郁症本品推荐用于治疗各种类型抑郁症。 本品治疗符合诊断与统计手册第三版(修订版)(DSM-III-R)或诊断与统计手册第四版(DSM-IV)诊断标准的门诊成年抑郁症患者的疗效已在8周和12周的对照研究中得到确定。 一次抑郁发作(DSM-IV)是指明显和相对持久(在2周时间内的几乎每一天)的抑郁情绪伴有对几乎所有活动兴趣减退和愉快感的缺失，与其平时的表现明显不同，同时在2周的时间内具有以下9项症状中的5项：抑郁情绪、日常活动中的明显兴趣减退和愉快感缺失、体重和食欲的明显变化、失眠或睡眠过多、精神运动性激越或迟滞、疲劳、自责自罪或无价值感、思维迟缓和注意力难以集中以及自杀意念和自杀行为。 2. 广泛性焦虑症(GAD) 本品推荐用于治疗广泛性焦虑症患者。日常应激相关的焦虑和神经质一般不需要应用抗焦虑药。 在为期8周和6个月的安慰剂对照研究证实本品对符合DSM-IV诊断标准的GAD患者有效。 广泛性焦虑症(DSM-IV)是指维持至少6个月难以控制的过分焦虑和担心(预期)。 至少具有以下6项症状中的3项：坐立不安和神经质、容易疲劳、难以集中注意力或头脑空白、易怒、肌肉震颤和睡眠障碍。 尽管为期6个月的临床研究证实本品对广泛性焦虑症患者有效，但当医生选择本品作为长期治疗时应该定期评估药物对患者的长期疗效(见[用法用量])。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>1、癫痫：部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。全身性发作：强直、阵挛、强直阵挛发作。br/&gt;br/&gt;2、三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。br/&gt;br/&gt;3、预防或治疗躁狂-抑郁症：对锂、抗精神病药、抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其他抗抑郁药合用。br/&gt;br/&gt;4、中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。br/&gt;br/&gt;5、酒精癖的戒断综合征。</td></tr><tr><td align="center">盐酸甲氯芬酯胶囊(盐酸甲氯芬酯胶囊)</td><td>用于改善脑出血、脑手术、脑外伤、脑动脉硬化等引起的意识障碍。亦可用于老年性痴呆、慢性记忆障碍、抑郁症、小儿智力发育迟钝及小儿遗尿症等。</td></tr><tr><td align="center">盐酸甲氯芬酯胶囊(健瑙素)</td><td>用于改善脑出血、脑手术、脑外伤、脑动脉硬化等引起的意识障碍。亦可用于老年性痴呆、慢性记忆障碍、抑郁症、小儿智力发育迟钝及小儿遗尿症等。</td></tr><tr><td align="center">碳酸锂片(碳酸锂片)</td><td>主要治疗躁狂症，对躁狂和抑郁交替发作的双相情感性精神障碍有很好的治疗和预防复发作用，对反复发作的抑郁症也有预防发作作用。也用于治疗分裂-情感性精神病。</td></tr><tr><td align="center">卡马西平片(卡马西平片)</td><td>癫痫：部分性发作：复杂部分性发作、简单部分性发作和继发性全身发作。全身性发作：强直、阵挛、强直阵挛发作。三叉神经痛和舌咽神经痛发作，亦用作三叉神经痛缓解后的长期预防性用药。也可用于脊髓痨和多发性硬化、糖尿病性周围性神经痛、患肢痛和外伤后神经痛以及疱疹后神经痛。预防或治疗躁狂-抑郁症；对锂、抗精神病药、抗抑郁药无效的或不能耐受的躁狂-抑郁症，可单用或与锂盐和其它抗抑郁药合用。中枢性部分性尿崩症，可单用或氯磺丙脲或氯贝丁酯等合用。酒精癖的戒断综合征。</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>抑郁症</category>
      
    </categories>
    
    
    <tags>
      
      <tag>抑郁症</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
